{"version":3,"sources":["utils/constants.js","hooks/useStateWithLocalStorage.js","classes/Api.js","api/api.js","api/auth.js","contexts/CurrentUserContext.jsx","components/Form.jsx","components/FormInput.jsx","components/LoginOrRegister.jsx","components/Login.jsx","components/Register.jsx","components/Authentication.jsx","components/ProtectedRoute.jsx","utils/pkg.js","components/Main.jsx","images/logo.svg","components/Header.jsx","components/Card.jsx","components/Footer.jsx","utils/utils.js","utils/FormValidator.js","components/Popup.jsx","components/PopupWithForm.jsx","utils/enableValidation.js","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ConfirmDeletePopup.jsx","components/ImagePopup.jsx","components/App.jsx","hooks/useStateWithBase64.js","reportWebVitals.js","index.jsx"],"names":["apiDomain","paths","pathNames","title","action","useStateWithLocalStorage","computed","defaultForComputed","useState","localStorage","JSON","parse","currentState","updateCurrentState","localStorageChanged","useCallback","e","key","newValue","setCurrentState","value","stringify","useEffect","listenerArgs","window","addEventListener","removeEventListener","Api","options","_handleFetch","res","ok","json","Promise","reject","status","this","_baseUrl","baseUrl","_headers","headers","_authFormat","authorization","token","target","method","body","fetch","then","api","url","URL","version","endpoints","users","cards","editProfile","name","about","_customFetch","addCard","link","deleteCard","cardId","changeLikeCardStatus","updateAvatar","avatar","origin","signup","signin","user","email","password","_constructAuthorization","data","defaultUserState","CurrentUserContext","React","createContext","CurrentUserDispatchContext","CurrentUserProvider","children","currentUser","setCurrentUser","getUserInfo","catch","err","console","log","Provider","useCurrentUser","context","useContext","undefined","Error","useCurrentUserDispatcher","objectsAreEqual","first","second","sendApiUpdate","dispatch","updates","func","a","expectedUser","updatedUser","Form","memo","props","onSubmit","finalProps","handleSubmit","preventDefault","defaults","PopupInput","forwardRef","forwardedRef","ref","createRef","type","required","conditionalMinLength","minLength","isFocused","inputProps","current","parentElement","document","activeElement","setTimeout","focus","className","id","propsForInputs","autoCorrect","spellCheck","LoginOrRegister","states","setEmail","setPassword","FormInput","autoFocus","placeholder","autoComplete","onChange","passwordAutocomplete","buttonTitle","withRouter","defaultProps","Login","auth","login","handleLogin","history","push","Register","register","statusCode","to","Authentication","atob","location","pathname","ProtectedRoute","loggedIn","repoSplit","repository","split","pop","repo","join","Header","buttonLink","href","alt","src","logo","credential","onClick","Card","card","likes","isTemporarilyLocal","owner","cardDeleteButtonClassNames","_id","cardDeleteButtonClassNameAttrubited","cardDeleteButtonFinalClassName","cardLikeButtonClassNames","some","i","cardLikeButtonClassNameAttributed","cardLikeButtonFinalClassName","onCardClick","onCardDelete","onCardLike","length","defaultCard","defaultCards","Main","useMemo","onEditAvatar","onEditProfile","onAddPlace","map","Math","random","repoSplitted","copyrightLink","yearOfBuild","Date","getFullYear","Footer","rel","author","popupSelectors","defaultFormConfig","formSelector","inputSelector","submitButtonSelector","inputErrorClass","errorClass","FormValidator","element","_showInputError","inputElement","errorMessage","errorElement","_element","querySelector","classList","add","_data","textContent","_hideInputError","remove","_resetFormErrors","_inputList","forEach","_toggleButtonState","_checkInputValidity","validity","valid","validationMessage","_hasInvalidInput","inputList","disable","_buttonElement","disabled","_validationHandler","_setListeners","Array","from","querySelectorAll","classNameClosed","isOpened","classNameOpened","Popup","classNameForAnimation","setClassNameForAnimation","shouldAppearInDOM","setShouldAppearInDOM","isOpen","blur","showingTimout","clearTimeout","hidingTimeout","filter","el","PopupWithForm","propsWithoutCustom","reset","popupId","validationTimeout","formElement","getElementById","enableValidation","onClose","onReset","EditProfilePopup","setName","setAbout","onUpdateUser","autoCapitalize","maxLength","EditAvatarPopup","useRef","onUpdateAvatar","AddPlacePopup","setTitle","setLink","ConfirmDeletePopup","ImagePopup","setLoggedIn","initialState","updateState","setState","btoa","state","useStateWithBase64","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCards","oldCards","isLiked","expectedCardLikes","like","expectedCard","c","newCard","error","closeAllPopups","getInitialCards","handleCardDelete","handlePopupClick","currentTarget","handleUpdateUser","handleUpdateAvatar","escHandler","handleTokenCheck","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.9c21ffda.chunk.js","sourcesContent":["export const apiDomain = 'nomoreparties.co';\n\nexport const paths = {\n  login: '/login',\n  register: '/register',\n  main: '/',\n};\n\nexport const pathNames = {\n  login: {\n    title: 'Вход',\n    action: 'Войти',\n  },\n  register: {\n    title: 'Регистрация',\n    action: 'Зарегистрироваться',\n  },\n  quit: {\n    action: 'Выйти',\n  },\n};\n","import { useState, useCallback, useEffect } from 'react';\n\nexport default function useStateWithLocalStorage(computed, defaultForComputed) {\n  const [currentState, updateCurrentState] = useState(\n    localStorage[computed] ? JSON.parse(localStorage[computed]) : defaultForComputed\n  );\n\n  const localStorageChanged = useCallback(\n    e => {\n      if (e.key === computed) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : defaultForComputed);\n      }\n    },\n    [computed, defaultForComputed]\n  );\n\n  const setCurrentState = useCallback(\n    value => {\n      localStorage[computed] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [computed]\n  );\n\n  useEffect(() => {\n    const listenerArgs = ['storage', localStorageChanged];\n\n    window.addEventListener(...listenerArgs);\n    return () => {\n      window.removeEventListener(...listenerArgs);\n    };\n  }, [localStorageChanged]);\n\n  return [currentState, setCurrentState];\n}\n","export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n\n    this._authFormat = '';\n  }\n\n  _constructAuthorization() {\n    this._headers = {\n      ...this._headers,\n      authorization: this._authFormat + localStorage.token,\n    };\n  }\n\n  _handleFetch = res => (res.ok ? res.json() : Promise.reject(res.status));\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers ?? {},\n    };\n\n    if (method && method !== 'GET') {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options).then(this._handleFetch);\n  }\n}\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst COHORT_ID = 'cohort-24';\nconst TOKEN = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: new URL(`https://mesto.${apiDomain}`),\n  version: 'v1',\n  endpoints: {\n    users: 'users/me',\n    cards: 'cards',\n  },\n};\n\nclass Features extends Api {\n  getUserInfo() {\n    return this._customFetch(api.endpoints.users);\n  }\n\n  getInitialCards() {\n    return this._customFetch(api.endpoints.cards);\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch(api.endpoints.users, 'PATCH', {\n      name,\n      about,\n    });\n\n  addCard = (name, link) =>\n    this._customFetch(api.endpoints.cards, 'POST', {\n      name,\n      link,\n    });\n\n  deleteCard = cardId => this._customFetch(`${api.endpoints.cards}/${cardId}`, 'DELETE');\n\n  changeLikeCardStatus = (cardId, status) =>\n    this._customFetch(`${api.endpoints.cards}/likes/${cardId}`, status ? 'PUT' : 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch(`${api.endpoints.users}/avatar`, 'PATCH', {\n      avatar,\n    });\n}\n\nexport default new Features({\n  baseUrl: `${api.url.origin}/${api.version}/${COHORT_ID}`,\n  headers: {\n    authorization: TOKEN,\n  },\n});\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst api = {\n  url: new URL(`https://auth.${apiDomain}`),\n  endpoints: {\n    signup: 'signup',\n    signin: 'signin',\n    user: 'users/me',\n  },\n};\n\nclass Auth extends Api {\n  constructor(options) {\n    super(options);\n\n    this._authFormat = 'Bearer ';\n  }\n\n  register(email, password) {\n    return this._customFetch(api.endpoints.signup, 'POST', { password, email });\n  }\n\n  login(email, password) {\n    return this._customFetch(api.endpoints.signin, 'POST', { password, email });\n  }\n\n  getUserInfo() {\n    this._constructAuthorization();\n\n    return this._customFetch(api.endpoints.user).then(res => res.data);\n  }\n}\n\nexport default new Auth({\n  baseUrl: api.url.origin,\n});\n","import React from 'react';\n\nimport api from '../api/api';\n\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\n\nconst defaultUserState = {\n  name: 'Неизвестный',\n  about: 'Потеряно соединение с сервером',\n};\n\nconst CurrentUserContext = React.createContext();\nconst CurrentUserDispatchContext = React.createContext();\n\nfunction CurrentUserProvider({ children }) {\n  const [currentUser, setCurrentUser] = useStateWithLocalStorage('currentUser', defaultUserState);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then(setCurrentUser)\n      .catch(err => console.log('Couldnt get user info from the server', err));\n  }, [setCurrentUser]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <CurrentUserDispatchContext.Provider value={setCurrentUser}>\n        {children}\n      </CurrentUserDispatchContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nfunction useCurrentUser() {\n  const context = React.useContext(CurrentUserContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUser must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction useCurrentUserDispatcher() {\n  const context = React.useContext(CurrentUserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUserDispatcher must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction objectsAreEqual(first, second) {\n  return JSON.stringify(first) === JSON.stringify(second);\n}\n\nasync function sendApiUpdate(dispatch, user, updates, func) {\n  const expectedUser = { ...user, ...updates };\n  dispatch(expectedUser);\n\n  try {\n    const updatedUser = await api[func](updates);\n    if (!objectsAreEqual(expectedUser, updatedUser)) {\n      dispatch(updatedUser);\n    }\n  } catch (error) {\n    dispatch(user);\n    throw error;\n  }\n}\n\nexport { CurrentUserProvider, useCurrentUser, useCurrentUserDispatcher, sendApiUpdate };\n","import { memo, useCallback } from 'react';\n\nconst Form = memo(props => {\n  const { onSubmit, ...finalProps } = props;\n\n  const handleSubmit = useCallback(\n    e => {\n      if (onSubmit) {\n        e.preventDefault();\n\n        onSubmit(e);\n      }\n    },\n    [onSubmit]\n  );\n\n  return (\n    <form action=\"#\" onSubmit={handleSubmit} {...finalProps}>\n      {props.children}\n    </form>\n  );\n});\n\nexport default Form;\n","import { forwardRef, createRef, useEffect } from 'react';\n\nconst defaults = {\n  type: 'text',\n  required: true,\n  minLength: 2,\n};\n\nconst PopupInput = forwardRef((props, forwardedRef) => {\n  const ref = forwardedRef ?? createRef();\n\n  const type = props.type ?? defaults.type;\n\n  const required = props.required ?? defaults.required;\n\n  const conditionalMinLength = type === defaults.type ? defaults.minLength : null;\n  const minLength = props.minLength ?? conditionalMinLength;\n\n  const finalProps = {\n    type,\n    minLength,\n    required,\n    ref,\n  };\n\n  const { isFocused, ...inputProps } = props;\n\n  useEffect(() => {\n    if (\n      isFocused &&\n      ref &&\n      ref.current &&\n      ref.current.parentElement !== document.activeElement.parentElement\n    ) {\n      setTimeout(() => {\n        ref && ref.current && ref.current.focus();\n      }, 50);\n    }\n  }, [isFocused, ref]);\n\n  return (\n    <>\n      <input\n        {...inputProps}\n        className={`form__input${inputProps.className ? ` ${inputProps.className}` : ''}`}\n        {...finalProps}\n      />\n      <p className=\"form__error\" id={`${props.id}-error`} />\n    </>\n  );\n});\n\nexport default PopupInput;\n","import { memo } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Form from './Form';\nimport FormInput from './FormInput';\n\nconst propsForInputs = {\n  autoCorrect: 'off',\n  spellCheck: false,\n  className: 'form__input_theme_dark',\n};\n\nconst LoginOrRegister = memo(props => {\n  const [email, setEmail] = props.states.email;\n  const [password, setPassword] = props.states.password;\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <div className=\"auth\">\n      <h2 className=\"auth__title\">{props.title}</h2>\n\n      <Form onSubmit={props.onSubmit} className=\"form\">\n        <FormInput\n          {...propsForInputs}\n          autoFocus\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          autoComplete=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n        <FormInput\n          {...propsForInputs}\n          id={props.passwordAutocomplete}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Пароль\"\n          autoComplete={props.passwordAutocomplete}\n          value={password}\n          onChange={handlePasswordChange}\n        />\n        <button type=\"submit\" className=\"auth__button form__button form__button_theme_dark\">\n          {props.buttonTitle}\n        </button>\n      </Form>\n      {props.children}\n    </div>\n  );\n});\n\nexport default withRouter(LoginOrRegister);\n","import { memo } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\n\nimport auth from '../api/auth';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'current-password',\n  title: pathNames.login.title,\n  buttonTitle: pathNames.login.action,\n};\n\nconst Login = memo(props => {\n  const [email, setEmail] = props.states.email;\n  const [password, setPassword] = props.states.password;\n\n  function handleSubmit() {\n    if (!email || !password) {\n      return;\n    }\n\n    auth\n      .login(email, password)\n      .then(data => {\n        if (data.token) {\n          setEmail('');\n          setPassword('');\n\n          localStorage.token = data.token;\n\n          props.handleLogin(email);\n          props.history.push(paths.main);\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  return <LoginOrRegister onSubmit={handleSubmit} {...props} {...defaultProps} />;\n});\n\nexport default withRouter(Login);\n","import { memo } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\n\nimport auth from '../api/auth';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'new-password',\n  title: pathNames.register.title,\n  buttonTitle: pathNames.register.action,\n};\n\nconst Register = memo(props => {\n  const [email] = props.states.email;\n  const [password] = props.states.password;\n\n  function handleSubmit() {\n    auth.register(email, password).then(res => {\n      if (res.statusCode !== 400) {\n        props.history.push(paths.login);\n      }\n    });\n  }\n\n  return (\n    <LoginOrRegister onSubmit={handleSubmit} {...props} {...defaultProps}>\n      <div className=\"auth__signin\">\n        Уже зарегистрированы?{' '}\n        <Link to={paths.login} className=\"auth__login-link\">\n          {pathNames.login.action}\n        </Link>\n      </div>\n    </LoginOrRegister>\n  );\n});\n\nexport default withRouter(Register);\n","import { memo, useState } from 'react';\nimport { withRouter } from 'react-router';\n\nimport { paths } from '../utils/constants';\n\nimport Login from './Login';\nimport Register from './Register';\n\nconst Authentication = memo(props => {\n  const states = {\n    email: useState(localStorage.email ? atob(JSON.parse(localStorage.email)) : ''),\n    password: useState(''),\n  };\n\n  const pathIsLogin = props.location.pathname === paths.login;\n\n  return pathIsLogin ? (\n    <Login handleLogin={props.handleLogin} states={states} />\n  ) : (\n    <Register states={states} />\n  );\n});\n\nexport default withRouter(Authentication);\n","import { Route, Redirect } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nconst ProtectedRoute = props => {\n  return <Route>{props.loggedIn ? props.children : <Redirect to={paths.login} />}</Route>;\n};\n\nexport default ProtectedRoute;\n","import { repository } from '../../package.json';\n\nconst repoSeparator = '.';\n\nconst repoSplit = repository.url.split(repoSeparator);\nrepoSplit.pop();\n\nconst repoJoined = repoSplit.join(repoSeparator);\n\nexport const repo = repoJoined.split('+')[1];\n","import { memo, useMemo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Card from './Card';\n\nconst MAXIMUM_CARDS_QUANTITY = 30;\n\nconst defaultCard = {\n  isTemporarilyLocal: true,\n  name: 'Загрузка...',\n};\n\nconst defaultCards = [];\nfor (let i = 0; i < MAXIMUM_CARDS_QUANTITY; i++) {\n  defaultCards.push(defaultCard);\n}\n\nconst Main = memo(props => {\n  const currentUser = useCurrentUser();\n\n  const cards = useMemo(() => (props.cards.length ? props.cards : defaultCards), [props.cards]);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n          <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar} />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__description\">{currentUser.about}</p>\n          <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n        </div>\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {cards.map(card => (\n            <Card\n              key={card._id ?? Math.random()}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              card={card}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n});\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import { memo } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\nimport { repo } from '../utils/pkg';\n\nimport logo from '../images/logo.svg';\n\nconst Header = memo(props => {\n  let buttonTitle;\n  let buttonLink = paths.login;\n  let loggedIn = false;\n\n  switch (props.location.pathname) {\n    case paths.login:\n      buttonTitle = pathNames.register.title;\n      buttonLink = paths.register;\n      break;\n\n    case paths.register:\n      buttonTitle = pathNames.login.action;\n      break;\n\n    default:\n      buttonTitle = pathNames.quit.action;\n      loggedIn = true;\n      break;\n  }\n\n  function signOut() {\n    delete localStorage.token;\n    props.history.push(paths.login);\n  }\n\n  return (\n    <header className=\"header\">\n      <a target=\"_self\" href={repo} className=\"logo header__logo\">\n        <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n      </a>\n      <div className=\"header__container\">\n        {loggedIn && props.credential ? (\n          <p className=\"header__credential\">{props.credential}</p>\n        ) : null}\n        <Link\n          to={buttonLink}\n          onClick={loggedIn ? signOut : null}\n          className={`header__action-button${loggedIn ? ' header__action-button_dimmed' : ''}`}\n        >\n          {buttonTitle}\n        </Link>\n      </div>\n    </header>\n  );\n});\n\nexport default withRouter(Header);\n","import { memo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst defaults = {\n  cardDeleteButtonClassName: 'element__trash-button',\n  cardLikeButtonClassName: 'element__like-button',\n};\n\nconst Card = memo(props => {\n  const { card } = props;\n\n  card.likes = card.likes ?? [];\n\n  const currentUser = useCurrentUser();\n\n  if (card.isTemporarilyLocal) {\n    card.owner = currentUser;\n  }\n\n  const cardDeleteButtonClassNames = [defaults.cardDeleteButtonClassName];\n\n  const isOwn = card.owner._id === currentUser._id;\n  if (isOwn) {\n    const cardDeleteButtonClassNameAttrubited = `${defaults.cardDeleteButtonClassName}_visible`;\n    cardDeleteButtonClassNames.push(cardDeleteButtonClassNameAttrubited);\n  }\n\n  const cardDeleteButtonFinalClassName = cardDeleteButtonClassNames.join(' ');\n\n  const cardLikeButtonClassNames = [defaults.cardLikeButtonClassName];\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  if (isLiked) {\n    const cardLikeButtonClassNameAttributed = `${defaults.cardLikeButtonClassName}_active`;\n    cardLikeButtonClassNames.push(cardLikeButtonClassNameAttributed);\n  }\n\n  const cardLikeButtonFinalClassName = cardLikeButtonClassNames.join(' ');\n\n  function handleImageClick() {\n    props.onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"element\">\n      <img onClick={handleImageClick} className=\"element__image\" alt={card.name} src={card.link} />\n      <button onClick={handleDeleteClick} type=\"reset\" className={cardDeleteButtonFinalClassName} />\n      <div className=\"element__container\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <button\n            onClick={handleLikeClick}\n            type=\"button\"\n            className={cardLikeButtonFinalClassName}\n          />\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n});\n\nexport default Card;\n","import { memo } from 'react';\n\nimport { author } from '../../package.json';\n\nimport { repo } from '../utils/pkg';\n\nconst linkSeparator = '/';\n\nconst repoSplitted = repo.split(linkSeparator);\nrepoSplitted.pop();\n\nconst copyrightLink = repoSplitted.join(linkSeparator);\n\nconst yearOfBuild = new Date().getFullYear();\n\nconst Footer = memo(() => (\n  <footer className=\"footer\">\n    <a target=\"_blank\" rel=\"noreferrer\" href={copyrightLink} className=\"footer__copyright\">\n      &copy; {yearOfBuild} {author}\n    </a>\n  </footer>\n));\n\nexport default Footer;\n","export const popupSelectors = {\n  closeButtonClass: 'popup__close-button',\n};\n\nexport const defaultFormConfig = {\n  formSelector: '.form',\n  inputSelector: '.form__input',\n  submitButtonSelector: '.form__button',\n  inputErrorClass: 'form__input_type_error',\n  errorClass: 'form__error_visible',\n};\n","export default class FormValidator {\n  constructor(data, element) {\n    this._data = data;\n    this._element = element;\n\n    this._inputList = Array.from(this._element.querySelectorAll(this._data.inputSelector));\n\n    this._buttonElement = this._element.querySelector(this._data.submitButtonSelector);\n  }\n\n  enableValidation() {\n    this._toggleButtonState();\n\n    this._setListeners();\n  }\n\n  _showInputError = (inputElement, errorMessage) => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.add(this._data.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._data.errorClass);\n  };\n\n  _hideInputError = inputElement => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(this._data.inputErrorClass);\n    errorElement.classList.remove(this._data.errorClass);\n    errorElement.textContent = '';\n  };\n\n  _resetFormErrors = () => {\n    this._inputList.forEach(inputElement => this._hideInputError(inputElement));\n    this._toggleButtonState(1);\n  };\n\n  _checkInputValidity = inputElement =>\n    inputElement.validity.valid\n      ? this._hideInputError(inputElement)\n      : this._showInputError(inputElement, inputElement.validationMessage);\n\n  _hasInvalidInput = inputList => inputList.some(inputElement => !inputElement.validity.valid);\n\n  _toggleButtonState = disable =>\n    (this._buttonElement.disabled = disable || this._hasInvalidInput(this._inputList));\n\n  _validationHandler = inputElement => {\n    this._checkInputValidity(inputElement);\n\n    this._toggleButtonState();\n  };\n\n  _setListeners = () => {\n    this._element.addEventListener('reset', this._resetFormErrors);\n\n    this._inputList.forEach(inputElement => {\n      if (inputElement.value) {\n        this._validationHandler(inputElement);\n      }\n      inputElement.addEventListener('input', () => this._validationHandler(inputElement));\n    });\n  };\n}\n","import { useState, useEffect, memo } from 'react';\n\nconst POPUP_ANIMATION_DURATION = 300;\n\nconst defaults = {\n  className: 'popup',\n  classNameClosed: '',\n  isOpened: false,\n};\ndefaults.classNameOpened = `${defaults.className}_opened`;\n\nconst Popup = memo(props => {\n  const [classNameForAnimation, setClassNameForAnimation] = useState(defaults.classNameClosed);\n  const [shouldAppearInDOM, setShouldAppearInDOM] = useState(defaults.isOpened);\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      document.activeElement.blur(); // fixes mobile keyboard being stuck on the screen after form submission (due to `event.preventDefault()`)\n    }\n\n    if (props.isOpen) {\n      setShouldAppearInDOM(!defaults.isOpened);\n      const showingTimout = setTimeout(() => {\n        setClassNameForAnimation(defaults.classNameOpened);\n      }, 10);\n\n      return () => clearTimeout(showingTimout);\n    } else {\n      setClassNameForAnimation(defaults.classNameClosed);\n      const hidingTimeout = setTimeout(() => {\n        setShouldAppearInDOM(defaults.isOpened);\n      }, POPUP_ANIMATION_DURATION);\n\n      return () => clearTimeout(hidingTimeout);\n    }\n  }, [props.isOpen]);\n\n  if (!shouldAppearInDOM) {\n    return null;\n  }\n\n  const classNames = [defaults.className, props.className, classNameForAnimation].filter(\n    el => el != null && el !== ''\n  );\n\n  const className = classNames.join(' ');\n\n  return (\n    <section onClick={props.onClick} className={className} id={props.id}>\n      {props.children}\n    </section>\n  );\n});\n\nexport default Popup;\n","import { memo, useCallback, useEffect } from 'react';\n\nimport { popupSelectors } from '../utils/utils';\nimport enableValidation from '../utils/enableValidation';\nimport { defaultFormConfig } from '../utils/utils';\n\nimport Popup from './Popup';\nimport Form from './Form';\n\nconst defaultButtonTitle = 'Сохранить';\n\nconst PopupWithForm = memo(props => {\n  const { onSubmit, children, ...propsWithoutCustom } = props;\n  props = propsWithoutCustom;\n\n  const buttonTitle = props.buttonTitle ?? defaultButtonTitle;\n\n  const handleSubmit = useCallback(\n    e => {\n      onSubmit && onSubmit(e);\n\n      if (children) {\n        e.target.reset();\n      }\n    },\n    [children, onSubmit]\n  );\n\n  const popupId = props.name;\n\n  useEffect(() => {\n    if (props.isOpen) {\n      const validationTimeout = setTimeout(() => {\n        enableValidation(\n          document.getElementById(popupId).querySelector(defaultFormConfig.formSelector)\n        );\n      }, 1);\n\n      return () => clearTimeout(validationTimeout);\n    }\n  }, [popupId, props.isOpen]);\n\n  return (\n    <Popup isOpen={props.isOpen} onClick={props.onClose} id={popupId}>\n      <div className=\"popup__container\">\n        <button type=\"reset\" className={popupSelectors.closeButtonClass} />\n        <h2 className=\"popup__title\">{props.title}</h2>\n\n        <Form className=\"form\" onSubmit={handleSubmit} onReset={props.onReset}>\n          {children}\n          <button type=\"submit\" className=\"popup__button form__button\">\n            {buttonTitle}\n          </button>\n        </Form>\n      </div>\n    </Popup>\n  );\n});\n\nexport default PopupWithForm;\n","import FormValidator from './FormValidator';\nimport { defaultFormConfig } from './utils';\n\nexport default function enableValidation(formElement) {\n  const profileEditorValidator = new FormValidator(defaultFormConfig, formElement);\n  profileEditorValidator.enableValidation();\n}\n","import { useState, useEffect, memo } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst EditProfilePopup = memo(props => {\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setAbout(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit() {\n    sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        name,\n        about,\n      },\n      'editProfile'\n    );\n\n    props.onUpdateUser();\n  }\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleAboutChange(e) {\n    setAbout(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Редактировать профиль\"\n      name=\"profile-editor\"\n    >\n      <PopupInput\n        isFocused={props.isOpen}\n        value={name}\n        onChange={handleNameChange}\n        autoComplete=\"name\"\n        autoCapitalize=\"words\"\n        name=\"name\"\n        id=\"profile-name\"\n        placeholder=\"Имя\"\n        maxLength=\"40\"\n      />\n\n      <PopupInput\n        value={about}\n        onChange={handleAboutChange}\n        name=\"about\"\n        id=\"profile-about\"\n        placeholder=\"О себе\"\n        maxLength=\"200\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditProfilePopup;\n","import { memo, useRef } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst EditAvatarPopup = memo(props => {\n  const ref = useRef();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  function handleSubmit() {\n    sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        avatar: ref.current.value,\n      },\n      'updateAvatar'\n    );\n\n    props.onUpdateAvatar();\n  }\n\n  return (\n    <PopupWithForm {...props} onSubmit={handleSubmit} title=\"Обновить аватар\" name=\"avatar-editor\">\n      <PopupInput\n        isFocused={props.isOpen}\n        ref={ref}\n        type=\"url\"\n        name=\"avatar\"\n        id=\"profile-avatar\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditAvatarPopup;\n","import { memo, useState } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst defaults = {\n  title: '',\n  link: '',\n};\n\nconst AddPlacePopup = memo(props => {\n  const [title, setTitle] = useState(defaults.title);\n  const [link, setLink] = useState(defaults.link);\n\n  function handleSubmit() {\n    props.onAddPlace(title, link);\n  }\n\n  function handleReset() {\n    setTitle(defaults.title);\n    setLink(defaults.link);\n  }\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      title=\"Новое место\"\n      name=\"element-editor\"\n      buttonTitle=\"Создать\"\n    >\n      <PopupInput\n        isFocused={props.isOpen}\n        value={title}\n        onChange={handleTitleChange}\n        name=\"title\"\n        id=\"element-title\"\n        placeholder=\"Название\"\n        maxLength=\"30\"\n      />\n\n      <PopupInput\n        value={link}\n        onChange={handleLinkChange}\n        type=\"url\"\n        name=\"link\"\n        id=\"element-link\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default AddPlacePopup;\n","import { memo } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = memo(props => {\n  function handleSubmit() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Вы уверены?\"\n      name=\"delete-confirmation\"\n      buttonTitle=\"Да\"\n    />\n  );\n});\n\nexport default ConfirmDeletePopup;\n","import { memo } from 'react';\n\nimport { popupSelectors } from '../utils/utils';\n\nimport Popup from './Popup';\n\nconst classNames = [\n  popupSelectors.closeButtonClass,\n  `${popupSelectors.closeButtonClass}_parent-corners_straight`,\n];\n\nconst className = classNames.join(' ');\n\nconst ImagePopup = memo(props => {\n  const card = props.card;\n\n  return (\n    <Popup\n      isOpen={props.isOpen}\n      onClick={props.onClose}\n      className=\"popup_type_image\"\n      id=\"image-viewer\"\n    >\n      <figure className=\"popup__figure\">\n        <button type=\"button\" className={className} />\n        <img className=\"popup__image\" alt={card.name} src={card.link} />\n        <figcaption className=\"popup__caption\">{card.name}</figcaption>\n      </figure>\n    </Popup>\n  );\n});\n\nexport default ImagePopup;\n","import React from 'react';\n\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\nimport useStateWithBase64 from '../hooks/useStateWithBase64';\nimport api from '../api/api';\nimport auth from '../api/auth';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Authentication from './Authentication';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\n\nfunction App(props) {\n  const currentUser = useCurrentUser();\n\n  const [loggedIn, setLoggedIn] = React.useState(!!localStorage.token);\n  const [email, setEmail] = useStateWithBase64('email', '');\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [cards, setCards] = useStateWithLocalStorage('cards', []);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch(err => console.log('Couldnt get initial cards from the server', err));\n  }, [setCards]);\n\n  async function handleCardLike(card) {\n    const oldCards = cards;\n\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    const expectedCardLikes = isLiked\n      ? card.likes.filter(like => like._id !== currentUser._id)\n      : [...card.likes, currentUser];\n\n    const expectedCard = { ...card, likes: expectedCardLikes };\n\n    setCards(cards.map(c => (c._id === card._id ? expectedCard : c)));\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n      setCards(cards.map(c => (c._id === card._id ? newCard : c)));\n    } catch (error) {\n      setCards(oldCards);\n      console.error(error);\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  const handleCardDelete = React.useCallback(\n    card => {\n      const oldCards = cards;\n\n      setCards(cards.filter(c => c._id !== card._id));\n\n      api.deleteCard(card._id).catch(error => {\n        setCards(oldCards);\n        throw error;\n      });\n\n      closeAllPopups();\n    },\n    [cards, setCards]\n  );\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmDeleteClick(card) {\n    setSelectedCard(card);\n\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n\n    setIsImagePopupOpen(true);\n  }\n\n  const handlePopupClick = React.useCallback(e => {\n    if (e.target === e.currentTarget) {\n      closeAllPopups();\n    }\n  }, []);\n\n  const handleUpdateUser = closeAllPopups;\n  const handleUpdateAvatar = closeAllPopups;\n\n  function handleAddPlaceSubmit(title, link) {\n    const oldCards = cards;\n\n    const expectedCard = {\n      isTemporarilyLocal: true,\n      name: title,\n      link,\n    };\n\n    setCards([expectedCard, ...cards]);\n\n    api\n      .addCard(title, link)\n      .then(newCard => setCards([newCard, ...cards]))\n      .catch(() => setCards(oldCards));\n\n    closeAllPopups();\n  }\n\n  const escHandler = React.useCallback(e => {\n    if (e.key === 'Escape') {\n      closeAllPopups();\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const listenerArgs = ['keydown', escHandler, false];\n\n    document.addEventListener(...listenerArgs);\n\n    return () => document.removeEventListener(...listenerArgs);\n  }, [escHandler]);\n\n  const handleLogin = React.useCallback(\n    email => {\n      setEmail(email);\n      setLoggedIn(true);\n    },\n    [setEmail]\n  );\n\n  const handleTokenCheck = React.useCallback(() => {\n    if (localStorage.token) {\n      auth.token = localStorage.token;\n      auth\n        .getUserInfo()\n        .then(res => {\n          if (res) {\n            handleLogin(res.email);\n            props.history.push(paths.main);\n          }\n        })\n        .catch(err => {\n          setLoggedIn(false);\n\n          console.log(err);\n        });\n    }\n  }, [handleLogin, props.history]);\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, [handleTokenCheck]);\n\n  return (\n    <>\n      <Header credential={email} />\n      <Switch>\n        <Route path={[paths.register, paths.login]}>\n          <Authentication handleLogin={handleLogin} />\n        </Route>\n        <ProtectedRoute path={paths.main} loggedIn={loggedIn}>\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDeleteClick}\n          />\n\n          <EditProfilePopup\n            onUpdateUser={handleUpdateUser}\n            isOpen={isEditProfilePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <AddPlacePopup\n            onAddPlace={handleAddPlaceSubmit}\n            isOpen={isAddPlacePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdateAvatar}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <ConfirmDeletePopup\n            card={selectedCard}\n            onCardDelete={handleCardDelete}\n            isOpen={isConfirmDeletePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={handlePopupClick} />\n        </ProtectedRoute>\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default withRouter(App);\n","import { useCallback, useEffect, useRef } from 'react';\nimport useStateWithLocalStorage from './useStateWithLocalStorage';\n\nexport default function useStateWithBase64(computed, defaultForComputed) {\n  const [initialState, updateState] = useStateWithLocalStorage(computed, defaultForComputed);\n\n  const setState = useCallback(\n    value => {\n      updateState(btoa(value));\n    },\n    [updateState]\n  );\n\n  const state = useRef(atob(initialState));\n\n  useEffect(() => {\n    state.current = atob(initialState);\n  });\n\n  return [state.current, setState];\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <CurrentUserProvider>\n        <App />\n      </CurrentUserProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}