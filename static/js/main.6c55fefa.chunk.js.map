{"version":3,"sources":["utils/constants.js","hooks/useStateWithLocalStorage.js","classes/Api.js","api/api.js","api/auth.js","contexts/CurrentUserContext.jsx","utils/utils.js","components/Form.jsx","components/FormInput.jsx","components/LoginOrRegister.jsx","components/Login.jsx","components/Register.jsx","components/Authentication.jsx","hooks/useStateWithBase64.js","components/ProtectedRoute.jsx","utils/pkg.js","components/Main.jsx","images/logo.svg","components/Header.jsx","components/Card.jsx","components/Footer.jsx","utils/FormValidator.js","components/Popup.jsx","components/PopupWithForm.jsx","utils/enableValidation.js","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ConfirmDeletePopup.jsx","components/ImagePopup.jsx","images/check.svg","images/cross.svg","components/InfoTooltip.jsx","components/App.jsx","hooks/useEscapeHandler.js","reportWebVitals.js","index.jsx"],"names":["apiDomain","paths","pathNames","title","action","useStateWithLocalStorage","computed","defaultForComputed","useState","localStorage","JSON","parse","currentState","updateCurrentState","localStorageChanged","useCallback","e","key","newValue","setCurrentState","value","stringify","useEffect","listenerArgs","window","addEventListener","removeEventListener","Api","options","_handleFetch","res","ok","json","Promise","reject","status","this","_baseUrl","baseUrl","_headers","headers","_authFormat","authorization","token","target","method","body","fetch","then","api","url","URL","version","endpoints","users","cards","editProfile","name","about","_customFetch","addCard","link","deleteCard","cardId","changeLikeCardStatus","updateAvatar","avatar","origin","signup","signin","user","email","password","_constructAuthorization","data","defaultUserState","CurrentUserContext","React","createContext","CurrentUserDispatchContext","CurrentUserProvider","state","dispatch","children","Provider","useCurrentUser","context","useContext","undefined","Error","useCurrentUserDispatcher","objectsAreEqual","first","second","sendApiUpdate","updates","func","a","expectedUser","updatedUser","console","log","classToSelector","className","popupSelectors","formClassesConfig","defaultFormConfig","formSelector","inputSelector","submitButtonSelector","inputErrorClass","errorClass","Form","memo","props","onSubmit","finalProps","handleSubmit","preventDefault","defaults","PopupInput","forwardRef","forwardedRef","ref","createRef","type","required","conditionalMinLength","minLength","isFocused","inputProps","current","parentElement","document","activeElement","setTimeout","focus","id","propsForInputs","autoCorrect","spellCheck","inputNames","LoginOrRegister","states","setEmail","setPassword","onReset","FormInput","autoFocus","placeholder","autoComplete","onChange","passwordAutocomplete","buttonTitle","defaultProps","Login","handleLogin","Register","handleRegister","to","Authentication","elementName","atob","loggedIn","path","ProtectedRoute","repoSplit","repository","split","pop","repo","join","Header","history","useHistory","location","useLocation","setLoggedIn","buttonLink","pathname","href","alt","src","logo","credential","onClick","replace","Card","card","likes","currentUser","isTemporarilyLocal","owner","cardDeleteButtonClassNames","_id","cardDeleteButtonClassNameAttrubited","push","cardDeleteButtonFinalClassName","cardLikeButtonClassNames","some","i","cardLikeButtonClassNameAttributed","cardLikeButtonFinalClassName","onCardClick","onCardDelete","onCardLike","length","defaultCard","defaultCards","Main","useMemo","onEditAvatar","onEditProfile","onAddPlace","map","Math","random","repoSplitted","copyrightLink","yearOfBuild","Date","getFullYear","Footer","rel","author","FormValidator","element","_showInputError","inputElement","errorMessage","errorElement","_element","querySelector","classList","add","_data","textContent","_hideInputError","remove","_resetFormErrors","_inputList","forEach","_toggleButtonState","_checkInputValidity","validity","valid","validationMessage","_hasInvalidInput","inputList","disable","_buttonElement","disabled","_validationHandler","_setListeners","Array","from","querySelectorAll","classNameClosed","isOpened","classNameOpened","modalRoot","getElementById","Popup","classNameForAnimation","setClassNameForAnimation","shouldAppearInDOM","setShouldAppearInDOM","isOpen","blur","showingTimout","clearTimeout","hidingTimeout","filter","el","createPortal","PopupWithForm","propsWithoutCustom","reset","popupId","validationTimeout","formElement","enableValidation","onClose","EditProfilePopup","setName","setAbout","setCurrentUser","onUpdateUser","autoCapitalize","maxLength","EditAvatarPopup","useRef","onUpdateAvatar","AddPlacePopup","setTitle","setLink","ConfirmDeletePopup","ImagePopup","InfoTooltip","isSuccess","style","checkIcon","crossIcon","backgroundImage","App","initialState","updateState","setState","btoa","useStateWithBase64","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","isInfoTooltipSuccess","setIsInfoTooltipSuccess","selectedCard","setSelectedCard","setCards","oldCards","isLiked","expectedCardLikes","like","expectedCard","c","newCard","error","closeAllPopups","getUserInfo","catch","err","getInitialCards","handleCardDelete","handlePopupClick","currentTarget","handleUpdateUser","handleUpdateAvatar","escHandler","useEscapeHandler","handleTokenCheck","auth","login","e_","register","finally","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.6c55fefa.chunk.js","sourcesContent":["export const apiDomain = 'nomoreparties.co';\n\nexport const paths = {\n  login: '/login',\n  register: '/register',\n  main: '/',\n};\n\nexport const pathNames = {\n  login: {\n    title: 'Вход',\n    action: 'Войти',\n  },\n  register: {\n    title: 'Регистрация',\n    action: 'Зарегистрироваться',\n  },\n  quit: {\n    action: 'Выйти',\n  },\n};\n","import { useState, useCallback, useEffect } from 'react';\n\nexport default function useStateWithLocalStorage(computed, defaultForComputed) {\n  const [currentState, updateCurrentState] = useState(\n    localStorage[computed] ? JSON.parse(localStorage[computed]) : defaultForComputed\n  );\n\n  const localStorageChanged = useCallback(\n    e => {\n      if (e.key === computed) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : defaultForComputed);\n      }\n    },\n    [computed, defaultForComputed]\n  );\n\n  const setCurrentState = useCallback(\n    value => {\n      localStorage[computed] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [computed]\n  );\n\n  useEffect(() => {\n    const listenerArgs = ['storage', localStorageChanged];\n\n    window.addEventListener(...listenerArgs);\n    return () => {\n      window.removeEventListener(...listenerArgs);\n    };\n  }, [localStorageChanged]);\n\n  return [currentState, setCurrentState];\n}\n","export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n\n    this._authFormat = '';\n  }\n\n  _constructAuthorization() {\n    this._headers = {\n      ...this._headers,\n      authorization: this._authFormat + localStorage.token,\n    };\n  }\n\n  _handleFetch = res => (res.ok ? res.json() : Promise.reject(res.status));\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers ?? {},\n    };\n\n    if (method && method !== 'GET') {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options).then(this._handleFetch);\n  }\n}\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst COHORT_ID = 'cohort-24';\nconst TOKEN = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: new URL(`https://mesto.${apiDomain}`),\n  version: 'v1',\n  endpoints: {\n    users: 'users/me',\n    cards: 'cards',\n  },\n};\n\nclass Features extends Api {\n  getUserInfo() {\n    return this._customFetch(api.endpoints.users);\n  }\n\n  getInitialCards() {\n    return this._customFetch(api.endpoints.cards);\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch(api.endpoints.users, 'PATCH', {\n      name,\n      about,\n    });\n\n  addCard = (name, link) =>\n    this._customFetch(api.endpoints.cards, 'POST', {\n      name,\n      link,\n    });\n\n  deleteCard = cardId => this._customFetch(`${api.endpoints.cards}/${cardId}`, 'DELETE');\n\n  changeLikeCardStatus = (cardId, status) =>\n    this._customFetch(`${api.endpoints.cards}/likes/${cardId}`, status ? 'PUT' : 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch(`${api.endpoints.users}/avatar`, 'PATCH', {\n      avatar,\n    });\n}\n\nexport default new Features({\n  baseUrl: `${api.url.origin}/${api.version}/${COHORT_ID}`,\n  headers: {\n    authorization: TOKEN,\n  },\n});\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst api = {\n  url: new URL(`https://auth.${apiDomain}`),\n  endpoints: {\n    signup: 'signup',\n    signin: 'signin',\n    user: 'users/me',\n  },\n};\n\nclass Auth extends Api {\n  constructor(options) {\n    super(options);\n\n    this._authFormat = 'Bearer ';\n  }\n\n  register(email, password) {\n    return this._customFetch(api.endpoints.signup, 'POST', { password, email });\n  }\n\n  login(email, password) {\n    return this._customFetch(api.endpoints.signin, 'POST', { password, email });\n  }\n\n  getUserInfo() {\n    this._constructAuthorization();\n\n    return this._customFetch(api.endpoints.user).then(res => res.data);\n  }\n}\n\nexport default new Auth({\n  baseUrl: api.url.origin,\n});\n","import React from 'react';\n\nimport api from '../api/api';\n\nconst defaultUserState = {\n  name: 'Неизвестный',\n  about: 'Потеряно соединение с сервером',\n};\n\nconst CurrentUserContext = React.createContext();\nconst CurrentUserDispatchContext = React.createContext();\n\nfunction CurrentUserProvider({ state, dispatch, children }) {\n  return (\n    <CurrentUserContext.Provider value={state}>\n      <CurrentUserDispatchContext.Provider value={dispatch}>\n        {children}\n      </CurrentUserDispatchContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nfunction useCurrentUser() {\n  const context = React.useContext(CurrentUserContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUser must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction useCurrentUserDispatcher() {\n  const context = React.useContext(CurrentUserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUserDispatcher must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction objectsAreEqual(first, second) {\n  return JSON.stringify(first) === JSON.stringify(second);\n}\n\nasync function sendApiUpdate(dispatch, user, updates, func) {\n  const expectedUser = { ...user, ...updates };\n  dispatch(expectedUser);\n\n  try {\n    const updatedUser = await api[func](updates);\n    if (!objectsAreEqual(expectedUser, updatedUser)) {\n      dispatch(updatedUser);\n    }\n  } catch (error) {\n    dispatch(user);\n    console.log('Couldnt update user information on the server', error);\n  }\n}\n\nexport {\n  defaultUserState,\n  CurrentUserProvider,\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n};\n","const classToSelector = (className) => `.${className}`;\n\nexport const popupSelectors = {\n  closeButtonClass: 'popup__close-button',\n};\n\nexport const formClassesConfig = {\n  formClass: 'form',\n  inputClass: 'form__input',\n  inputErrorClass: 'form__input_type_error',\n  errorClass: 'form__error_visible',\n  submitButtonClass: 'form__button',\n};\n\nexport const defaultFormConfig = {\n  formSelector: classToSelector(formClassesConfig.formClass),\n  inputSelector: classToSelector(formClassesConfig.inputClass),\n  submitButtonSelector: classToSelector(formClassesConfig.submitButtonClass),\n  inputErrorClass: formClassesConfig.inputErrorClass,\n  errorClass: formClassesConfig.errorClass,\n};\n","import { memo, useCallback } from 'react';\n\nconst Form = memo(props => {\n  const { onSubmit, ...finalProps } = props;\n\n  const handleSubmit = useCallback(\n    e => {\n      if (onSubmit) {\n        e.preventDefault();\n\n        onSubmit(e);\n      }\n    },\n    [onSubmit]\n  );\n\n  return (\n    <form action=\"#\" onSubmit={handleSubmit} {...finalProps}>\n      {props.children}\n    </form>\n  );\n});\n\nexport default Form;\n","import { forwardRef, createRef, useEffect } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\n\nconst defaults = {\n  type: 'text',\n  required: true,\n  minLength: 2,\n};\n\nconst PopupInput = forwardRef((props, forwardedRef) => {\n  const ref = forwardedRef ?? createRef();\n\n  const type = props.type ?? defaults.type;\n\n  const required = props.required ?? defaults.required;\n\n  const conditionalMinLength = type === defaults.type ? defaults.minLength : null;\n  const minLength = props.minLength ?? conditionalMinLength;\n\n  const finalProps = {\n    type,\n    minLength,\n    required,\n    ref,\n  };\n\n  const { isFocused, ...inputProps } = props;\n\n  useEffect(() => {\n    if (\n      isFocused &&\n      ref &&\n      ref.current &&\n      ref.current.parentElement !== document.activeElement.parentElement\n    ) {\n      setTimeout(() => {\n        ref && ref.current && ref.current.focus();\n      }, 50);\n    }\n  }, [isFocused, ref]);\n\n  return (\n    <>\n      <input\n        {...inputProps}\n        className={`${formClassesConfig.inputClass}${\n          inputProps.className ? ` ${inputProps.className}` : ''\n        }`}\n        {...finalProps}\n      />\n      <p className=\"form__error\" id={`${props.id}-error`} />\n    </>\n  );\n});\n\nexport default PopupInput;\n","import { memo } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\n\nimport Form from './Form';\nimport FormInput from './FormInput';\n\nconst propsForInputs = {\n  autoCorrect: 'off',\n  spellCheck: false,\n  className: `${formClassesConfig.inputClass}_theme_dark`,\n};\n\nconst inputNames = {\n  email: 'email',\n  password: 'password',\n};\n\nconst LoginOrRegister = memo((props) => {\n  const [email, setEmail] = props.states.email;\n  const [password, setPassword] = props.states.password;\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  function handleSubmit(e) {\n    props.handleSubmit(e, email, password);\n  }\n\n  function handleReset() {\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n    <div className=\"auth\">\n      <h2 className=\"auth__title\">{props.title}</h2>\n\n      <Form onSubmit={handleSubmit} onReset={handleReset} className={formClassesConfig.formClass}>\n        <FormInput\n          {...propsForInputs}\n          autoFocus\n          id={inputNames.email}\n          name={inputNames.email}\n          type={inputNames.email}\n          placeholder=\"Email\"\n          autoComplete={inputNames.email}\n          value={email}\n          onChange={handleEmailChange}\n        />\n        <FormInput\n          {...propsForInputs}\n          id={props.passwordAutocomplete}\n          name={inputNames.password}\n          type={inputNames.password}\n          placeholder=\"Пароль\"\n          autoComplete={props.passwordAutocomplete}\n          value={password}\n          onChange={handlePasswordChange}\n        />\n        <button\n          type=\"submit\"\n          className={`auth__button ${formClassesConfig.submitButtonClass} ${formClassesConfig.submitButtonClass}_theme_dark`}\n        >\n          {props.buttonTitle}\n        </button>\n      </Form>\n      {props.children}\n    </div>\n  );\n});\n\nexport default LoginOrRegister;\n","import { memo } from 'react';\n\nimport { pathNames } from '../utils/constants';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'current-password',\n  title: pathNames.login.title,\n  buttonTitle: pathNames.login.action,\n};\n\nconst Login = memo((props) => (\n  <LoginOrRegister handleSubmit={props.handleLogin} {...props} {...defaultProps} />\n));\n\nexport default Login;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'new-password',\n  title: pathNames.register.title,\n  buttonTitle: pathNames.register.action,\n};\n\nconst Register = memo((props) => (\n  <LoginOrRegister handleSubmit={props.handleRegister} {...props} {...defaultProps}>\n    <div className=\"auth__signin\">\n      Уже зарегистрированы?{' '}\n      <Link to={paths.login} className=\"auth__login-link\">\n        {pathNames.login.action}\n      </Link>\n    </div>\n  </LoginOrRegister>\n));\n\nexport default Register;\n","import { memo, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nimport { parseFixedLocalBase64Value } from '../hooks/useStateWithBase64';\n\nimport Login from './Login';\nimport Register from './Register';\n\nconst Authentication = memo((props) => {\n  const states = {\n    email: useState(parseFixedLocalBase64Value('email') ?? ''),\n    password: useState(''),\n  };\n\n  return props.loggedIn ? (\n    <Redirect to={paths.main} />\n  ) : (\n    <>\n      <Route path={paths.login}>\n        <Login handleLogin={props.handleLogin} states={states} />\n      </Route>\n      <Route path={paths.register}>\n        <Register handleRegister={props.handleRegister} states={states} />\n      </Route>\n    </>\n  );\n});\n\nexport default Authentication;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useStateWithLocalStorage from './useStateWithLocalStorage';\n\nexport const parseFixedLocalBase64Value = (elementName) =>\n  localStorage[elementName] && atob(JSON.parse(localStorage[elementName]));\n\nexport default function useStateWithBase64(computed, defaultForComputed) {\n  const [initialState, updateState] = useStateWithLocalStorage(computed, defaultForComputed);\n\n  const setState = useCallback(\n    (value) => {\n      updateState(btoa(value));\n    },\n    [updateState]\n  );\n\n  const state = useRef(atob(initialState));\n\n  useEffect(() => {\n    state.current = atob(initialState);\n  });\n\n  return [state.current, setState];\n}\n","import { Route, Redirect } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nconst ProtectedRoute = props => {\n  return <Route>{props.loggedIn ? props.children : <Redirect to={paths.login} />}</Route>;\n};\n\nexport default ProtectedRoute;\n","import { repository } from '../../package.json';\n\nconst repoSeparator = '.';\n\nconst repoSplit = repository.url.split(repoSeparator);\nrepoSplit.pop();\n\nconst repoJoined = repoSplit.join(repoSeparator);\n\nexport const repo = repoJoined.split('+')[1];\n","import { memo, useMemo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Card from './Card';\n\nconst MAXIMUM_CARDS_QUANTITY = 30;\n\nconst defaultCard = {\n  isTemporarilyLocal: true,\n  name: 'Загрузка...',\n};\n\nconst defaultCards = [];\nfor (let i = 0; i < MAXIMUM_CARDS_QUANTITY; i++) {\n  defaultCards.push(defaultCard);\n}\n\nconst Main = memo(props => {\n  const currentUser = useCurrentUser();\n\n  const cards = useMemo(() => (props.cards.length ? props.cards : defaultCards), [props.cards]);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n          <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar} />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__description\">{currentUser.about}</p>\n          <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n        </div>\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {cards.map(card => (\n            <Card\n              key={card._id ?? Math.random()}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              card={card}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n});\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import { memo } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\nimport { repo } from '../utils/pkg';\n\nimport logo from '../images/logo.svg';\n\nconst Header = memo((props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [loggedIn, setLoggedIn] = props.loggedIn;\n\n  let buttonTitle;\n  let buttonLink = paths.login;\n\n  switch (location.pathname) {\n    case paths.login:\n      buttonTitle = pathNames.register.title;\n      buttonLink = paths.register;\n      break;\n\n    case paths.register:\n      buttonTitle = pathNames.login.action;\n      break;\n\n    default:\n      buttonTitle = pathNames.quit.action;\n      break;\n  }\n\n  function signOut() {\n    delete localStorage.token;\n    setLoggedIn(false);\n    history.replace(paths.login);\n  }\n\n  return (\n    <header className=\"header\">\n      <a target=\"_self\" href={repo} className=\"logo header__logo\">\n        <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n      </a>\n      <div className=\"header__container\">\n        {loggedIn && props.credential ? (\n          <p className=\"header__credential\">{props.credential}</p>\n        ) : null}\n        <Link\n          to={buttonLink}\n          onClick={loggedIn ? signOut : null}\n          className={`header__action-button${loggedIn ? ' header__action-button_dimmed' : ''}`}\n        >\n          {buttonTitle}\n        </Link>\n      </div>\n    </header>\n  );\n});\n\nexport default Header;\n","import { memo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst defaults = {\n  cardDeleteButtonClassName: 'element__trash-button',\n  cardLikeButtonClassName: 'element__like-button',\n};\n\nconst Card = memo(props => {\n  const { card } = props;\n\n  card.likes = card.likes ?? [];\n\n  const currentUser = useCurrentUser();\n\n  if (card.isTemporarilyLocal) {\n    card.owner = currentUser;\n  }\n\n  const cardDeleteButtonClassNames = [defaults.cardDeleteButtonClassName];\n\n  const isOwn = card.owner._id === currentUser._id;\n  if (isOwn) {\n    const cardDeleteButtonClassNameAttrubited = `${defaults.cardDeleteButtonClassName}_visible`;\n    cardDeleteButtonClassNames.push(cardDeleteButtonClassNameAttrubited);\n  }\n\n  const cardDeleteButtonFinalClassName = cardDeleteButtonClassNames.join(' ');\n\n  const cardLikeButtonClassNames = [defaults.cardLikeButtonClassName];\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  if (isLiked) {\n    const cardLikeButtonClassNameAttributed = `${defaults.cardLikeButtonClassName}_active`;\n    cardLikeButtonClassNames.push(cardLikeButtonClassNameAttributed);\n  }\n\n  const cardLikeButtonFinalClassName = cardLikeButtonClassNames.join(' ');\n\n  function handleImageClick() {\n    props.onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"element\">\n      <img onClick={handleImageClick} className=\"element__image\" alt={card.name} src={card.link} />\n      <button onClick={handleDeleteClick} type=\"reset\" className={cardDeleteButtonFinalClassName} />\n      <div className=\"element__container\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <button\n            onClick={handleLikeClick}\n            type=\"button\"\n            className={cardLikeButtonFinalClassName}\n          />\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n});\n\nexport default Card;\n","import { memo } from 'react';\n\nimport { author } from '../../package.json';\n\nimport { repo } from '../utils/pkg';\n\nconst linkSeparator = '/';\n\nconst repoSplitted = repo.split(linkSeparator);\nrepoSplitted.pop();\n\nconst copyrightLink = repoSplitted.join(linkSeparator);\n\nconst yearOfBuild = new Date().getFullYear();\n\nconst Footer = memo(() => (\n  <footer className=\"footer\">\n    <a target=\"_blank\" rel=\"noreferrer\" href={copyrightLink} className=\"footer__copyright\">\n      &copy; {yearOfBuild} {author}\n    </a>\n  </footer>\n));\n\nexport default Footer;\n","export default class FormValidator {\n  constructor(data, element) {\n    this._data = data;\n    this._element = element;\n\n    this._inputList = Array.from(this._element.querySelectorAll(this._data.inputSelector));\n\n    this._buttonElement = this._element.querySelector(this._data.submitButtonSelector);\n  }\n\n  enableValidation() {\n    this._toggleButtonState();\n\n    this._setListeners();\n  }\n\n  _showInputError = (inputElement, errorMessage) => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.add(this._data.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._data.errorClass);\n  };\n\n  _hideInputError = inputElement => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(this._data.inputErrorClass);\n    errorElement.classList.remove(this._data.errorClass);\n    errorElement.textContent = '';\n  };\n\n  _resetFormErrors = () => {\n    this._inputList.forEach(inputElement => this._hideInputError(inputElement));\n    this._toggleButtonState(1);\n  };\n\n  _checkInputValidity = inputElement =>\n    inputElement.validity.valid\n      ? this._hideInputError(inputElement)\n      : this._showInputError(inputElement, inputElement.validationMessage);\n\n  _hasInvalidInput = inputList => inputList.some(inputElement => !inputElement.validity.valid);\n\n  _toggleButtonState = disable =>\n    (this._buttonElement.disabled = disable || this._hasInvalidInput(this._inputList));\n\n  _validationHandler = inputElement => {\n    this._checkInputValidity(inputElement);\n\n    this._toggleButtonState();\n  };\n\n  _setListeners = () => {\n    this._element.addEventListener('reset', this._resetFormErrors);\n\n    this._inputList.forEach(inputElement => {\n      if (inputElement.value) {\n        this._validationHandler(inputElement);\n      }\n      inputElement.addEventListener('input', () => this._validationHandler(inputElement));\n    });\n  };\n}\n","import { useState, useEffect, memo } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst POPUP_ANIMATION_DURATION = 300;\n\nconst defaults = {\n  className: 'popup',\n  classNameClosed: '',\n  isOpened: false,\n};\ndefaults.classNameOpened = `${defaults.className}_opened`;\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Popup = memo(props => {\n  const [classNameForAnimation, setClassNameForAnimation] = useState(defaults.classNameClosed);\n  const [shouldAppearInDOM, setShouldAppearInDOM] = useState(defaults.isOpened);\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      document.activeElement.blur(); // fixes mobile keyboard being stuck on the screen after form submission (due to `event.preventDefault()`)\n    }\n\n    if (props.isOpen) {\n      setShouldAppearInDOM(!defaults.isOpened);\n      const showingTimout = setTimeout(() => {\n        setClassNameForAnimation(defaults.classNameOpened);\n      }, 10);\n\n      return () => clearTimeout(showingTimout);\n    } else {\n      setClassNameForAnimation(defaults.classNameClosed);\n      const hidingTimeout = setTimeout(() => {\n        setShouldAppearInDOM(defaults.isOpened);\n      }, POPUP_ANIMATION_DURATION);\n\n      return () => clearTimeout(hidingTimeout);\n    }\n  }, [props.isOpen]);\n\n  if (!shouldAppearInDOM) {\n    return null;\n  }\n\n  const classNames = [defaults.className, props.className, classNameForAnimation].filter(\n    el => el != null && el !== ''\n  );\n\n  const className = classNames.join(' ');\n\n  return createPortal(\n    <section onClick={props.onClick} className={className} id={props.id}>\n      {props.children}\n    </section>,\n    modalRoot\n  );\n});\n\nexport default Popup;\n","import { memo, useCallback, useEffect } from 'react';\n\nimport { popupSelectors, formClassesConfig } from '../utils/utils';\nimport enableValidation from '../utils/enableValidation';\nimport { defaultFormConfig } from '../utils/utils';\n\nimport Popup from './Popup';\nimport Form from './Form';\n\nconst defaultButtonTitle = 'Сохранить';\n\nconst PopupWithForm = memo((props) => {\n  const { onSubmit, children, ...propsWithoutCustom } = props;\n  props = propsWithoutCustom;\n\n  const buttonTitle = props.buttonTitle ?? defaultButtonTitle;\n\n  const handleSubmit = useCallback(\n    (e) => {\n      onSubmit && onSubmit(e);\n\n      if (children) {\n        e.target.reset();\n      }\n    },\n    [children, onSubmit]\n  );\n\n  const popupId = props.name;\n\n  useEffect(() => {\n    if (props.isOpen) {\n      const validationTimeout = setTimeout(() => {\n        enableValidation(\n          document.getElementById(popupId).querySelector(defaultFormConfig.formSelector)\n        );\n      }, 1);\n\n      return () => clearTimeout(validationTimeout);\n    }\n  }, [popupId, props.isOpen]);\n\n  return (\n    <Popup isOpen={props.isOpen} onClick={props.onClose} id={popupId}>\n      <div className=\"popup__container\">\n        <button type=\"reset\" className={popupSelectors.closeButtonClass} />\n        <h2 className=\"popup__title\">{props.title}</h2>\n\n        <Form\n          className={formClassesConfig.formClass}\n          onSubmit={handleSubmit}\n          onReset={props.onReset}\n        >\n          {children}\n          <button type=\"submit\" className={`popup__button ${formClassesConfig.submitButtonClass}`}>\n            {buttonTitle}\n          </button>\n        </Form>\n      </div>\n    </Popup>\n  );\n});\n\nexport default PopupWithForm;\n","import FormValidator from './FormValidator';\nimport { defaultFormConfig } from './utils';\n\nexport default function enableValidation(formElement) {\n  const profileEditorValidator = new FormValidator(defaultFormConfig, formElement);\n  profileEditorValidator.enableValidation();\n}\n","import { useState, useEffect, memo } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst EditProfilePopup = memo(props => {\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setAbout(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit() {\n    sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        name,\n        about,\n      },\n      'editProfile'\n    );\n\n    props.onUpdateUser();\n  }\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleAboutChange(e) {\n    setAbout(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Редактировать профиль\"\n      name=\"profile-editor\"\n    >\n      <PopupInput\n        isFocused={props.isOpen}\n        value={name}\n        onChange={handleNameChange}\n        autoComplete=\"name\"\n        autoCapitalize=\"words\"\n        name=\"name\"\n        id=\"profile-name\"\n        placeholder=\"Имя\"\n        maxLength=\"40\"\n      />\n\n      <PopupInput\n        value={about}\n        onChange={handleAboutChange}\n        name=\"about\"\n        id=\"profile-about\"\n        placeholder=\"О себе\"\n        maxLength=\"200\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditProfilePopup;\n","import { memo, useRef } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst EditAvatarPopup = memo(props => {\n  const ref = useRef();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  function handleSubmit() {\n    sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        avatar: ref.current.value,\n      },\n      'updateAvatar'\n    );\n\n    props.onUpdateAvatar();\n  }\n\n  return (\n    <PopupWithForm {...props} onSubmit={handleSubmit} title=\"Обновить аватар\" name=\"avatar-editor\">\n      <PopupInput\n        isFocused={props.isOpen}\n        ref={ref}\n        type=\"url\"\n        name=\"avatar\"\n        id=\"profile-avatar\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditAvatarPopup;\n","import { memo, useState } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst defaults = {\n  title: '',\n  link: '',\n};\n\nconst AddPlacePopup = memo(props => {\n  const [title, setTitle] = useState(defaults.title);\n  const [link, setLink] = useState(defaults.link);\n\n  function handleSubmit() {\n    props.onAddPlace(title, link);\n  }\n\n  function handleReset() {\n    setTitle(defaults.title);\n    setLink(defaults.link);\n  }\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      title=\"Новое место\"\n      name=\"element-editor\"\n      buttonTitle=\"Создать\"\n    >\n      <PopupInput\n        isFocused={props.isOpen}\n        value={title}\n        onChange={handleTitleChange}\n        name=\"title\"\n        id=\"element-title\"\n        placeholder=\"Название\"\n        maxLength=\"30\"\n      />\n\n      <PopupInput\n        value={link}\n        onChange={handleLinkChange}\n        type=\"url\"\n        name=\"link\"\n        id=\"element-link\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default AddPlacePopup;\n","import { memo } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = memo(props => {\n  function handleSubmit() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Вы уверены?\"\n      name=\"delete-confirmation\"\n      buttonTitle=\"Да\"\n    />\n  );\n});\n\nexport default ConfirmDeletePopup;\n","import { memo } from 'react';\n\nimport { popupSelectors } from '../utils/utils';\n\nimport Popup from './Popup';\n\nconst classNames = [\n  popupSelectors.closeButtonClass,\n  `${popupSelectors.closeButtonClass}_parent-corners_straight`,\n];\n\nconst className = classNames.join(' ');\n\nconst ImagePopup = memo(props => {\n  const card = props.card;\n\n  return (\n    <Popup\n      isOpen={props.isOpen}\n      onClick={props.onClose}\n      className=\"popup_type_image\"\n      id=\"image-viewer\"\n    >\n      <figure className=\"popup__figure\">\n        <button type=\"button\" className={className} />\n        <img className=\"popup__image\" alt={card.name} src={card.link} />\n        <figcaption className=\"popup__caption\">{card.name}</figcaption>\n      </figure>\n    </Popup>\n  );\n});\n\nexport default ImagePopup;\n","export default __webpack_public_path__ + \"static/media/check.5221857e.svg\";","export default __webpack_public_path__ + \"static/media/cross.173b3897.svg\";","import { memo } from 'react';\n\nimport checkIcon from '../images/check.svg';\nimport crossIcon from '../images/cross.svg';\n\nimport { popupSelectors } from '../utils/utils';\n\nimport Popup from './Popup';\n\nconst backgroundImageUrl = (url) => ({ backgroundImage: `url(${url})` });\n\nconst InfoTooltip = memo(({ isSuccess, ...props }) => {\n  return (\n    <Popup isOpen={props.isOpen} onClick={props.onClose}>\n      <div className=\"popup__container\">\n        <button type=\"button\" className={popupSelectors.closeButtonClass} />\n\n        <div className=\"info-tooltip\">\n          <div\n            className=\"info-tooltip__icon\"\n            style={backgroundImageUrl(isSuccess ? checkIcon : crossIcon)}\n          />\n          <h3 className=\"info-tooltip__title\">\n            {isSuccess\n              ? 'Вы успешно зарегистрировались!'\n              : 'Что-то пошло не так! Попробуйте ещё раз.'}\n          </h3>\n        </div>\n      </div>\n    </Popup>\n  );\n});\n\nexport default InfoTooltip;\n","import React from 'react';\n\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\nimport useStateWithBase64 from '../hooks/useStateWithBase64';\nimport useEscapeHandler from '../hooks/useEscapeHandler';\n\nimport api from '../api/api';\nimport auth from '../api/auth';\n\nimport { CurrentUserProvider, defaultUserState } from '../contexts/CurrentUserContext';\n\nimport Authentication from './Authentication';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\n\nfunction App() {\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = useStateWithLocalStorage('currentUser', defaultUserState);\n\n  const [loggedIn, setLoggedIn] = useStateWithLocalStorage('loggedIn', false);\n  const [email, setEmail] = useStateWithBase64('email', '');\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n\n  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [cards, setCards] = useStateWithLocalStorage('cards', []);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then(setCurrentUser)\n      .catch((err) => console.log('Couldnt get user info from the server', err));\n  }, [setCurrentUser]);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch((err) => console.log('Couldnt get initial cards from the server', err));\n  }, [setCards]);\n\n  async function handleCardLike(card) {\n    const oldCards = cards;\n\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    const expectedCardLikes = isLiked\n      ? card.likes.filter((like) => like._id !== currentUser._id)\n      : [...card.likes, currentUser];\n\n    const expectedCard = { ...card, likes: expectedCardLikes };\n\n    setCards(cards.map((c) => (c._id === card._id ? expectedCard : c)));\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n      setCards(cards.map((c) => (c._id === card._id ? newCard : c)));\n    } catch (error) {\n      setCards(oldCards);\n      console.error(error);\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsInfoTooltipOpen(false);\n  }\n\n  const handleCardDelete = React.useCallback(\n    (card) => {\n      const oldCards = cards;\n\n      setCards(cards.filter((c) => c._id !== card._id));\n\n      api.deleteCard(card._id).catch((error) => {\n        setCards(oldCards);\n        console.log('Couldnt delete card on the server', error);\n      });\n\n      closeAllPopups();\n    },\n    [cards, setCards]\n  );\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmDeleteClick(card) {\n    setSelectedCard(card);\n\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n\n    setIsImagePopupOpen(true);\n  }\n\n  const handlePopupClick = React.useCallback((e) => {\n    if (e.target === e.currentTarget) {\n      closeAllPopups();\n    }\n  }, []);\n\n  const handleUpdateUser = closeAllPopups;\n  const handleUpdateAvatar = closeAllPopups;\n\n  function handleAddPlaceSubmit(title, link) {\n    const oldCards = cards;\n\n    const expectedCard = {\n      isTemporarilyLocal: true,\n      name: title,\n      link,\n    };\n\n    setCards([expectedCard, ...cards]);\n\n    api\n      .addCard(title, link)\n      .then((newCard) => setCards([newCard, ...cards]))\n      .catch(() => setCards(oldCards));\n\n    closeAllPopups();\n  }\n\n  useEscapeHandler(closeAllPopups);\n\n  const handleLogin = React.useCallback(\n    (email) => {\n      setEmail(email);\n      setLoggedIn(true);\n    },\n    [setEmail, setLoggedIn]\n  );\n\n  const handleTokenCheck = React.useCallback(() => {\n    if (localStorage.token) {\n      auth.token = localStorage.token;\n      auth\n        .getUserInfo()\n        .then((res) => {\n          if (res) {\n            handleLogin(res.email);\n            history.replace(paths.main);\n          }\n        })\n        .catch((err) => {\n          setLoggedIn(false);\n\n          console.log(err);\n        });\n    }\n  }, [handleLogin, history, setLoggedIn]);\n\n  function handleSubmitRegister(e_, email, password) {\n    auth\n      .register(email, password)\n      .then(() => {\n        history.replace(paths.login);\n        setIsInfoTooltipSuccess(true);\n      })\n      .catch((err) => {\n        setIsInfoTooltipSuccess(false);\n        console.log(err);\n      })\n      .finally(() => {\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleSubmitLogin(e, email, password) {\n    if (!email || !password) {\n      return;\n    }\n\n    auth\n      .login(email, password)\n      .then((data) => {\n        if (data.token) {\n          e.target.reset();\n\n          localStorage.token = data.token;\n\n          handleLogin(email);\n          history.push(paths.main);\n        }\n      })\n      .catch((err) => {\n        setIsInfoTooltipOpen(true);\n        console.log(err);\n      });\n  }\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, [handleTokenCheck]);\n\n  return (\n    <CurrentUserProvider state={currentUser} dispatch={setCurrentUser}>\n      <Header credential={email} loggedIn={[loggedIn, setLoggedIn]} />\n      <Switch>\n        <Route path={[paths.register, paths.login]}>\n          <Authentication\n            loggedIn={loggedIn}\n            handleLogin={handleSubmitLogin}\n            handleRegister={handleSubmitRegister}\n          />\n          <InfoTooltip\n            isOpen={isInfoTooltipOpen}\n            isSuccess={isInfoTooltipSuccess}\n            onClose={handlePopupClick}\n          />\n        </Route>\n        <ProtectedRoute path={paths.main} loggedIn={loggedIn}>\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDeleteClick}\n          />\n\n          <EditProfilePopup\n            onUpdateUser={handleUpdateUser}\n            isOpen={isEditProfilePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <AddPlacePopup\n            onAddPlace={handleAddPlaceSubmit}\n            isOpen={isAddPlacePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdateAvatar}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <ConfirmDeletePopup\n            card={selectedCard}\n            onCardDelete={handleCardDelete}\n            isOpen={isConfirmDeletePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={handlePopupClick} />\n        </ProtectedRoute>\n      </Switch>\n      <Footer />\n    </CurrentUserProvider>\n  );\n}\n\nexport default App;\n","import { useCallback, useEffect } from 'react';\n\nexport default function useEscapeHandler(dispatch) {\n  const escHandler = useCallback(\n    e => {\n      if (e.key === 'Escape') {\n        dispatch();\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const listenerArgs = ['keydown', escHandler, false];\n\n    document.addEventListener(...listenerArgs);\n\n    return () => document.removeEventListener(...listenerArgs);\n  }, [escHandler]);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}