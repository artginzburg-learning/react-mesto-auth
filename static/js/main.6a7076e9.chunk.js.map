{"version":3,"sources":["hooks/useStateWithLocalStorage.js","utils/api.js","contexts/CurrentUserContext.js","components/Main.js","images/logo.svg","components/Header.js","components/Card.js","components/Footer.js","utils/utils.js","utils/FormValidator.js","components/Popup.js","components/PopupWithForm.js","utils/enableValidation.js","components/PopupInput.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["useStateWithLocalStorage","computed","defaultForComputed","useState","localStorage","JSON","parse","currentState","updateCurrentState","localStorageChanged","useCallback","e","key","newValue","setCurrentState","value","stringify","useEffect","listenerArgs","window","addEventListener","removeEventListener","api","options","_paths","users","cards","_handleFetch","res","ok","json","Promise","reject","status","editProfile","name","about","_customFetch","addCard","link","deleteCard","cardId","changeLikeCardStatus","updateAvatar","avatar","this","_baseUrl","baseUrl","_headers","headers","target","method","body","fetch","then","authorization","defaultUserState","CurrentUserContext","React","createContext","CurrentUserDispatchContext","useCurrentUserDispatcher","context","useContext","undefined","Error","objectsAreEqual","first","second","sendApiUpdate","dispatch","user","updates","func","a","expectedUser","updatedUser","Header","memo","className","href","alt","src","logo","defaults","Card","props","card","likes","currentUser","isTemporarilyLocal","owner","cardDeleteButtonClassNames","_id","cardDeleteButtonClassNameAttrubited","push","cardDeleteButtonFinalClassName","join","cardLikeButtonClassNames","some","i","cardLikeButtonClassNameAttributed","cardLikeButtonFinalClassName","onClick","onCardClick","onCardDelete","type","onCardLike","length","defaultCard","defaultCards","Main","useMemo","onEditAvatar","onEditProfile","onAddPlace","map","Math","random","Footer","rel","author","popupSelectors","defaultFormConfig","formSelector","inputSelector","submitButtonSelector","inputErrorClass","errorClass","FormValidator","data","element","_showInputError","inputElement","errorMessage","errorElement","_element","querySelector","id","classList","add","_data","textContent","_hideInputError","remove","_resetFormErrors","_inputList","forEach","_toggleButtonState","_checkInputValidity","validity","valid","validationMessage","_hasInvalidInput","inputList","disable","_buttonElement","disabled","_validationHandler","_setListeners","Array","from","querySelectorAll","classNameClosed","isOpened","classNameOpened","Popup","classNameForAnimation","setClassNameForAnimation","shouldAppearInDOM","setShouldAppearInDOM","isOpen","document","activeElement","blur","showingTimout","setTimeout","clearTimeout","hidingTimeout","filter","el","children","PopupWithForm","onSubmit","handleSubmit","preventDefault","reset","popupId","validationTimeout","popupElement","getElementById","enableValidation","buttonTitle","onClose","title","onReset","action","PopupInput","forwardRef","forwardedRef","ref","createRef","required","conditionalMinLength","finalProps","minLength","isFocused","inputProps","current","parentElement","focus","EditProfilePopup","setName","setAbout","setCurrentUser","onUpdateUser","onChange","autoComplete","autoCapitalize","placeholder","maxLength","EditAvatarPopup","useRef","onUpdateAvatar","AddPlacePopup","setTitle","setLink","ConfirmDeletePopup","ImagePopup","App","getUserInfo","catch","err","console","log","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCards","oldCards","isLiked","expectedCardLikes","like","expectedCard","c","newCard","error","closeAllPopups","getInitialCards","handleCardDelete","handlePopupClick","currentTarget","handleUpdateUser","handleUpdateAvatar","escHandler","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6a7076e9.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nexport default function useStateWithLocalStorage(computed, defaultForComputed) {\n  const [currentState, updateCurrentState] = useState(\n    localStorage[computed] ? JSON.parse(localStorage[computed]) : defaultForComputed\n  );\n\n  const localStorageChanged = useCallback(\n    e => {\n      if (e.key === computed) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : defaultForComputed);\n      }\n    },\n    [computed, defaultForComputed]\n  );\n\n  const setCurrentState = useCallback(\n    value => {\n      localStorage[computed] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [computed]\n  );\n\n  useEffect(() => {\n    const listenerArgs = ['storage', localStorageChanged];\n\n    window.addEventListener(...listenerArgs);\n    return () => {\n      window.removeEventListener(...listenerArgs);\n    };\n  }, [localStorageChanged]);\n\n  return [currentState, setCurrentState];\n}\n","const COHORT_ID = 'cohort-24';\nconst TOKEN = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: 'mesto.nomoreparties.co',\n  protocol: 'https://',\n  version: 'v1',\n};\n\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _paths = {\n    users: 'users/me',\n    cards: 'cards',\n  };\n\n  _handleFetch = res => (res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers,\n    };\n\n    if (method && method !== 'GET') {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options).then(this._handleFetch);\n  }\n\n  getUserInfo() {\n    return this._customFetch(this._paths.users);\n  }\n\n  getInitialCards() {\n    return this._customFetch(this._paths.cards);\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch(this._paths.users, 'PATCH', {\n      name,\n      about,\n    });\n\n  addCard = (name, link) =>\n    this._customFetch(this._paths.cards, 'POST', {\n      name,\n      link,\n    });\n\n  deleteCard = cardId => this._customFetch(`${this._paths.cards}/${cardId}`, 'DELETE');\n\n  changeLikeCardStatus = (cardId, status) =>\n    this._customFetch(`${this._paths.cards}/likes/${cardId}`, status ? 'PUT' : 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch(`${this._paths.users}/avatar`, 'PATCH', {\n      avatar,\n    });\n}\n\nexport default new Api({\n  baseUrl: `${api.protocol}${api.url}/${api.version}/${COHORT_ID}`,\n  headers: {\n    authorization: TOKEN,\n  },\n});\n","import React from 'react';\n\nimport api from '../utils/api';\n\nconst defaultUserState = {\n  name: 'Неизвестный',\n  about: 'Потеряно соединение с сервером',\n};\n\nconst CurrentUserContext = React.createContext();\nconst CurrentUserDispatchContext = React.createContext();\n\nfunction useCurrentUserDispatcher() {\n  const context = React.useContext(CurrentUserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUserDispatcher must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction objectsAreEqual(first, second) {\n  return JSON.stringify(first) === JSON.stringify(second);\n}\n\nasync function sendApiUpdate(dispatch, user, updates, func) {\n  const expectedUser = { ...user, ...updates };\n  dispatch(expectedUser);\n\n  try {\n    const updatedUser = await api[func](updates);\n    if (!objectsAreEqual(expectedUser, updatedUser)) {\n      dispatch(updatedUser);\n    }\n  } catch (error) {\n    dispatch(user);\n    throw error;\n  }\n}\n\nexport {\n  defaultUserState,\n  CurrentUserContext,\n  CurrentUserDispatchContext,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n};\n","import { memo, useContext, useMemo } from 'react';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nimport Card from './Card';\n\nconst MAXIMUM_CARDS_QUANTITY = 30;\n\nconst defaultCard = {\n  isTemporarilyLocal: true,\n  name: 'Загрузка...',\n};\n\nconst defaultCards = [];\nfor (let i = 0; i < MAXIMUM_CARDS_QUANTITY; i++) {\n  defaultCards.push(defaultCard);\n}\n\nconst Main = memo(props => {\n  const currentUser = useContext(CurrentUserContext);\n\n  const cards = useMemo(() => (props.cards.length ? props.cards : defaultCards), [props.cards]);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n          <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar} />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__description\">{currentUser.about}</p>\n          <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n        </div>\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {cards.map(card => (\n            <Card\n              key={card._id ?? Math.random()}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              card={card}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n});\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import { memo } from 'react';\n\nimport logo from '../images/logo.svg';\n\nconst Header = memo(() => (\n  <header className=\"header\">\n    <a\n      target=\"_self\"\n      href=\"https://github.com/artginzburg/mesto-react\"\n      className=\"logo header__logo\"\n    >\n      <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n    </a>\n  </header>\n));\n\nexport default Header;\n","import { memo, useContext } from 'react';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst defaults = {\n  cardDeleteButtonClassName: 'element__trash-button',\n  cardLikeButtonClassName: 'element__like-button',\n};\n\nconst Card = memo(props => {\n  const { card } = props;\n\n  card.likes = card.likes ?? [];\n\n  const currentUser = useContext(CurrentUserContext);\n\n  if (card.isTemporarilyLocal) {\n    card.owner = currentUser;\n  }\n\n  const cardDeleteButtonClassNames = [defaults.cardDeleteButtonClassName];\n\n  const isOwn = card.owner._id === currentUser._id;\n  if (isOwn) {\n    const cardDeleteButtonClassNameAttrubited = `${defaults.cardDeleteButtonClassName}_visible`;\n    cardDeleteButtonClassNames.push(cardDeleteButtonClassNameAttrubited);\n  }\n\n  const cardDeleteButtonFinalClassName = cardDeleteButtonClassNames.join(' ');\n\n  const cardLikeButtonClassNames = [defaults.cardLikeButtonClassName];\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  if (isLiked) {\n    const cardLikeButtonClassNameAttributed = `${defaults.cardLikeButtonClassName}_active`;\n    cardLikeButtonClassNames.push(cardLikeButtonClassNameAttributed);\n  }\n\n  const cardLikeButtonFinalClassName = cardLikeButtonClassNames.join(' ');\n\n  function handleImageClick() {\n    props.onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"element\">\n      <img onClick={handleImageClick} className=\"element__image\" alt={card.name} src={card.link} />\n      <button onClick={handleDeleteClick} type=\"reset\" className={cardDeleteButtonFinalClassName} />\n      <div className=\"element__container\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <button\n            onClick={handleLikeClick}\n            type=\"button\"\n            className={cardLikeButtonFinalClassName}\n          />\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n});\n\nexport default Card;\n","import { memo } from 'react';\n\nimport { author } from '../../package.json';\n\nconst Footer = memo(() => (\n  <footer className=\"footer\">\n    <a\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href=\"https://github.com/artginzburg\"\n      className=\"footer__copyright\"\n    >\n      &copy; 2021 {author}\n    </a>\n  </footer>\n));\n\nexport default Footer;\n","export const popupSelectors = {\n  closeButtonClass: 'popup__close-button',\n};\n\nexport const defaultFormConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n};\n","export default class FormValidator {\n  constructor(data, element) {\n    this._data = data;\n    this._element = element;\n\n    this._inputList = Array.from(this._element.querySelectorAll(this._data.inputSelector));\n\n    this._buttonElement = this._element.querySelector(this._data.submitButtonSelector);\n  }\n\n  enableValidation() {\n    this._toggleButtonState();\n\n    this._setListeners();\n  }\n\n  _showInputError = (inputElement, errorMessage) => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.add(this._data.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._data.errorClass);\n  };\n\n  _hideInputError = inputElement => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(this._data.inputErrorClass);\n    errorElement.classList.remove(this._data.errorClass);\n    errorElement.textContent = '';\n  };\n\n  _resetFormErrors = () => {\n    this._inputList.forEach(inputElement => this._hideInputError(inputElement));\n    this._toggleButtonState(1);\n  };\n\n  _checkInputValidity = inputElement =>\n    inputElement.validity.valid\n      ? this._hideInputError(inputElement)\n      : this._showInputError(inputElement, inputElement.validationMessage);\n\n  _hasInvalidInput = inputList => inputList.some(inputElement => !inputElement.validity.valid);\n\n  _toggleButtonState = disable =>\n    (this._buttonElement.disabled = disable || this._hasInvalidInput(this._inputList));\n\n  _validationHandler = inputElement => {\n    this._checkInputValidity(inputElement);\n\n    this._toggleButtonState();\n  };\n\n  _setListeners = () => {\n    this._element.addEventListener('reset', this._resetFormErrors);\n\n    this._inputList.forEach(inputElement => {\n      if (inputElement.value) {\n        this._validationHandler(inputElement);\n      }\n      inputElement.addEventListener('input', () => this._validationHandler(inputElement));\n    });\n  };\n}\n","import { useState, useEffect, memo } from 'react';\n\nconst POPUP_ANIMATION_DURATION = 300;\n\nconst defaults = {\n  className: 'popup',\n  classNameClosed: '',\n  isOpened: false,\n};\ndefaults.classNameOpened = `${defaults.className}_opened`;\n\nconst Popup = memo(props => {\n  const [classNameForAnimation, setClassNameForAnimation] = useState(defaults.classNameClosed);\n  const [shouldAppearInDOM, setShouldAppearInDOM] = useState(defaults.isOpened);\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      document.activeElement.blur(); // fixes mobile keyboard being stuck on the screen after form submission (due to `event.preventDefault()`)\n    }\n\n    if (props.isOpen) {\n      setShouldAppearInDOM(!defaults.isOpened);\n      const showingTimout = setTimeout(() => {\n        setClassNameForAnimation(defaults.classNameOpened);\n      }, 10);\n\n      return () => clearTimeout(showingTimout);\n    } else {\n      setClassNameForAnimation(defaults.classNameClosed);\n      const hidingTimeout = setTimeout(() => {\n        setShouldAppearInDOM(defaults.isOpened);\n      }, POPUP_ANIMATION_DURATION);\n\n      return () => clearTimeout(hidingTimeout);\n    }\n  }, [props.isOpen]);\n\n  if (!shouldAppearInDOM) {\n    return null;\n  }\n\n  const classNames = [defaults.className, props.className, classNameForAnimation].filter(\n    el => el != null && el !== ''\n  );\n\n  const className = classNames.join(' ');\n\n  return (\n    <section onClick={props.onClick} className={className} id={props.id}>\n      {props.children}\n    </section>\n  );\n});\n\nexport default Popup;\n","import { memo, useCallback, useEffect } from 'react';\n\nimport { popupSelectors } from '../utils/utils';\nimport enableValidation from '../utils/enableValidation';\n\nimport Popup from './Popup';\n\nconst defaultButtonTitle = 'Сохранить';\n\nconst PopupWithForm = memo(props => {\n  const { onSubmit, children } = props;\n\n  const handleSubmit = useCallback(\n    e => {\n      if (onSubmit) {\n        e.preventDefault();\n\n        onSubmit(e);\n      }\n\n      if (children) {\n        e.target.reset();\n      }\n    },\n    [children, onSubmit]\n  );\n\n  const popupId = props.name;\n\n  useEffect(() => {\n    if (props.isOpen) {\n      const validationTimeout = setTimeout(() => {\n        enableValidation(popupId);\n      }, 1);\n\n      return () => clearTimeout(validationTimeout);\n    }\n  }, [popupId, props.isOpen]);\n\n  const buttonTitle = props.buttonTitle ?? defaultButtonTitle;\n\n  return (\n    <Popup isOpen={props.isOpen} onClick={props.onClose} id={popupId}>\n      <div className=\"popup__container\">\n        <button type=\"reset\" className={popupSelectors.closeButtonClass} />\n        <h2 className=\"popup__title\">{props.title}</h2>\n\n        <form onSubmit={handleSubmit} onReset={props.onReset} className=\"popup__form\" action=\"#\">\n          {children}\n\n          <button type=\"submit\" className=\"popup__button\">\n            {buttonTitle}\n          </button>\n        </form>\n      </div>\n    </Popup>\n  );\n});\n\nexport default PopupWithForm;\n","import FormValidator from './FormValidator';\nimport { defaultFormConfig } from './utils';\n\nexport default function enableValidation(popupId) {\n  const popupElement = document.getElementById(popupId);\n  const profileEditorValidator = new FormValidator(\n    defaultFormConfig,\n    popupElement.querySelector(defaultFormConfig.formSelector)\n  );\n  profileEditorValidator.enableValidation();\n}\n","import { forwardRef, createRef, useEffect } from 'react';\n\nconst defaults = {\n  type: 'text',\n  required: true,\n  minLength: 2,\n};\n\nconst PopupInput = forwardRef((props, forwardedRef) => {\n  const ref = forwardedRef ?? createRef();\n\n  const type = props.type ?? defaults.type;\n\n  const required = props.required ?? defaults.required;\n\n  const conditionalMinLength = type === defaults.type ? defaults.minLength : null;\n  const minLength = props.minLength ?? conditionalMinLength;\n\n  const finalProps = {\n    type,\n    minLength,\n    required,\n    ref,\n  };\n\n  const { isFocused, ...inputProps } = props;\n\n  useEffect(() => {\n    if (\n      isFocused &&\n      ref &&\n      ref.current &&\n      ref.current.parentElement !== document.activeElement.parentElement\n    ) {\n      setTimeout(() => {\n        ref && ref.current && ref.current.focus();\n      }, 50);\n    }\n  }, [isFocused, ref]);\n\n  return (\n    <>\n      <input {...inputProps} className=\"popup__input\" {...finalProps} />\n      <p className=\"popup__error\" id={`${props.id}-error`} />\n    </>\n  );\n});\n\nexport default PopupInput;\n","import { useState, useEffect, memo, useContext } from 'react';\n\nimport {\n  CurrentUserContext,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './PopupInput';\n\nconst EditProfilePopup = memo(props => {\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n\n  const currentUser = useContext(CurrentUserContext);\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setAbout(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit() {\n    sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        name,\n        about,\n      },\n      'editProfile'\n    );\n\n    props.onUpdateUser();\n  }\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleAboutChange(e) {\n    setAbout(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Редактировать профиль\"\n      name=\"profile-editor\"\n    >\n      <PopupInput\n        isFocused={props.isOpen}\n        value={name}\n        onChange={handleNameChange}\n        autoComplete=\"name\"\n        autoCapitalize=\"words\"\n        name=\"name\"\n        id=\"profile-name\"\n        placeholder=\"Имя\"\n        maxLength=\"40\"\n      />\n\n      <PopupInput\n        value={about}\n        onChange={handleAboutChange}\n        name=\"about\"\n        id=\"profile-about\"\n        placeholder=\"О себе\"\n        maxLength=\"200\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditProfilePopup;\n","import { memo, useContext, useRef } from 'react';\n\nimport {\n  CurrentUserContext,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './PopupInput';\n\nconst EditAvatarPopup = memo(props => {\n  const ref = useRef();\n\n  const currentUser = useContext(CurrentUserContext);\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  function handleSubmit() {\n    sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        avatar: ref.current.value,\n      },\n      'updateAvatar'\n    );\n\n    props.onUpdateAvatar();\n  }\n\n  return (\n    <PopupWithForm {...props} onSubmit={handleSubmit} title=\"Обновить аватар\" name=\"avatar-editor\">\n      <PopupInput\n        isFocused={props.isOpen}\n        ref={ref}\n        type=\"url\"\n        name=\"avatar\"\n        id=\"profile-avatar\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditAvatarPopup;\n","import { memo, useState } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './PopupInput';\n\nconst defaults = {\n  title: '',\n  link: '',\n};\n\nconst AddPlacePopup = memo(props => {\n  const [title, setTitle] = useState(defaults.title);\n  const [link, setLink] = useState(defaults.link);\n\n  function handleSubmit() {\n    props.onAddPlace(title, link);\n  }\n\n  function handleReset() {\n    setTitle(defaults.title);\n    setLink(defaults.link);\n  }\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      title=\"Новое место\"\n      name=\"element-editor\"\n      buttonTitle=\"Создать\"\n    >\n      <PopupInput\n        isFocused={props.isOpen}\n        value={title}\n        onChange={handleTitleChange}\n        name=\"title\"\n        id=\"element-title\"\n        placeholder=\"Название\"\n        maxLength=\"30\"\n      />\n\n      <PopupInput\n        value={link}\n        onChange={handleLinkChange}\n        type=\"url\"\n        name=\"link\"\n        id=\"element-link\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default AddPlacePopup;\n","import { memo } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = memo(props => {\n  function handleSubmit() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Вы уверены?\"\n      name=\"delete-confirmation\"\n      buttonTitle=\"Да\"\n    />\n  );\n});\n\nexport default ConfirmDeletePopup;\n","import { memo } from 'react';\n\nimport { popupSelectors } from '../utils/utils';\n\nimport Popup from './Popup';\n\nconst classNames = [\n  popupSelectors.closeButtonClass,\n  `${popupSelectors.closeButtonClass}_parent-corners_straight`,\n];\n\nconst className = classNames.join(' ');\n\nconst ImagePopup = memo(props => {\n  const card = props.card;\n\n  return (\n    <Popup\n      isOpen={props.isOpen}\n      onClick={props.onClose}\n      className=\"popup_type_image\"\n      id=\"image-viewer\"\n    >\n      <figure className=\"popup__figure\">\n        <button type=\"button\" className={className} />\n        <img className=\"popup__image\" alt={card.name} src={card.link} />\n        <figcaption className=\"popup__caption\">{card.name}</figcaption>\n      </figure>\n    </Popup>\n  );\n});\n\nexport default ImagePopup;\n","import React from 'react';\n\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\nimport api from '../utils/api';\n\nimport {\n  defaultUserState,\n  CurrentUserContext,\n  CurrentUserDispatchContext,\n} from '../contexts/CurrentUserContext';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\n\nexport default function App() {\n  const [currentUser, setCurrentUser] = useStateWithLocalStorage('currentUser', defaultUserState);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then(setCurrentUser)\n      .catch(err => console.log('Couldnt get user info from the server', err));\n  }, [setCurrentUser]);\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [cards, setCards] = useStateWithLocalStorage('cards', []);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch(err => console.log('Couldnt get initial cards from the server', err));\n  }, [setCards]);\n\n  async function handleCardLike(card) {\n    const oldCards = cards;\n\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    const expectedCardLikes = isLiked\n      ? card.likes.filter(like => like._id !== currentUser._id)\n      : [...card.likes, currentUser];\n\n    const expectedCard = { ...card, likes: expectedCardLikes };\n\n    setCards(cards.map(c => (c._id === card._id ? expectedCard : c)));\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n      setCards(cards.map(c => (c._id === card._id ? newCard : c)));\n    } catch (error) {\n      setCards(oldCards);\n      console.error(error);\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  const handleCardDelete = React.useCallback(\n    card => {\n      const oldCards = cards;\n\n      setCards(cards.filter(c => c._id !== card._id));\n\n      api.deleteCard(card._id).catch(error => {\n        setCards(oldCards);\n        throw error;\n      });\n\n      closeAllPopups();\n    },\n    [cards, setCards]\n  );\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmDeleteClick(card) {\n    setSelectedCard(card);\n\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n\n    setIsImagePopupOpen(true);\n  }\n\n  const handlePopupClick = React.useCallback(e => {\n    if (e.target === e.currentTarget) {\n      closeAllPopups();\n    }\n  }, []);\n\n  const handleUpdateUser = closeAllPopups;\n  const handleUpdateAvatar = closeAllPopups;\n\n  function handleAddPlaceSubmit(title, link) {\n    const oldCards = cards;\n\n    const expectedCard = {\n      isTemporarilyLocal: true,\n      name: title,\n      link,\n    };\n\n    setCards([expectedCard, ...cards]);\n\n    api\n      .addCard(title, link)\n      .then(newCard => setCards([newCard, ...cards]))\n      .catch(() => setCards(oldCards));\n\n    closeAllPopups();\n  }\n\n  const escHandler = React.useCallback(e => {\n    if (e.key === 'Escape') {\n      closeAllPopups();\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const listenerArgs = ['keydown', escHandler, false];\n\n    document.addEventListener(...listenerArgs);\n\n    return () => document.removeEventListener(...listenerArgs);\n  }, [escHandler]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <CurrentUserDispatchContext.Provider value={setCurrentUser}>\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleConfirmDeleteClick}\n        />\n        <Footer />\n\n        <EditProfilePopup\n          onUpdateUser={handleUpdateUser}\n          isOpen={isEditProfilePopupOpen}\n          onClose={handlePopupClick}\n        />\n\n        <AddPlacePopup\n          onAddPlace={handleAddPlaceSubmit}\n          isOpen={isAddPlacePopupOpen}\n          onClose={handlePopupClick}\n        />\n\n        <EditAvatarPopup\n          onUpdateAvatar={handleUpdateAvatar}\n          isOpen={isEditAvatarPopupOpen}\n          onClose={handlePopupClick}\n        />\n\n        <ConfirmDeletePopup\n          card={selectedCard}\n          onCardDelete={handleCardDelete}\n          isOpen={isConfirmDeletePopupOpen}\n          onClose={handlePopupClick}\n        />\n\n        <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={handlePopupClick} />\n      </CurrentUserDispatchContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}