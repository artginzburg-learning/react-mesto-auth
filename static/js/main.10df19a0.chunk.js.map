{"version":3,"sources":["utils/constants.js","hooks/useStateWithLocalStorage.js","hooks/useEscapeHandler.js","classes/Api.js","api/api.js","api/auth.js","contexts/CurrentUserContext.jsx","utils/utils.js","components/Form.jsx","components/FormInput.jsx","images/check.svg","images/cross.svg","components/Popup.jsx","components/InfoTooltip.jsx","components/LoginOrRegister.jsx","components/Login.jsx","components/Register.jsx","components/Authentication.jsx","components/ProtectedRoute.jsx","utils/pkg.js","components/Main.jsx","images/logo.svg","components/Header.jsx","components/Card.jsx","components/Footer.jsx","utils/FormValidator.js","components/PopupWithForm.jsx","utils/enableValidation.js","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ConfirmDeletePopup.jsx","components/ImagePopup.jsx","components/App.jsx","hooks/useStateWithBase64.js","reportWebVitals.js","index.jsx"],"names":["apiDomain","paths","pathNames","title","action","useStateWithLocalStorage","computed","defaultForComputed","useState","localStorage","JSON","parse","currentState","updateCurrentState","localStorageChanged","useCallback","e","key","newValue","setCurrentState","value","stringify","useEffect","listenerArgs","window","addEventListener","removeEventListener","useEscapeHandler","dispatch","escHandler","document","Api","options","_handleFetch","res","ok","json","Promise","reject","status","this","_baseUrl","baseUrl","_headers","headers","_authFormat","authorization","token","target","method","body","fetch","then","api","url","URL","version","endpoints","users","cards","editProfile","name","about","_customFetch","addCard","link","deleteCard","cardId","changeLikeCardStatus","updateAvatar","avatar","origin","signup","signin","user","email","password","_constructAuthorization","data","defaultUserState","CurrentUserContext","React","createContext","CurrentUserDispatchContext","CurrentUserProvider","children","currentUser","setCurrentUser","getUserInfo","catch","err","console","log","Provider","useCurrentUser","context","useContext","undefined","Error","useCurrentUserDispatcher","objectsAreEqual","first","second","sendApiUpdate","updates","func","a","expectedUser","updatedUser","classToSelector","className","popupSelectors","formClassesConfig","defaultFormConfig","formSelector","inputSelector","submitButtonSelector","inputErrorClass","errorClass","Form","memo","props","onSubmit","finalProps","handleSubmit","preventDefault","defaults","PopupInput","forwardRef","forwardedRef","ref","createRef","type","required","conditionalMinLength","minLength","isFocused","inputProps","current","parentElement","activeElement","setTimeout","focus","id","classNameClosed","isOpened","classNameOpened","modalRoot","getElementById","Popup","classNameForAnimation","setClassNameForAnimation","shouldAppearInDOM","setShouldAppearInDOM","isOpen","blur","showingTimout","clearTimeout","hidingTimeout","filter","el","join","createPortal","onClick","InfoTooltip","isOpenState","setIsOpen","isSuccess","isSuccessState","closeItself","alt","src","checkIcon","crossIcon","propsForInputs","autoCorrect","spellCheck","LoginOrRegister","states","setEmail","setPassword","FormInput","autoFocus","placeholder","autoComplete","onChange","passwordAutocomplete","buttonTitle","isPopupOpen","isPopupSuccess","defaultProps","Login","history","useHistory","setTooltipIsOpen","auth","login","handleLogin","push","Register","setTooltipIsSuccess","register","to","Authentication","location","useLocation","atob","pathname","ProtectedRoute","loggedIn","repoSplit","repository","split","pop","repo","Header","buttonLink","href","logo","credential","Card","card","likes","isTemporarilyLocal","owner","cardDeleteButtonClassNames","_id","cardDeleteButtonClassNameAttrubited","cardDeleteButtonFinalClassName","cardLikeButtonClassNames","some","i","cardLikeButtonClassNameAttributed","cardLikeButtonFinalClassName","onCardClick","onCardDelete","onCardLike","length","defaultCard","defaultCards","Main","useMemo","onEditAvatar","onEditProfile","onAddPlace","map","Math","random","repoSplitted","copyrightLink","yearOfBuild","Date","getFullYear","Footer","rel","author","FormValidator","element","_showInputError","inputElement","errorMessage","errorElement","_element","querySelector","classList","add","_data","textContent","_hideInputError","remove","_resetFormErrors","_inputList","forEach","_toggleButtonState","_checkInputValidity","validity","valid","validationMessage","_hasInvalidInput","inputList","disable","_buttonElement","disabled","_validationHandler","_setListeners","Array","from","querySelectorAll","PopupWithForm","propsWithoutCustom","reset","popupId","validationTimeout","formElement","enableValidation","onClose","onReset","EditProfilePopup","setName","setAbout","onUpdateUser","autoCapitalize","maxLength","EditAvatarPopup","useRef","onUpdateAvatar","AddPlacePopup","setTitle","setLink","ConfirmDeletePopup","ImagePopup","App","setLoggedIn","initialState","updateState","setState","btoa","state","useStateWithBase64","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCards","oldCards","isLiked","expectedCardLikes","like","expectedCard","c","newCard","error","closeAllPopups","getInitialCards","handleCardDelete","handlePopupClick","currentTarget","handleUpdateUser","handleUpdateAvatar","handleTokenCheck","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.10df19a0.chunk.js","sourcesContent":["export const apiDomain = 'nomoreparties.co';\n\nexport const paths = {\n  login: '/login',\n  register: '/register',\n  main: '/',\n};\n\nexport const pathNames = {\n  login: {\n    title: 'Вход',\n    action: 'Войти',\n  },\n  register: {\n    title: 'Регистрация',\n    action: 'Зарегистрироваться',\n  },\n  quit: {\n    action: 'Выйти',\n  },\n};\n","import { useState, useCallback, useEffect } from 'react';\n\nexport default function useStateWithLocalStorage(computed, defaultForComputed) {\n  const [currentState, updateCurrentState] = useState(\n    localStorage[computed] ? JSON.parse(localStorage[computed]) : defaultForComputed\n  );\n\n  const localStorageChanged = useCallback(\n    e => {\n      if (e.key === computed) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : defaultForComputed);\n      }\n    },\n    [computed, defaultForComputed]\n  );\n\n  const setCurrentState = useCallback(\n    value => {\n      localStorage[computed] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [computed]\n  );\n\n  useEffect(() => {\n    const listenerArgs = ['storage', localStorageChanged];\n\n    window.addEventListener(...listenerArgs);\n    return () => {\n      window.removeEventListener(...listenerArgs);\n    };\n  }, [localStorageChanged]);\n\n  return [currentState, setCurrentState];\n}\n","import { useCallback, useEffect } from 'react';\n\nexport default function useEscapeHandler(dispatch) {\n  const escHandler = useCallback(\n    e => {\n      if (e.key === 'Escape') {\n        dispatch();\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const listenerArgs = ['keydown', escHandler, false];\n\n    document.addEventListener(...listenerArgs);\n\n    return () => document.removeEventListener(...listenerArgs);\n  }, [escHandler]);\n}\n","export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n\n    this._authFormat = '';\n  }\n\n  _constructAuthorization() {\n    this._headers = {\n      ...this._headers,\n      authorization: this._authFormat + localStorage.token,\n    };\n  }\n\n  _handleFetch = res => (res.ok ? res.json() : Promise.reject(res.status));\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers ?? {},\n    };\n\n    if (method && method !== 'GET') {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options).then(this._handleFetch);\n  }\n}\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst COHORT_ID = 'cohort-24';\nconst TOKEN = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: new URL(`https://mesto.${apiDomain}`),\n  version: 'v1',\n  endpoints: {\n    users: 'users/me',\n    cards: 'cards',\n  },\n};\n\nclass Features extends Api {\n  getUserInfo() {\n    return this._customFetch(api.endpoints.users);\n  }\n\n  getInitialCards() {\n    return this._customFetch(api.endpoints.cards);\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch(api.endpoints.users, 'PATCH', {\n      name,\n      about,\n    });\n\n  addCard = (name, link) =>\n    this._customFetch(api.endpoints.cards, 'POST', {\n      name,\n      link,\n    });\n\n  deleteCard = cardId => this._customFetch(`${api.endpoints.cards}/${cardId}`, 'DELETE');\n\n  changeLikeCardStatus = (cardId, status) =>\n    this._customFetch(`${api.endpoints.cards}/likes/${cardId}`, status ? 'PUT' : 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch(`${api.endpoints.users}/avatar`, 'PATCH', {\n      avatar,\n    });\n}\n\nexport default new Features({\n  baseUrl: `${api.url.origin}/${api.version}/${COHORT_ID}`,\n  headers: {\n    authorization: TOKEN,\n  },\n});\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst api = {\n  url: new URL(`https://auth.${apiDomain}`),\n  endpoints: {\n    signup: 'signup',\n    signin: 'signin',\n    user: 'users/me',\n  },\n};\n\nclass Auth extends Api {\n  constructor(options) {\n    super(options);\n\n    this._authFormat = 'Bearer ';\n  }\n\n  register(email, password) {\n    return this._customFetch(api.endpoints.signup, 'POST', { password, email });\n  }\n\n  login(email, password) {\n    return this._customFetch(api.endpoints.signin, 'POST', { password, email });\n  }\n\n  getUserInfo() {\n    this._constructAuthorization();\n\n    return this._customFetch(api.endpoints.user).then(res => res.data);\n  }\n}\n\nexport default new Auth({\n  baseUrl: api.url.origin,\n});\n","import React from 'react';\n\nimport api from '../api/api';\n\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\n\nconst defaultUserState = {\n  name: 'Неизвестный',\n  about: 'Потеряно соединение с сервером',\n};\n\nconst CurrentUserContext = React.createContext();\nconst CurrentUserDispatchContext = React.createContext();\n\nfunction CurrentUserProvider({ children }) {\n  const [currentUser, setCurrentUser] = useStateWithLocalStorage('currentUser', defaultUserState);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then(setCurrentUser)\n      .catch(err => console.log('Couldnt get user info from the server', err));\n  }, [setCurrentUser]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <CurrentUserDispatchContext.Provider value={setCurrentUser}>\n        {children}\n      </CurrentUserDispatchContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nfunction useCurrentUser() {\n  const context = React.useContext(CurrentUserContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUser must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction useCurrentUserDispatcher() {\n  const context = React.useContext(CurrentUserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUserDispatcher must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction objectsAreEqual(first, second) {\n  return JSON.stringify(first) === JSON.stringify(second);\n}\n\nasync function sendApiUpdate(dispatch, user, updates, func) {\n  const expectedUser = { ...user, ...updates };\n  dispatch(expectedUser);\n\n  try {\n    const updatedUser = await api[func](updates);\n    if (!objectsAreEqual(expectedUser, updatedUser)) {\n      dispatch(updatedUser);\n    }\n  } catch (error) {\n    dispatch(user);\n    throw error;\n  }\n}\n\nexport { CurrentUserProvider, useCurrentUser, useCurrentUserDispatcher, sendApiUpdate };\n","const classToSelector = (className) => `.${className}`;\n\nexport const popupSelectors = {\n  closeButtonClass: 'popup__close-button',\n};\n\nexport const formClassesConfig = {\n  formClass: 'form',\n  inputClass: 'form__input',\n  inputErrorClass: 'form__input_type_error',\n  errorClass: 'form__error_visible',\n  submitButtonClass: 'form__button',\n};\n\nexport const defaultFormConfig = {\n  formSelector: classToSelector(formClassesConfig.formClass),\n  inputSelector: classToSelector(formClassesConfig.inputClass),\n  submitButtonSelector: classToSelector(formClassesConfig.submitButtonClass),\n  inputErrorClass: formClassesConfig.inputErrorClass,\n  errorClass: formClassesConfig.errorClass,\n};\n","import { memo, useCallback } from 'react';\n\nconst Form = memo(props => {\n  const { onSubmit, ...finalProps } = props;\n\n  const handleSubmit = useCallback(\n    e => {\n      if (onSubmit) {\n        e.preventDefault();\n\n        onSubmit(e);\n      }\n    },\n    [onSubmit]\n  );\n\n  return (\n    <form action=\"#\" onSubmit={handleSubmit} {...finalProps}>\n      {props.children}\n    </form>\n  );\n});\n\nexport default Form;\n","import { forwardRef, createRef, useEffect } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\n\nconst defaults = {\n  type: 'text',\n  required: true,\n  minLength: 2,\n};\n\nconst PopupInput = forwardRef((props, forwardedRef) => {\n  const ref = forwardedRef ?? createRef();\n\n  const type = props.type ?? defaults.type;\n\n  const required = props.required ?? defaults.required;\n\n  const conditionalMinLength = type === defaults.type ? defaults.minLength : null;\n  const minLength = props.minLength ?? conditionalMinLength;\n\n  const finalProps = {\n    type,\n    minLength,\n    required,\n    ref,\n  };\n\n  const { isFocused, ...inputProps } = props;\n\n  useEffect(() => {\n    if (\n      isFocused &&\n      ref &&\n      ref.current &&\n      ref.current.parentElement !== document.activeElement.parentElement\n    ) {\n      setTimeout(() => {\n        ref && ref.current && ref.current.focus();\n      }, 50);\n    }\n  }, [isFocused, ref]);\n\n  return (\n    <>\n      <input\n        {...inputProps}\n        className={`${formClassesConfig.inputClass}${\n          inputProps.className ? ` ${inputProps.className}` : ''\n        }`}\n        {...finalProps}\n      />\n      <p className=\"form__error\" id={`${props.id}-error`} />\n    </>\n  );\n});\n\nexport default PopupInput;\n","export default __webpack_public_path__ + \"static/media/check.5221857e.svg\";","export default __webpack_public_path__ + \"static/media/cross.173b3897.svg\";","import { useState, useEffect, memo } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst POPUP_ANIMATION_DURATION = 300;\n\nconst defaults = {\n  className: 'popup',\n  classNameClosed: '',\n  isOpened: false,\n};\ndefaults.classNameOpened = `${defaults.className}_opened`;\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Popup = memo(props => {\n  const [classNameForAnimation, setClassNameForAnimation] = useState(defaults.classNameClosed);\n  const [shouldAppearInDOM, setShouldAppearInDOM] = useState(defaults.isOpened);\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      document.activeElement.blur(); // fixes mobile keyboard being stuck on the screen after form submission (due to `event.preventDefault()`)\n    }\n\n    if (props.isOpen) {\n      setShouldAppearInDOM(!defaults.isOpened);\n      const showingTimout = setTimeout(() => {\n        setClassNameForAnimation(defaults.classNameOpened);\n      }, 10);\n\n      return () => clearTimeout(showingTimout);\n    } else {\n      setClassNameForAnimation(defaults.classNameClosed);\n      const hidingTimeout = setTimeout(() => {\n        setShouldAppearInDOM(defaults.isOpened);\n      }, POPUP_ANIMATION_DURATION);\n\n      return () => clearTimeout(hidingTimeout);\n    }\n  }, [props.isOpen]);\n\n  if (!shouldAppearInDOM) {\n    return null;\n  }\n\n  const classNames = [defaults.className, props.className, classNameForAnimation].filter(\n    el => el != null && el !== ''\n  );\n\n  const className = classNames.join(' ');\n\n  return createPortal(\n    <section onClick={props.onClick} className={className} id={props.id}>\n      {props.children}\n    </section>,\n    modalRoot\n  );\n});\n\nexport default Popup;\n","import { memo, useCallback } from 'react';\n\nimport checkIcon from '../images/check.svg';\nimport crossIcon from '../images/cross.svg';\n\nimport useEscapeHandler from '../hooks/useEscapeHandler';\n\nimport { popupSelectors } from '../utils/utils';\n\nimport Popup from './Popup';\n\nconst InfoTooltip = memo(props => {\n  const [isOpen, setIsOpen] = props.isOpenState;\n  const [isSuccess] = props.isSuccessState;\n\n  const closeItself = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  useEscapeHandler(closeItself);\n\n  return (\n    <Popup isOpen={isOpen} onClick={closeItself}>\n      <div className=\"popup__container\">\n        <button type=\"button\" className={popupSelectors.closeButtonClass} />\n\n        <div className=\"info-tooltip\">\n          <img alt=\"Иконка\" src={isSuccess ? checkIcon : crossIcon} />\n          <h3 className=\"info-tooltip__title\">\n            {isSuccess\n              ? 'Вы успешно зарегистрировались!'\n              : 'Что-то пошло не так! Попробуйте ещё раз.'}\n          </h3>\n        </div>\n      </div>\n    </Popup>\n  );\n});\n\nexport default InfoTooltip;\n","import { memo } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\n\nimport Form from './Form';\nimport FormInput from './FormInput';\nimport InfoTooltip from './InfoTooltip';\n\nconst propsForInputs = {\n  autoCorrect: 'off',\n  spellCheck: false,\n  className: `${formClassesConfig.inputClass}_theme_dark`,\n};\n\nconst LoginOrRegister = memo((props) => {\n  const [email, setEmail] = props.states.email;\n  const [password, setPassword] = props.states.password;\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <div className=\"auth\">\n      <h2 className=\"auth__title\">{props.title}</h2>\n\n      <Form onSubmit={props.onSubmit} className={formClassesConfig.formClass}>\n        <FormInput\n          {...propsForInputs}\n          autoFocus\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          autoComplete=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n        <FormInput\n          {...propsForInputs}\n          id={props.passwordAutocomplete}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Пароль\"\n          autoComplete={props.passwordAutocomplete}\n          value={password}\n          onChange={handlePasswordChange}\n        />\n        <button\n          type=\"submit\"\n          className={`auth__button ${formClassesConfig.submitButtonClass} ${formClassesConfig.submitButtonClass}_theme_dark`}\n        >\n          {props.buttonTitle}\n        </button>\n      </Form>\n      {props.children}\n      <InfoTooltip\n        isOpenState={props.states.isPopupOpen}\n        isSuccessState={props.states.isPopupSuccess}\n      />\n    </div>\n  );\n});\n\nexport default LoginOrRegister;\n","import { memo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\n\nimport auth from '../api/auth';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'current-password',\n  title: pathNames.login.title,\n  buttonTitle: pathNames.login.action,\n};\n\nconst Login = memo((props) => {\n  const history = useHistory();\n\n  const [email, setEmail] = props.states.email;\n  const [password, setPassword] = props.states.password;\n\n  const setTooltipIsOpen = props.states.isPopupOpen[1];\n\n  function handleSubmit() {\n    if (!email || !password) {\n      return;\n    }\n\n    auth\n      .login(email, password)\n      .then((data) => {\n        if (data.token) {\n          setEmail('');\n          setPassword('');\n\n          localStorage.token = data.token;\n\n          props.handleLogin(email);\n          history.push(paths.main);\n        }\n      })\n      .catch((err) => {\n        setTooltipIsOpen(true);\n        console.log(err);\n      });\n  }\n\n  return <LoginOrRegister onSubmit={handleSubmit} {...props} {...defaultProps} />;\n});\n\nexport default Login;\n","import { memo } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\n\nimport auth from '../api/auth';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'new-password',\n  title: pathNames.register.title,\n  buttonTitle: pathNames.register.action,\n};\n\nconst Register = memo((props) => {\n  const history = useHistory();\n\n  const [email] = props.states.email;\n  const [password] = props.states.password;\n\n  const setTooltipIsOpen = props.states.isPopupOpen[1];\n  const setTooltipIsSuccess = props.states.isPopupSuccess[1];\n\n  function handleSubmit() {\n    auth\n      .register(email, password)\n      .then(() => {\n        history.push(paths.login);\n        setTooltipIsSuccess(true);\n        setTooltipIsOpen(true);\n      })\n      .catch((err) => {\n        setTooltipIsSuccess(false);\n        setTooltipIsOpen(true);\n        console.log(err);\n      });\n  }\n\n  return (\n    <LoginOrRegister onSubmit={handleSubmit} {...props} {...defaultProps}>\n      <div className=\"auth__signin\">\n        Уже зарегистрированы?{' '}\n        <Link to={paths.login} className=\"auth__login-link\">\n          {pathNames.login.action}\n        </Link>\n      </div>\n    </LoginOrRegister>\n  );\n});\n\nexport default Register;\n","import { memo, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nimport Login from './Login';\nimport Register from './Register';\n\nconst Authentication = memo((props) => {\n  const location = useLocation();\n\n  const states = {\n    email: useState(localStorage.email ? atob(JSON.parse(localStorage.email)) : ''),\n    password: useState(''),\n    isPopupOpen: useState(false),\n    isPopupSuccess: useState(false),\n  };\n\n  const pathIsLogin = location.pathname === paths.login;\n\n  return pathIsLogin ? (\n    <Login handleLogin={props.handleLogin} states={states} />\n  ) : (\n    <Register states={states} />\n  );\n});\n\nexport default Authentication;\n","import { Route, Redirect } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nconst ProtectedRoute = props => {\n  return <Route>{props.loggedIn ? props.children : <Redirect to={paths.login} />}</Route>;\n};\n\nexport default ProtectedRoute;\n","import { repository } from '../../package.json';\n\nconst repoSeparator = '.';\n\nconst repoSplit = repository.url.split(repoSeparator);\nrepoSplit.pop();\n\nconst repoJoined = repoSplit.join(repoSeparator);\n\nexport const repo = repoJoined.split('+')[1];\n","import { memo, useMemo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Card from './Card';\n\nconst MAXIMUM_CARDS_QUANTITY = 30;\n\nconst defaultCard = {\n  isTemporarilyLocal: true,\n  name: 'Загрузка...',\n};\n\nconst defaultCards = [];\nfor (let i = 0; i < MAXIMUM_CARDS_QUANTITY; i++) {\n  defaultCards.push(defaultCard);\n}\n\nconst Main = memo(props => {\n  const currentUser = useCurrentUser();\n\n  const cards = useMemo(() => (props.cards.length ? props.cards : defaultCards), [props.cards]);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n          <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar} />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__description\">{currentUser.about}</p>\n          <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n        </div>\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {cards.map(card => (\n            <Card\n              key={card._id ?? Math.random()}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              card={card}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n});\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import { memo } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\nimport { repo } from '../utils/pkg';\n\nimport logo from '../images/logo.svg';\n\nconst Header = memo((props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  let buttonTitle;\n  let buttonLink = paths.login;\n  let loggedIn = false;\n\n  switch (location.pathname) {\n    case paths.login:\n      buttonTitle = pathNames.register.title;\n      buttonLink = paths.register;\n      break;\n\n    case paths.register:\n      buttonTitle = pathNames.login.action;\n      break;\n\n    default:\n      buttonTitle = pathNames.quit.action;\n      loggedIn = true;\n      break;\n  }\n\n  function signOut() {\n    delete localStorage.token;\n    history.push(paths.login);\n  }\n\n  return (\n    <header className=\"header\">\n      <a target=\"_self\" href={repo} className=\"logo header__logo\">\n        <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n      </a>\n      <div className=\"header__container\">\n        {loggedIn && props.credential ? (\n          <p className=\"header__credential\">{props.credential}</p>\n        ) : null}\n        <Link\n          to={buttonLink}\n          onClick={loggedIn ? signOut : null}\n          className={`header__action-button${loggedIn ? ' header__action-button_dimmed' : ''}`}\n        >\n          {buttonTitle}\n        </Link>\n      </div>\n    </header>\n  );\n});\n\nexport default Header;\n","import { memo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst defaults = {\n  cardDeleteButtonClassName: 'element__trash-button',\n  cardLikeButtonClassName: 'element__like-button',\n};\n\nconst Card = memo(props => {\n  const { card } = props;\n\n  card.likes = card.likes ?? [];\n\n  const currentUser = useCurrentUser();\n\n  if (card.isTemporarilyLocal) {\n    card.owner = currentUser;\n  }\n\n  const cardDeleteButtonClassNames = [defaults.cardDeleteButtonClassName];\n\n  const isOwn = card.owner._id === currentUser._id;\n  if (isOwn) {\n    const cardDeleteButtonClassNameAttrubited = `${defaults.cardDeleteButtonClassName}_visible`;\n    cardDeleteButtonClassNames.push(cardDeleteButtonClassNameAttrubited);\n  }\n\n  const cardDeleteButtonFinalClassName = cardDeleteButtonClassNames.join(' ');\n\n  const cardLikeButtonClassNames = [defaults.cardLikeButtonClassName];\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  if (isLiked) {\n    const cardLikeButtonClassNameAttributed = `${defaults.cardLikeButtonClassName}_active`;\n    cardLikeButtonClassNames.push(cardLikeButtonClassNameAttributed);\n  }\n\n  const cardLikeButtonFinalClassName = cardLikeButtonClassNames.join(' ');\n\n  function handleImageClick() {\n    props.onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"element\">\n      <img onClick={handleImageClick} className=\"element__image\" alt={card.name} src={card.link} />\n      <button onClick={handleDeleteClick} type=\"reset\" className={cardDeleteButtonFinalClassName} />\n      <div className=\"element__container\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <button\n            onClick={handleLikeClick}\n            type=\"button\"\n            className={cardLikeButtonFinalClassName}\n          />\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n});\n\nexport default Card;\n","import { memo } from 'react';\n\nimport { author } from '../../package.json';\n\nimport { repo } from '../utils/pkg';\n\nconst linkSeparator = '/';\n\nconst repoSplitted = repo.split(linkSeparator);\nrepoSplitted.pop();\n\nconst copyrightLink = repoSplitted.join(linkSeparator);\n\nconst yearOfBuild = new Date().getFullYear();\n\nconst Footer = memo(() => (\n  <footer className=\"footer\">\n    <a target=\"_blank\" rel=\"noreferrer\" href={copyrightLink} className=\"footer__copyright\">\n      &copy; {yearOfBuild} {author}\n    </a>\n  </footer>\n));\n\nexport default Footer;\n","export default class FormValidator {\n  constructor(data, element) {\n    this._data = data;\n    this._element = element;\n\n    this._inputList = Array.from(this._element.querySelectorAll(this._data.inputSelector));\n\n    this._buttonElement = this._element.querySelector(this._data.submitButtonSelector);\n  }\n\n  enableValidation() {\n    this._toggleButtonState();\n\n    this._setListeners();\n  }\n\n  _showInputError = (inputElement, errorMessage) => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.add(this._data.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._data.errorClass);\n  };\n\n  _hideInputError = inputElement => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(this._data.inputErrorClass);\n    errorElement.classList.remove(this._data.errorClass);\n    errorElement.textContent = '';\n  };\n\n  _resetFormErrors = () => {\n    this._inputList.forEach(inputElement => this._hideInputError(inputElement));\n    this._toggleButtonState(1);\n  };\n\n  _checkInputValidity = inputElement =>\n    inputElement.validity.valid\n      ? this._hideInputError(inputElement)\n      : this._showInputError(inputElement, inputElement.validationMessage);\n\n  _hasInvalidInput = inputList => inputList.some(inputElement => !inputElement.validity.valid);\n\n  _toggleButtonState = disable =>\n    (this._buttonElement.disabled = disable || this._hasInvalidInput(this._inputList));\n\n  _validationHandler = inputElement => {\n    this._checkInputValidity(inputElement);\n\n    this._toggleButtonState();\n  };\n\n  _setListeners = () => {\n    this._element.addEventListener('reset', this._resetFormErrors);\n\n    this._inputList.forEach(inputElement => {\n      if (inputElement.value) {\n        this._validationHandler(inputElement);\n      }\n      inputElement.addEventListener('input', () => this._validationHandler(inputElement));\n    });\n  };\n}\n","import { memo, useCallback, useEffect } from 'react';\n\nimport { popupSelectors, formClassesConfig } from '../utils/utils';\nimport enableValidation from '../utils/enableValidation';\nimport { defaultFormConfig } from '../utils/utils';\n\nimport Popup from './Popup';\nimport Form from './Form';\n\nconst defaultButtonTitle = 'Сохранить';\n\nconst PopupWithForm = memo((props) => {\n  const { onSubmit, children, ...propsWithoutCustom } = props;\n  props = propsWithoutCustom;\n\n  const buttonTitle = props.buttonTitle ?? defaultButtonTitle;\n\n  const handleSubmit = useCallback(\n    (e) => {\n      onSubmit && onSubmit(e);\n\n      if (children) {\n        e.target.reset();\n      }\n    },\n    [children, onSubmit]\n  );\n\n  const popupId = props.name;\n\n  useEffect(() => {\n    if (props.isOpen) {\n      const validationTimeout = setTimeout(() => {\n        enableValidation(\n          document.getElementById(popupId).querySelector(defaultFormConfig.formSelector)\n        );\n      }, 1);\n\n      return () => clearTimeout(validationTimeout);\n    }\n  }, [popupId, props.isOpen]);\n\n  return (\n    <Popup isOpen={props.isOpen} onClick={props.onClose} id={popupId}>\n      <div className=\"popup__container\">\n        <button type=\"reset\" className={popupSelectors.closeButtonClass} />\n        <h2 className=\"popup__title\">{props.title}</h2>\n\n        <Form\n          className={formClassesConfig.formClass}\n          onSubmit={handleSubmit}\n          onReset={props.onReset}\n        >\n          {children}\n          <button type=\"submit\" className={`popup__button ${formClassesConfig.submitButtonClass}`}>\n            {buttonTitle}\n          </button>\n        </Form>\n      </div>\n    </Popup>\n  );\n});\n\nexport default PopupWithForm;\n","import FormValidator from './FormValidator';\nimport { defaultFormConfig } from './utils';\n\nexport default function enableValidation(formElement) {\n  const profileEditorValidator = new FormValidator(defaultFormConfig, formElement);\n  profileEditorValidator.enableValidation();\n}\n","import { useState, useEffect, memo } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst EditProfilePopup = memo(props => {\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setAbout(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit() {\n    sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        name,\n        about,\n      },\n      'editProfile'\n    );\n\n    props.onUpdateUser();\n  }\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleAboutChange(e) {\n    setAbout(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Редактировать профиль\"\n      name=\"profile-editor\"\n    >\n      <PopupInput\n        isFocused={props.isOpen}\n        value={name}\n        onChange={handleNameChange}\n        autoComplete=\"name\"\n        autoCapitalize=\"words\"\n        name=\"name\"\n        id=\"profile-name\"\n        placeholder=\"Имя\"\n        maxLength=\"40\"\n      />\n\n      <PopupInput\n        value={about}\n        onChange={handleAboutChange}\n        name=\"about\"\n        id=\"profile-about\"\n        placeholder=\"О себе\"\n        maxLength=\"200\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditProfilePopup;\n","import { memo, useRef } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst EditAvatarPopup = memo(props => {\n  const ref = useRef();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  function handleSubmit() {\n    sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        avatar: ref.current.value,\n      },\n      'updateAvatar'\n    );\n\n    props.onUpdateAvatar();\n  }\n\n  return (\n    <PopupWithForm {...props} onSubmit={handleSubmit} title=\"Обновить аватар\" name=\"avatar-editor\">\n      <PopupInput\n        isFocused={props.isOpen}\n        ref={ref}\n        type=\"url\"\n        name=\"avatar\"\n        id=\"profile-avatar\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditAvatarPopup;\n","import { memo, useState } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\nimport PopupInput from './FormInput';\n\nconst defaults = {\n  title: '',\n  link: '',\n};\n\nconst AddPlacePopup = memo(props => {\n  const [title, setTitle] = useState(defaults.title);\n  const [link, setLink] = useState(defaults.link);\n\n  function handleSubmit() {\n    props.onAddPlace(title, link);\n  }\n\n  function handleReset() {\n    setTitle(defaults.title);\n    setLink(defaults.link);\n  }\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      title=\"Новое место\"\n      name=\"element-editor\"\n      buttonTitle=\"Создать\"\n    >\n      <PopupInput\n        isFocused={props.isOpen}\n        value={title}\n        onChange={handleTitleChange}\n        name=\"title\"\n        id=\"element-title\"\n        placeholder=\"Название\"\n        maxLength=\"30\"\n      />\n\n      <PopupInput\n        value={link}\n        onChange={handleLinkChange}\n        type=\"url\"\n        name=\"link\"\n        id=\"element-link\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default AddPlacePopup;\n","import { memo } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = memo(props => {\n  function handleSubmit() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Вы уверены?\"\n      name=\"delete-confirmation\"\n      buttonTitle=\"Да\"\n    />\n  );\n});\n\nexport default ConfirmDeletePopup;\n","import { memo } from 'react';\n\nimport { popupSelectors } from '../utils/utils';\n\nimport Popup from './Popup';\n\nconst classNames = [\n  popupSelectors.closeButtonClass,\n  `${popupSelectors.closeButtonClass}_parent-corners_straight`,\n];\n\nconst className = classNames.join(' ');\n\nconst ImagePopup = memo(props => {\n  const card = props.card;\n\n  return (\n    <Popup\n      isOpen={props.isOpen}\n      onClick={props.onClose}\n      className=\"popup_type_image\"\n      id=\"image-viewer\"\n    >\n      <figure className=\"popup__figure\">\n        <button type=\"button\" className={className} />\n        <img className=\"popup__image\" alt={card.name} src={card.link} />\n        <figcaption className=\"popup__caption\">{card.name}</figcaption>\n      </figure>\n    </Popup>\n  );\n});\n\nexport default ImagePopup;\n","import React from 'react';\n\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\nimport useStateWithBase64 from '../hooks/useStateWithBase64';\nimport useEscapeHandler from '../hooks/useEscapeHandler';\n\nimport api from '../api/api';\nimport auth from '../api/auth';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Authentication from './Authentication';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const history = useHistory();\n\n  const [loggedIn, setLoggedIn] = React.useState(!!localStorage.token);\n  const [email, setEmail] = useStateWithBase64('email', '');\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [cards, setCards] = useStateWithLocalStorage('cards', []);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch((err) => console.log('Couldnt get initial cards from the server', err));\n  }, [setCards]);\n\n  async function handleCardLike(card) {\n    const oldCards = cards;\n\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    const expectedCardLikes = isLiked\n      ? card.likes.filter((like) => like._id !== currentUser._id)\n      : [...card.likes, currentUser];\n\n    const expectedCard = { ...card, likes: expectedCardLikes };\n\n    setCards(cards.map((c) => (c._id === card._id ? expectedCard : c)));\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n      setCards(cards.map((c) => (c._id === card._id ? newCard : c)));\n    } catch (error) {\n      setCards(oldCards);\n      console.error(error);\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  const handleCardDelete = React.useCallback(\n    (card) => {\n      const oldCards = cards;\n\n      setCards(cards.filter((c) => c._id !== card._id));\n\n      api.deleteCard(card._id).catch((error) => {\n        setCards(oldCards);\n        throw error;\n      });\n\n      closeAllPopups();\n    },\n    [cards, setCards]\n  );\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmDeleteClick(card) {\n    setSelectedCard(card);\n\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n\n    setIsImagePopupOpen(true);\n  }\n\n  const handlePopupClick = React.useCallback((e) => {\n    if (e.target === e.currentTarget) {\n      closeAllPopups();\n    }\n  }, []);\n\n  const handleUpdateUser = closeAllPopups;\n  const handleUpdateAvatar = closeAllPopups;\n\n  function handleAddPlaceSubmit(title, link) {\n    const oldCards = cards;\n\n    const expectedCard = {\n      isTemporarilyLocal: true,\n      name: title,\n      link,\n    };\n\n    setCards([expectedCard, ...cards]);\n\n    api\n      .addCard(title, link)\n      .then((newCard) => setCards([newCard, ...cards]))\n      .catch(() => setCards(oldCards));\n\n    closeAllPopups();\n  }\n\n  useEscapeHandler(closeAllPopups);\n\n  const handleLogin = React.useCallback(\n    (email) => {\n      setEmail(email);\n      setLoggedIn(true);\n    },\n    [setEmail]\n  );\n\n  const handleTokenCheck = React.useCallback(() => {\n    if (localStorage.token) {\n      auth.token = localStorage.token;\n      auth\n        .getUserInfo()\n        .then((res) => {\n          if (res) {\n            handleLogin(res.email);\n            history.push(paths.main);\n          }\n        })\n        .catch((err) => {\n          setLoggedIn(false);\n\n          console.log(err);\n        });\n    }\n  }, [handleLogin, history]);\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, [handleTokenCheck]);\n\n  return (\n    <>\n      <Header credential={email} />\n      <Switch>\n        <Route path={[paths.register, paths.login]}>\n          <Authentication handleLogin={handleLogin} />\n        </Route>\n        <ProtectedRoute path={paths.main} loggedIn={loggedIn}>\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDeleteClick}\n          />\n\n          <EditProfilePopup\n            onUpdateUser={handleUpdateUser}\n            isOpen={isEditProfilePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <AddPlacePopup\n            onAddPlace={handleAddPlaceSubmit}\n            isOpen={isAddPlacePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdateAvatar}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <ConfirmDeletePopup\n            card={selectedCard}\n            onCardDelete={handleCardDelete}\n            isOpen={isConfirmDeletePopupOpen}\n            onClose={handlePopupClick}\n          />\n\n          <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={handlePopupClick} />\n        </ProtectedRoute>\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useStateWithLocalStorage from './useStateWithLocalStorage';\n\nexport default function useStateWithBase64(computed, defaultForComputed) {\n  const [initialState, updateState] = useStateWithLocalStorage(computed, defaultForComputed);\n\n  const setState = useCallback(\n    value => {\n      updateState(btoa(value));\n    },\n    [updateState]\n  );\n\n  const state = useRef(atob(initialState));\n\n  useEffect(() => {\n    state.current = atob(initialState);\n  });\n\n  return [state.current, setState];\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <CurrentUserProvider>\n        <App />\n      </CurrentUserProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}