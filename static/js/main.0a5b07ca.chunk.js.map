{"version":3,"sources":["utils/constants.js","hooks/useEventListener.js","hooks/useStateWithLocalStorage.js","classes/Api.js","api/api.js","api/auth.js","contexts/CurrentUserContext.jsx","utils/utils.js","components/Form.jsx","utils/toClassNames.js","components/FormInput.jsx","components/LoginOrRegister.jsx","components/Login.jsx","components/Register.jsx","components/Authentication.jsx","hooks/useStateWithBase64.js","components/ProtectedRoute.jsx","utils/pkg.js","components/Main.jsx","images/logo.svg","components/Header.jsx","components/Card.jsx","components/Footer.jsx","hooks/useValidatedForm.js","components/Popup.jsx","components/inPopup.jsx","components/PopupWithForm.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ConfirmDeletePopup.jsx","hooks/useEnterHandler.js","components/ImagePopup.jsx","images/check.svg","images/cross.svg","components/InfoTooltip.jsx","utils/checkLocalHost.js","components/App.jsx","hooks/useEscapeHandler.js","utils/scrollToTop.js","reportWebVitals.js","index.jsx"],"names":["apiDomain","paths","pathNames","title","action","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useStateWithLocalStorage","key","initialValue","useState","item","localStorage","JSON","parse","error","console","log","currentState","updateCurrentState","setCurrentState","useCallback","value","stringify","e","newValue","Api","options","_handleFetch","res","ok","json","Promise","reject","status","this","_baseUrl","baseUrl","_headers","headers","_authFormat","authorization","token","target","method","body","fetch","then","api","url","URL","version","endpoints","users","cards","editProfile","name","about","_customFetch","addCard","link","deleteCard","cardId","changeLikeCardStatus","updateAvatar","avatar","origin","signup","signin","user","email","password","_constructAuthorization","data","defaultUserState","CurrentUserContext","React","createContext","CurrentUserDispatchContext","CurrentUserProvider","state","dispatch","children","Provider","useCurrentUser","context","useContext","undefined","Error","useCurrentUserDispatcher","objectsAreEqual","first","second","sendApiUpdate","updates","func","a","expectedUser","updatedUser","classToSelector","className","popupSelectors","formClassesConfig","inputClass","submitButtonClass","formClass","Form","memo","onSubmit","props","handleSubmit","preventDefault","toClassNames","arr","filter","Boolean","join","classNames","defaults","FormInput","forwardRef","forwardedRef","isFocused","validationMessage","ref","createRef","type","required","conditionalMinLength","finalProps","minLength","parentElement","document","activeElement","setTimeout","focus","id","propsForInputs","autoCorrect","spellCheck","inputNames","LoginOrRegister","buttonIsSaving","setButtonIsSaving","buttonTitle","buttonSavingTitle","states","setEmail","setPassword","finally","onReset","autoFocus","placeholder","autoComplete","onChange","passwordAutocomplete","disabled","length","defaultProps","Login","Register","to","Authentication","elementName","atob","loggedIn","path","handleLogin","handleRegister","ProtectedRoute","repoSplit","repository","split","pop","repo","Header","location","useLocation","buttonLink","pathname","href","alt","src","logo","credential","onClick","onSignOut","Card","card","likes","currentUser","isTemporarilyLocal","owner","isOwn","_id","isLiked","some","i","onCardClick","onCardDelete","checked","onCardLike","defaultCard","defaultCards","push","Main","useMemo","onEditAvatar","onEditProfile","onAddPlace","map","Math","random","repoSplitted","copyrightLink","yearOfBuild","Date","getFullYear","Footer","rel","author","initialStates","useValidatedForm","initialData","setData","errors","setErrors","isInvalid","setIsInvalid","handleChange","prevData","newData","handleError","register","input","currentTarget","formValidity","closest","checkValidity","reset","e_","getData","classNameClosed","isOpened","classNameOpened","modalRoot","getElementById","Popup","isOpen","classNameForAnimation","setClassNameForAnimation","shouldAppearInDOM","setShouldAppearInDOM","blur","showingTimout","clearTimeout","hidingTimeout","popupClassNames","createPortal","style","transitionDuration","popupShouldntRender","prevProps","nextProps","notSame","inPopup","Component","propsFunction","ComponentWrapper","popupProps","onClose","catch","err","isSubmitDisabled","EditProfilePopup","setCurrentUser","form","onUpdateUser","autoCapitalize","maxLength","EditAvatarPopup","onUpdateAvatar","AddPlacePopup","ConfirmDeletePopup","useEnterHandler","buttonClassNames","isSuccess","checkIcon","crossIcon","backgroundImage","host","process","NODE_ENV","REACT_APP_LOCAL_HOST","App","history","useHistory","setLoggedIn","computed","defaultForComputed","initialState","updateState","setState","btoa","useStateWithBase64","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","isInfoTooltipSuccess","setIsInfoTooltipSuccess","selectedCard","setSelectedCard","setCards","oldCards","expectedCardLikes","like","expectedCard","c","newCard","closeAllPopups","getUserInfo","getInitialCards","handleCardDelete","handlePopupClick","handleUpdateUser","handleUpdateAvatar","useEscapeHandler","handleTokenCheck","auth","replace","scrollTo","login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.0a5b07ca.chunk.js","sourcesContent":["export const apiDomain = 'nomoreparties.co';\n\nexport const paths = {\n  login: '/login',\n  register: '/register',\n  main: '/',\n};\n\nexport const pathNames = {\n  login: {\n    title: 'Вход',\n    action: 'Войти',\n  },\n  register: {\n    title: 'Регистрация',\n    action: 'Зарегистрироваться',\n  },\n  quit: {\n    action: 'Выйти',\n  },\n};\n","import { useRef, useEffect } from 'react';\n\nexport default function useEventListener(eventName, handler, element = window) {\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event) => savedHandler.current(event);\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport useEventListener from './useEventListener';\n\nexport default function useStateWithLocalStorage(key, initialValue) {\n  const [currentState, updateCurrentState] = useState(() => {\n    try {\n      const item = localStorage[key];\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setCurrentState = useCallback(\n    (value) => {\n      // const valueToStore = value instanceof Function ? value(currentState) : value;\n\n      localStorage[key] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [key]\n  );\n\n  const localStorageChanged = useCallback(\n    (e) => {\n      if (e.key === key) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : initialValue);\n      }\n    },\n    [key, initialValue]\n  );\n\n  useEventListener('storage', localStorageChanged);\n\n  return [currentState, setCurrentState];\n}\n","export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n\n    this._authFormat = '';\n  }\n\n  _constructAuthorization() {\n    this._headers = {\n      ...this._headers,\n      authorization: this._authFormat + localStorage.token,\n    };\n  }\n\n  _handleFetch = res => (res.ok ? res.json() : Promise.reject(res.status));\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers ?? {},\n    };\n\n    if (method && method !== 'GET') {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options).then(this._handleFetch);\n  }\n}\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst COHORT_ID = 'cohort-24';\nconst TOKEN = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: new URL(`https://mesto.${apiDomain}`),\n  version: 'v1',\n  endpoints: {\n    users: 'users/me',\n    cards: 'cards',\n  },\n};\n\nclass Features extends Api {\n  getUserInfo() {\n    return this._customFetch(api.endpoints.users);\n  }\n\n  getInitialCards() {\n    return this._customFetch(api.endpoints.cards);\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch(api.endpoints.users, 'PATCH', {\n      name,\n      about,\n    });\n\n  addCard = (name, link) =>\n    this._customFetch(api.endpoints.cards, 'POST', {\n      name,\n      link,\n    });\n\n  deleteCard = cardId => this._customFetch(`${api.endpoints.cards}/${cardId}`, 'DELETE');\n\n  changeLikeCardStatus = (cardId, status) =>\n    this._customFetch(`${api.endpoints.cards}/likes/${cardId}`, status ? 'PUT' : 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch(`${api.endpoints.users}/avatar`, 'PATCH', {\n      avatar,\n    });\n}\n\nexport default new Features({\n  baseUrl: `${api.url.origin}/${api.version}/${COHORT_ID}`,\n  headers: {\n    authorization: TOKEN,\n  },\n});\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst api = {\n  url: new URL(`https://auth.${apiDomain}`),\n  endpoints: {\n    signup: 'signup',\n    signin: 'signin',\n    user: 'users/me',\n  },\n};\n\nclass Auth extends Api {\n  constructor(options) {\n    super(options);\n\n    this._authFormat = 'Bearer ';\n  }\n\n  register(email, password) {\n    return this._customFetch(api.endpoints.signup, 'POST', { password, email });\n  }\n\n  login(email, password) {\n    return this._customFetch(api.endpoints.signin, 'POST', { password, email });\n  }\n\n  getUserInfo() {\n    this._constructAuthorization();\n\n    return this._customFetch(api.endpoints.user).then(res => res.data);\n  }\n}\n\nexport default new Auth({\n  baseUrl: api.url.origin,\n});\n","import React from 'react';\n\nimport api from '../api/api';\n\nconst defaultUserState = {\n  name: 'Неизвестный',\n  about: 'Потеряно соединение с сервером',\n};\n\nconst CurrentUserContext = React.createContext();\nconst CurrentUserDispatchContext = React.createContext();\n\nfunction CurrentUserProvider({ state, dispatch, children }) {\n  return (\n    <CurrentUserContext.Provider value={state}>\n      <CurrentUserDispatchContext.Provider value={dispatch}>\n        {children}\n      </CurrentUserDispatchContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nfunction useCurrentUser() {\n  const context = React.useContext(CurrentUserContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUser must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction useCurrentUserDispatcher() {\n  const context = React.useContext(CurrentUserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUserDispatcher must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction objectsAreEqual(first, second) {\n  return JSON.stringify(first) === JSON.stringify(second);\n}\n\nasync function sendApiUpdate(dispatch, user, updates, func) {\n  const expectedUser = { ...user, ...updates };\n  dispatch(expectedUser);\n\n  try {\n    const updatedUser = await api[func](updates);\n    if (!objectsAreEqual(expectedUser, updatedUser)) {\n      dispatch(updatedUser);\n    }\n    return updatedUser;\n  } catch (error) {\n    dispatch(user);\n    console.log('Couldnt update user information on the server', error);\n    throw error; // Forwarding error\n  }\n}\n\nexport {\n  defaultUserState,\n  CurrentUserProvider,\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n};\n","const classToSelector = (className) => `.${className}`;\n\nexport const popupSelectors = {\n  closeButtonClass: 'popup__close-button',\n};\n\nexport const formClassesConfig = {\n  inputClass: 'form__input',\n  submitButtonClass: 'form__button',\n};\n\nexport const defaultFormConfig = {\n  formSelector: classToSelector(formClassesConfig.formClass),\n  inputSelector: classToSelector(formClassesConfig.inputClass),\n  submitButtonSelector: classToSelector(formClassesConfig.submitButtonClass),\n  inputErrorClass: formClassesConfig.inputErrorClass,\n  errorClass: formClassesConfig.errorClass,\n};\n","import { memo, useCallback } from 'react';\n\nconst Form = memo(({ onSubmit, ...props }) => {\n  const handleSubmit = useCallback(\n    (e) => {\n      if (onSubmit) {\n        e.preventDefault();\n\n        onSubmit(e);\n      }\n    },\n    [onSubmit]\n  );\n\n  return (\n    <form action=\"#\" onSubmit={handleSubmit} className=\"form\" {...props}>\n      {props.children}\n    </form>\n  );\n});\n\nexport default Form;\n","export const toClassNames = (arr) => arr.filter(Boolean).join(' ');\n\nexport const classNames = (arr) => ({ className: toClassNames(arr) });\n","import { forwardRef, createRef, useEffect } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\nimport { classNames } from '../utils/toClassNames';\n\nconst defaults = {\n  type: 'text',\n  required: true,\n  minLength: 2,\n};\n\nconst FormInput = forwardRef(({ isFocused, validationMessage, ...props }, forwardedRef) => {\n  const ref = forwardedRef ?? createRef();\n\n  const type = props.type ?? defaults.type;\n\n  const required = props.required ?? defaults.required;\n\n  const conditionalMinLength = type === defaults.type ? defaults.minLength : null;\n  const minLength = props.minLength ?? conditionalMinLength;\n\n  const finalProps = {\n    type,\n    minLength,\n    required,\n    ref,\n  };\n\n  useEffect(() => {\n    if (\n      isFocused &&\n      ref &&\n      ref.current &&\n      ref.current.parentElement !== document.activeElement.parentElement\n    ) {\n      setTimeout(() => {\n        ref && ref.current && ref.current.focus();\n      }, 50);\n    }\n  }, [isFocused, ref]);\n\n  return (\n    <>\n      <input\n        {...props}\n        {...classNames([\n          formClassesConfig.inputClass,\n          validationMessage && 'form__input_type_error',\n          props.className,\n        ])}\n        {...finalProps}\n      />\n      <p\n        {...classNames(['form__error', validationMessage && 'form__error_visible'])}\n        id={`${props.id}-error`}\n      >\n        {validationMessage}\n      </p>\n    </>\n  );\n});\n\nexport default FormInput;\n","import { memo, useState } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\n\nimport Form from './Form';\nimport FormInput from './FormInput';\n\nconst propsForInputs = {\n  autoCorrect: 'off',\n  spellCheck: false,\n  className: `${formClassesConfig.inputClass}_theme_dark`,\n};\n\nconst inputNames = {\n  email: 'email',\n  password: 'password',\n};\n\nconst LoginOrRegister = memo((props) => {\n  const [buttonIsSaving, setButtonIsSaving] = useState(false);\n\n  const buttonTitle = buttonIsSaving ? props.buttonSavingTitle : props.buttonTitle;\n\n  const [email, setEmail] = props.states.email;\n  const [password, setPassword] = props.states.password;\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  function handleSubmit(e) {\n    setButtonIsSaving(true);\n\n    props.handleSubmit(e, email, password).finally(() => {\n      setButtonIsSaving(false);\n    });\n  }\n\n  function handleReset() {\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n    <div className=\"content auth\">\n      <h2 className=\"auth__title\">{props.title}</h2>\n\n      <Form onSubmit={handleSubmit} onReset={handleReset}>\n        <FormInput\n          {...propsForInputs}\n          autoFocus\n          id={inputNames.email}\n          name={inputNames.email}\n          type={inputNames.email}\n          placeholder=\"Email\"\n          autoComplete={inputNames.email}\n          value={email}\n          onChange={handleEmailChange}\n        />\n        <FormInput\n          {...propsForInputs}\n          id={props.passwordAutocomplete}\n          name={inputNames.password}\n          type={inputNames.password}\n          placeholder=\"Пароль\"\n          autoComplete={props.passwordAutocomplete}\n          value={password}\n          onChange={handlePasswordChange}\n        />\n        <button\n          type=\"submit\"\n          disabled={!email.length || !password.length}\n          className={`auth__button ${formClassesConfig.submitButtonClass} ${formClassesConfig.submitButtonClass}_theme_dark`}\n        >\n          {buttonTitle}\n        </button>\n      </Form>\n      {props.children}\n    </div>\n  );\n});\n\nexport default LoginOrRegister;\n","import { memo } from 'react';\n\nimport { pathNames } from '../utils/constants';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'current-password',\n  title: pathNames.login.title,\n  buttonTitle: pathNames.login.action,\n  buttonSavingTitle: `${pathNames.login.title}...`,\n};\n\nconst Login = memo((props) => <LoginOrRegister {...props} {...defaultProps} />);\n\nexport default Login;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'new-password',\n  title: pathNames.register.title,\n  buttonTitle: pathNames.register.action,\n  buttonSavingTitle: `${pathNames.register.title}...`,\n};\n\nconst Register = memo((props) => (\n  <LoginOrRegister {...props} {...defaultProps}>\n    <div className=\"auth__signin\">\n      Уже зарегистрированы?{' '}\n      <Link to={paths.login} className=\"auth__login-link\">\n        {pathNames.login.action}\n      </Link>\n    </div>\n  </LoginOrRegister>\n));\n\nexport default Register;\n","import { memo, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nimport { parseFixedLocalBase64Value } from '../hooks/useStateWithBase64';\n\nimport Login from './Login';\nimport Register from './Register';\n\nconst Authentication = memo((props) => {\n  const states = {\n    email: useState(parseFixedLocalBase64Value('email') ?? ''),\n    password: useState(''),\n  };\n\n  return props.loggedIn ? (\n    <Redirect to={paths.main} />\n  ) : (\n    <>\n      <Route path={paths.login}>\n        <Login handleSubmit={props.handleLogin} states={states} />\n      </Route>\n      <Route path={paths.register}>\n        <Register handleSubmit={props.handleRegister} states={states} />\n      </Route>\n    </>\n  );\n});\n\nexport default Authentication;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useStateWithLocalStorage from './useStateWithLocalStorage';\n\nexport const parseFixedLocalBase64Value = (elementName) =>\n  localStorage[elementName] && atob(JSON.parse(localStorage[elementName]));\n\nexport default function useStateWithBase64(computed, defaultForComputed) {\n  const [initialState, updateState] = useStateWithLocalStorage(computed, defaultForComputed);\n\n  const setState = useCallback(\n    (value) => {\n      updateState(btoa(value));\n    },\n    [updateState]\n  );\n\n  const state = useRef(atob(initialState));\n\n  useEffect(() => {\n    state.current = atob(initialState);\n  });\n\n  return [state.current, setState];\n}\n","import { Route, Redirect } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nconst ProtectedRoute = (props) => (\n  <Route>{props.loggedIn ? props.children : <Redirect to={paths.login} />}</Route>\n);\nexport default ProtectedRoute;\n","import { repository } from '../../package.json';\n\nconst repoSeparator = '.';\n\nconst repoSplit = repository.url.split(repoSeparator);\nrepoSplit.pop();\n\nconst repoJoined = repoSplit.join(repoSeparator);\n\nexport const repo = repoJoined.split('+')[1];\n","import { memo, useMemo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Card from './Card';\n\nconst MAXIMUM_CARDS_QUANTITY = 30;\n\nconst defaultCard = {\n  isTemporarilyLocal: true,\n  name: 'Загрузка...',\n};\n\nconst defaultCards = [];\nfor (let i = 0; i < MAXIMUM_CARDS_QUANTITY; i++) {\n  defaultCards.push(defaultCard);\n}\n\nconst Main = memo(props => {\n  const currentUser = useCurrentUser();\n\n  const cards = useMemo(() => (props.cards.length ? props.cards : defaultCards), [props.cards]);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n          <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar} />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__description\">{currentUser.about}</p>\n          <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n        </div>\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {cards.map(card => (\n            <Card\n              key={card._id ?? Math.random()}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              card={card}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n});\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\nimport { repo } from '../utils/pkg';\nimport { classNames } from '../utils/toClassNames';\n\nimport logo from '../images/logo.svg';\n\nconst Header = memo(({ loggedIn, ...props }) => {\n  const location = useLocation();\n\n  let buttonTitle;\n  let buttonLink = paths.login;\n\n  switch (location.pathname) {\n    case paths.login:\n      buttonTitle = pathNames.register.title;\n      buttonLink = paths.register;\n      break;\n\n    case paths.register:\n      buttonTitle = pathNames.login.action;\n      break;\n\n    default:\n      buttonTitle = pathNames.quit.action;\n      break;\n  }\n\n  return (\n    <header className=\"header\">\n      <a target=\"_self\" href={repo} className=\"logo header__logo\">\n        <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n      </a>\n      <div className=\"header__container\">\n        {loggedIn && props.credential && <p className=\"header__credential\">{props.credential}</p>}\n        <Link\n          to={buttonLink}\n          onClick={loggedIn ? props.onSignOut : null}\n          {...classNames(['header__action-button', loggedIn && 'header__action-button_dimmed'])}\n        >\n          {buttonTitle}\n        </Link>\n      </div>\n    </header>\n  );\n});\n\nexport default Header;\n","import { memo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst Card = memo(({ card, ...props }) => {\n  card.likes = card.likes ?? [];\n\n  const currentUser = useCurrentUser();\n\n  if (card.isTemporarilyLocal) {\n    card.owner = currentUser;\n  }\n\n  const isOwn = card.owner._id === currentUser._id;\n\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  function handleImageClick() {\n    props.onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"element\">\n      <img onClick={handleImageClick} className=\"element__image\" alt={card.name} src={card.link} />\n      {isOwn && (\n        <button onClick={handleDeleteClick} type=\"reset\" className=\"element__trash-button\" />\n      )}\n      <div className=\"element__container\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <input\n            checked={isLiked}\n            type=\"checkbox\"\n            onChange={handleLikeClick}\n            className=\"element__like-button\"\n          />\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n});\n\nexport default Card;\n","import { memo } from 'react';\n\nimport { author } from '../../package.json';\n\nimport { repo } from '../utils/pkg';\n\nconst linkSeparator = '/';\n\nconst repoSplitted = repo.split(linkSeparator);\nrepoSplitted.pop();\n\nconst copyrightLink = repoSplitted.join(linkSeparator);\n\nconst yearOfBuild = new Date().getFullYear();\n\nconst Footer = memo(() => (\n  <footer className=\"footer\">\n    <a target=\"_blank\" rel=\"noreferrer\" href={copyrightLink} className=\"footer__copyright\">\n      &copy; {yearOfBuild} {author}\n    </a>\n  </footer>\n));\n\nexport default Footer;\n","import { useCallback, useState } from 'react';\n\nconst initialStates = {\n  errors: {},\n  isInvalid: true,\n};\n\nexport default function useValidatedForm(initialData = {}) {\n  const [data, setData] = useState(initialData);\n  const [errors, setErrors] = useState(initialStates.errors);\n  const [isInvalid, setIsInvalid] = useState(initialStates.isInvalid);\n\n  function handleChange(name, value) {\n    setData((prevData) => {\n      const newData = { ...prevData, [name]: value };\n\n      const newDataEqualsInitial = JSON.stringify(newData) === JSON.stringify(initialData);\n      if (newDataEqualsInitial) {\n        setIsInvalid(true);\n      }\n\n      return newData;\n    });\n  }\n\n  function handleError(name, validationMessage) {\n    setErrors((prevData) => ({ ...prevData, [name]: validationMessage }));\n  }\n\n  return {\n    register(name) {\n      return {\n        value: data[name] ?? '',\n        onChange: (e) => {\n          const input = e.currentTarget;\n          const { value, validationMessage } = input;\n\n          handleChange(name, value);\n          handleError(name, validationMessage);\n\n          const formValidity = input.closest('form').checkValidity();\n          setIsInvalid(!formValidity);\n        },\n        validationMessage: errors[name],\n        name,\n      };\n    },\n    reset: useCallback(\n      (e_, data) => {\n        setData(data ?? initialData);\n        setErrors(initialStates.errors);\n        setIsInvalid(initialStates.isInvalid);\n      },\n      [initialData]\n    ),\n    getData() {\n      return data;\n    },\n    isInvalid,\n    setData,\n  };\n}\n","import { useState, useEffect, memo } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { classNames } from '../utils/toClassNames';\n\nconst POPUP_ANIMATION_DURATION = 250;\n\nconst defaults = {\n  className: 'popup',\n  classNameClosed: '',\n  isOpened: false,\n};\ndefaults.classNameOpened = `${defaults.className}_opened`;\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Popup = memo(({ isOpen, ...props }) => {\n  const [classNameForAnimation, setClassNameForAnimation] = useState(defaults.classNameClosed);\n  const [shouldAppearInDOM, setShouldAppearInDOM] = useState(defaults.isOpened);\n\n  useEffect(() => {\n    if (!isOpen) {\n      document.activeElement.blur(); // fixes mobile keyboard being stuck on the screen after form submission (due to `event.preventDefault()`)\n    }\n\n    if (isOpen) {\n      setShouldAppearInDOM(!defaults.isOpened);\n      const showingTimout = setTimeout(() => {\n        setClassNameForAnimation(defaults.classNameOpened);\n      }, 10);\n\n      return () => clearTimeout(showingTimout);\n    } else {\n      setClassNameForAnimation(defaults.classNameClosed);\n      const hidingTimeout = setTimeout(() => {\n        setShouldAppearInDOM(defaults.isOpened);\n      }, POPUP_ANIMATION_DURATION);\n\n      return () => clearTimeout(hidingTimeout);\n    }\n  }, [isOpen]);\n\n  if (!shouldAppearInDOM) {\n    return null;\n  }\n\n  const popupClassNames = [defaults.className, props.className, classNameForAnimation];\n\n  return createPortal(\n    <section\n      onClick={props.onClick}\n      style={{ transitionDuration: `${POPUP_ANIMATION_DURATION}ms` }}\n      {...classNames(popupClassNames)}\n      id={props.id}\n    >\n      {props.children}\n    </section>,\n    modalRoot\n  );\n});\n\nexport default Popup;\n","import { memo } from 'react';\n\nimport Popup from './Popup';\n\nconst popupShouldntRender = (prevProps, nextProps) => {\n  const isOpen = prevProps.isOpen;\n  const notSame = prevProps.isOpen !== nextProps.isOpen;\n  const condition = isOpen || notSame;\n  return !condition;\n};\n\nconst inPopup = (Component, propsFunction) => {\n  function ComponentWrapper(props) {\n    const popupProps = {\n      isOpen: props.isOpen,\n      onClick: props.onClose,\n      ...(propsFunction && propsFunction(props)),\n    };\n\n    return (\n      <Popup {...popupProps}>\n        <Component {...props} />\n      </Popup>\n    );\n  }\n\n  return memo(ComponentWrapper, popupShouldntRender);\n};\n\nexport default inPopup;\n","import { useCallback, useState } from 'react';\n\nimport { popupSelectors, formClassesConfig } from '../utils/utils';\n\nimport inPopup from './inPopup';\nimport Form from './Form';\n\nconst defaultButtonTitle = 'Сохранить';\nconst defaultSavingButtonTitle = 'Сохранение...';\n\nconst PopupWithForm = ({ onSubmit, children, onReset, ...props }) => {\n  const [buttonIsSaving, setButtonIsSaving] = useState(false);\n\n  const buttonTitle = buttonIsSaving\n    ? defaultSavingButtonTitle\n    : props.buttonTitle ?? defaultButtonTitle;\n\n  const handleSubmit = useCallback(\n    (e) => {\n      setButtonIsSaving(true);\n\n      onSubmit &&\n        onSubmit(e)\n          .then((res) => {\n            if (children) {\n              e.target.reset();\n              onReset && onReset(e);\n            }\n            return res;\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n          .finally(() => {\n            setButtonIsSaving(false);\n          });\n    },\n    [children, onReset, onSubmit]\n  );\n\n  return (\n    <div className=\"popup__container\">\n      <button type=\"reset\" className={popupSelectors.closeButtonClass} />\n      <h2 className=\"popup__title\">{props.title}</h2>\n\n      <Form onSubmit={handleSubmit} onReset={onReset}>\n        {children}\n        <button\n          disabled={props.isSubmitDisabled || buttonIsSaving}\n          type=\"submit\"\n          className={`popup__button ${formClassesConfig.submitButtonClass}`}\n        >\n          {buttonTitle}\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nexport default inPopup(PopupWithForm, (props) => ({ id: props.name }));\n","import { memo, useEffect } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport useValidatedForm from '../hooks/useValidatedForm';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst EditProfilePopup = memo((props) => {\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  const { reset, ...form } = useValidatedForm(currentUser);\n\n  useEffect(() => {\n    if (props.isOpen) {\n      reset(null, {\n        name: currentUser.name,\n        about: currentUser.about,\n      });\n    }\n  }, [currentUser.about, currentUser.name, props.isOpen, reset]);\n\n  async function handleSubmit() {\n    const res = await sendApiUpdate(setCurrentUser, currentUser, form.getData(), 'editProfile');\n    props.onUpdateUser();\n    return res;\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      onReset={reset}\n      title=\"Редактировать профиль\"\n      name=\"profile-editor\"\n      isSubmitDisabled={form.isInvalid}\n    >\n      <FormInput\n        isFocused={props.isOpen}\n        {...form.register('name')}\n        autoComplete=\"name\"\n        autoCapitalize=\"words\"\n        id=\"profile-name\"\n        placeholder=\"Имя\"\n        maxLength=\"40\"\n      />\n\n      <FormInput\n        {...form.register('about')}\n        id=\"profile-about\"\n        placeholder=\"О себе\"\n        maxLength=\"200\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditProfilePopup;\n","import { memo } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport useValidatedForm from '../hooks/useValidatedForm';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst EditAvatarPopup = memo((props) => {\n  const form = useValidatedForm();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  function handleSubmit() {\n    props.onUpdateAvatar();\n\n    return sendApiUpdate(setCurrentUser, currentUser, form.getData(), 'updateAvatar');\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      onReset={form.reset}\n      title=\"Обновить аватар\"\n      name=\"avatar-editor\"\n      isSubmitDisabled={form.isInvalid}\n    >\n      <FormInput\n        isFocused={props.isOpen}\n        {...form.register('avatar')}\n        type=\"url\"\n        id=\"profile-avatar\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditAvatarPopup;\n","import { memo } from 'react';\n\nimport useValidatedForm from '../hooks/useValidatedForm';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst AddPlacePopup = memo((props) => {\n  const form = useValidatedForm();\n\n  function handleSubmit() {\n    return props.onAddPlace(form.getData());\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      onReset={form.reset}\n      title=\"Новое место\"\n      name=\"element-editor\"\n      buttonTitle=\"Создать\"\n      isSubmitDisabled={form.isInvalid}\n    >\n      <FormInput\n        isFocused={props.isOpen}\n        {...form.register('title')}\n        id=\"element-title\"\n        placeholder=\"Название\"\n        maxLength=\"30\"\n      />\n\n      <FormInput\n        {...form.register('link')}\n        type=\"url\"\n        id=\"element-link\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default AddPlacePopup;\n","import { memo, useCallback } from 'react';\n\nimport useEnterHandler from '../hooks/useEnterHandler';\n\nimport PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = memo((props) => {\n  const { onCardDelete, card, isOpen } = props;\n\n  const handleSubmit = useCallback(() => onCardDelete(card), [card, onCardDelete]);\n\n  const handleEnter = useCallback(() => isOpen && handleSubmit(), [handleSubmit, isOpen]);\n\n  useEnterHandler(handleEnter);\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Вы уверены?\"\n      name=\"delete-confirmation\"\n      buttonTitle=\"Да\"\n    />\n  );\n});\n\nexport default ConfirmDeletePopup;\n","import { useRef, useEffect, useCallback } from 'react';\n\nimport useEventListener from './useEventListener';\n\nexport default function useEnterHandler(handler) {\n  const savedHandler = useRef();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  const enterHandler = useCallback((e) => {\n    if (e.key === 'Enter') {\n      savedHandler.current();\n    }\n  }, []);\n\n  useEventListener('keydown', enterHandler);\n}\n","import { popupSelectors } from '../utils/utils';\nimport { classNames } from '../utils/toClassNames';\n\nimport inPopup from './inPopup';\n\nconst buttonClassNames = [\n  popupSelectors.closeButtonClass,\n  `${popupSelectors.closeButtonClass}_parent-corners_straight`,\n];\n\nconst ImagePopup = ({ card }) => (\n  <figure className=\"popup__figure\">\n    <button type=\"button\" {...classNames(buttonClassNames)} />\n    <img className=\"popup__image\" alt={card.name} src={card.link} />\n    <figcaption className=\"popup__caption\">{card.name}</figcaption>\n  </figure>\n);\n\nexport default inPopup(ImagePopup, () => ({\n  className: 'popup_type_image',\n  id: 'image-viewer',\n}));\n","export default __webpack_public_path__ + \"static/media/check.5221857e.svg\";","export default __webpack_public_path__ + \"static/media/cross.173b3897.svg\";","import checkIcon from '../images/check.svg';\nimport crossIcon from '../images/cross.svg';\n\nimport { popupSelectors } from '../utils/utils';\n\nimport inPopup from './inPopup';\n\nconst backgroundImageUrl = (url) => ({ backgroundImage: `url(${url})` });\n\nconst InfoTooltip = ({ isSuccess }) => (\n  <div className=\"popup__container\">\n    <button type=\"button\" className={popupSelectors.closeButtonClass} />\n\n    <div className=\"info-tooltip\">\n      <div\n        className=\"info-tooltip__icon\"\n        style={backgroundImageUrl(isSuccess ? checkIcon : crossIcon)}\n      />\n      <h3 className=\"info-tooltip__title\">\n        {isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}\n      </h3>\n    </div>\n  </div>\n);\n\nexport default inPopup(InfoTooltip);\n","const isDefaultLocalhost = window.location.host === 'localhost';\n\nexport default function checkLocalHost() {\n  return (\n    isDefaultLocalhost &&\n    (function () {\n      const { NODE_ENV, REACT_APP_LOCAL_HOST } = process.env;\n      const NODE_ENV_IS_DEV = NODE_ENV === 'development';\n\n      if (NODE_ENV_IS_DEV && REACT_APP_LOCAL_HOST) {\n        return (window.location.host = REACT_APP_LOCAL_HOST);\n      }\n    })()\n  );\n}\n","import React from 'react';\n\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\nimport scrollToTop from '../utils/scrollToTop';\n\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\nimport useStateWithBase64 from '../hooks/useStateWithBase64';\nimport useEscapeHandler from '../hooks/useEscapeHandler';\n\nimport api from '../api/api';\nimport auth from '../api/auth';\n\nimport { CurrentUserProvider, defaultUserState } from '../contexts/CurrentUserContext';\n\nimport Authentication from './Authentication';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\n\nimport checkLocalHost from '../utils/checkLocalHost';\n\ncheckLocalHost();\n\nfunction App() {\n  const history = useHistory();\n\n  const [currentUser, setCurrentUser] = useStateWithLocalStorage('currentUser', defaultUserState);\n\n  const [loggedIn, setLoggedIn] = useStateWithLocalStorage('loggedIn', false);\n  const [email, setEmail] = useStateWithBase64('email', '');\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n\n  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [cards, setCards] = useStateWithLocalStorage('cards', []);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then(setCurrentUser)\n      .catch((err) => console.log('Couldnt get user info from the server', err));\n  }, [setCurrentUser]);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch((err) => console.log('Couldnt get initial cards from the server', err));\n  }, [setCards]);\n\n  async function handleCardLike(card) {\n    const oldCards = cards;\n\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    const expectedCardLikes = isLiked\n      ? card.likes.filter((like) => like._id !== currentUser._id)\n      : [...card.likes, currentUser];\n\n    const expectedCard = { ...card, likes: expectedCardLikes };\n\n    setCards(cards.map((c) => (c._id === card._id ? expectedCard : c)));\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n      setCards(cards.map((c) => (c._id === card._id ? newCard : c)));\n      return newCard;\n    } catch (error) {\n      setCards(oldCards);\n      console.error(error);\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsInfoTooltipOpen(false);\n  }\n\n  const handleCardDelete = React.useCallback(\n    (card) => {\n      const oldCards = cards;\n\n      setCards(cards.filter((c) => c._id !== card._id));\n\n      closeAllPopups();\n\n      return api.deleteCard(card._id).catch((error) => {\n        setCards(oldCards);\n        console.log('Couldnt delete card on the server', error);\n      });\n    },\n    [cards, setCards]\n  );\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmDeleteClick(card) {\n    setSelectedCard(card);\n\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n\n    setIsImagePopupOpen(true);\n  }\n\n  const handlePopupClick = React.useCallback((e) => {\n    e.target === e.currentTarget && closeAllPopups();\n  }, []);\n\n  const handleUpdateUser = closeAllPopups;\n  const handleUpdateAvatar = closeAllPopups;\n\n  function handleAddPlaceSubmit({ title, link }) {\n    const oldCards = cards;\n\n    const expectedCard = {\n      isTemporarilyLocal: true,\n      name: title,\n      link,\n    };\n\n    setCards([expectedCard, ...cards]);\n\n    closeAllPopups();\n\n    return api\n      .addCard(title, link)\n      .then((newCard) => setCards([newCard, ...cards]))\n      .catch((err) => {\n        setCards(oldCards);\n        throw err; // Forwarding error to PopupWithForm\n      });\n  }\n\n  useEscapeHandler(closeAllPopups);\n\n  const handleLogin = React.useCallback(\n    (email) => {\n      setEmail(email);\n      setLoggedIn(true);\n    },\n    [setEmail, setLoggedIn]\n  );\n\n  const handleTokenCheck = React.useCallback(() => {\n    if (localStorage.token) {\n      auth.token = localStorage.token;\n      auth\n        .getUserInfo()\n        .then((res) => {\n          if (res) {\n            handleLogin(res.email);\n            history.replace(paths.main);\n          }\n        })\n        .catch((err) => {\n          setLoggedIn(false);\n\n          console.log(err);\n        });\n    } else {\n      setLoggedIn(false);\n    }\n  }, [handleLogin, history, setLoggedIn]);\n\n  function handleSubmitRegister(e_, email, password) {\n    return auth\n      .register(email, password)\n      .then(() => {\n        history.replace(paths.login);\n        setIsInfoTooltipSuccess(true);\n      })\n      .catch((err) => {\n        setIsInfoTooltipSuccess(false);\n        console.log(err);\n      })\n      .finally(() => {\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleSubmitLogin(e, email, password) {\n    if (!email || !password) {\n      return;\n    }\n\n    return auth\n      .login(email, password)\n      .then((data) => {\n        if (data.token) {\n          e.target.reset();\n\n          localStorage.token = data.token;\n\n          handleLogin(email);\n          history.push(paths.main);\n        }\n      })\n      .catch((err) => {\n        setIsInfoTooltipOpen(true);\n        console.log(err);\n      });\n  }\n\n  function handleSignOut() {\n    delete localStorage.token;\n    setLoggedIn(false);\n    history.replace(paths.login);\n    scrollToTop();\n  }\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, [handleTokenCheck]);\n\n  return (\n    <CurrentUserProvider state={currentUser} dispatch={setCurrentUser}>\n      <Header credential={email} onSignOut={handleSignOut} loggedIn={loggedIn} />\n\n      <Switch>\n        <Route path={[paths.register, paths.login]}>\n          <Authentication\n            loggedIn={loggedIn}\n            handleLogin={handleSubmitLogin}\n            handleRegister={handleSubmitRegister}\n          />\n\n          <InfoTooltip\n            isOpen={isInfoTooltipOpen}\n            isSuccess={isInfoTooltipSuccess}\n            onClose={handlePopupClick}\n          />\n        </Route>\n\n        <ProtectedRoute path={paths.main} loggedIn={loggedIn}>\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDeleteClick}\n          />\n\n          <EditProfilePopup\n            onUpdateUser={handleUpdateUser}\n            isOpen={isEditProfilePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <AddPlacePopup\n            onAddPlace={handleAddPlaceSubmit}\n            isOpen={isAddPlacePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdateAvatar}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={handlePopupClick}\n          />\n          <ConfirmDeletePopup\n            card={selectedCard}\n            onCardDelete={handleCardDelete}\n            isOpen={isConfirmDeletePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={handlePopupClick} />\n        </ProtectedRoute>\n      </Switch>\n\n      <Footer />\n    </CurrentUserProvider>\n  );\n}\n\nexport default App;\n","import { useRef, useEffect, useCallback } from 'react';\n\nimport useEventListener from './useEventListener';\n\nexport default function useEscapeHandler(handler) {\n  const savedHandler = useRef();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  const escHandler = useCallback((e) => {\n    if (e.key === 'Escape') {\n      savedHandler.current();\n    }\n  }, []);\n\n  useEventListener('keydown', escHandler);\n}\n","export default function scrollToTop() {\n  window.scrollTo(0, 0);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}