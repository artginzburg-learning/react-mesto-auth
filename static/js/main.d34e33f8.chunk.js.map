{"version":3,"sources":["utils/constants.js","hooks/useEventListener.js","hooks/useStateWithLocalStorage.js","classes/Api.js","api/api.js","api/auth.js","contexts/CurrentUserContext.jsx","hooks/useValidatedForm.js","utils/utils.js","components/Form.jsx","utils/toClassNames.js","components/FormInput.jsx","components/LoginOrRegister.jsx","components/Login.jsx","components/Register.jsx","components/Authentication.jsx","hooks/useStateWithBase64.js","components/ProtectedRoute.jsx","utils/pkg.js","images/logo.svg","components/Header.jsx","components/Main.jsx","components/Card.jsx","utils/checkImageLoading.js","components/Footer.jsx","components/Popup.jsx","components/inPopup.jsx","components/PopupWithForm.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ConfirmDeletePopup.jsx","hooks/useEnterHandler.js","components/ImagePopup.jsx","images/check.svg","images/cross.svg","components/InfoTooltip.jsx","utils/checkLocalHost.js","components/App.jsx","hooks/useEscapeHandler.js","utils/scrollToTop.js","reportWebVitals.js","index.jsx"],"names":["apiDomain","paths","pathNames","title","action","keyboard","getButtonPrompt","key","tooltips","close","confirm","modalRoot","document","getElementById","root","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useStateWithLocalStorage","initialValue","useState","item","localStorage","JSON","parse","error","console","log","currentState","updateCurrentState","setCurrentState","useCallback","value","stringify","e","newValue","Api","options","_handleFetch","res","ok","json","Promise","reject","statusText","this","_baseUrl","baseUrl","_headers","headers","_authFormat","authorization","token","target","method","body","fetch","then","api","url","URL","version","endpoints","users","cards","editProfile","name","about","_customFetch","addCard","link","deleteCard","cardId","changeLikeCardStatus","status","updateAvatar","avatar","origin","signup","signin","user","email","password","_constructAuthorization","data","defaultUserState","CurrentUserContext","createContext","CurrentUserDispatchContext","CurrentUserProvider","state","dispatch","children","Provider","useCurrentUser","context","useContext","undefined","Error","useCurrentUserDispatcher","objectsAreEqual","first","second","sendApiUpdate","updates","func","a","expectedUser","updatedUser","initialStates","useValidatedForm","initialData","setData","errors","setErrors","isInvalid","setIsInvalid","handleChange","prevData","newData","handleError","validationMessage","reset","e_","registerForm","isSubmitDisabled","onReset","register","onChange","input","currentTarget","length","formValidity","closest","checkValidity","getData","classToSelector","className","popupSelectors","formClassesConfig","inputClass","submitButtonClass","formClass","Form","memo","onSubmit","props","handleSubmit","preventDefault","toClassNames","arr","filter","Boolean","join","classNames","defaults","FormInput","forwardRef","forwardedRef","isFocused","ref","createRef","type","required","conditionalMinLength","finalProps","minLength","parentElement","activeElement","setTimeout","focus","id","propsForInputs","autoCorrect","spellCheck","inputNames","LoginOrRegister","form","buttonIsSaving","setButtonIsSaving","buttonTitle","buttonSavingTitle","finally","autoFocus","autoComplete","placeholder","passwordAutocomplete","disabled","defaultProps","Login","Register","to","Authentication","elementName","atob","loggedIn","path","handleLogin","handleRegister","ProtectedRoute","repoSplit","repository","split","pop","repo","Header","location","useLocation","buttonLink","pathname","href","alt","src","logo","credential","onClick","onSignOut","Card","card","likes","currentUser","isTemporarilyLocal","owner","isOwn","_id","isLiked","some","i","authorInfo","authorInfoDev","onError","style","cursor","image","complete","naturalHeight","onCardClick","onCardDelete","checked","onCardLike","defaultCard","defaultCards","push","Main","useMemo","onEditAvatar","onEditProfile","onAddPlace","map","Math","random","prevProps","nextProps","repoSplitted","copyrightLink","yearOfBuild","Date","getFullYear","Footer","rel","author","shouldAppearInDOM","classNameOpened","Popup","isOpen","closeTimeoutMS","classNameForAnimation","setClassNameForAnimation","setShouldAppearInDOM","showingTimeout","clearTimeout","blur","hidingTimeout","createPortal","transitionDuration","popupShouldntRender","notSame","inPopup","Component","propsFunction","ComponentWrapper","popupProps","onClose","catch","err","EditProfilePopup","setCurrentUser","onUpdateUser","autoCapitalize","maxLength","EditAvatarPopup","onUpdateAvatar","AddPlacePopup","ConfirmDeletePopup","useEnterHandler","buttonClassNames","isSuccess","checkIcon","crossIcon","backgroundImage","host","process","NODE_ENV","REACT_APP_LOCAL_HOST","App","history","useHistory","setLoggedIn","computed","defaultForComputed","initialState","updateState","setState","btoa","useStateWithBase64","setEmail","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","isInfoTooltipSuccess","setIsInfoTooltipSuccess","selectedCard","setSelectedCard","setCards","oldCards","expectedCardLikes","like","expectedCard","c","newCard","closeAllPopups","getUserInfo","getInitialCards","classList","handleCardDelete","handlePopupClick","handleUpdateUser","handleUpdateAvatar","useEscapeHandler","handleTokenCheck","auth","replace","scrollTo","login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.d34e33f8.chunk.js","sourcesContent":["export const apiDomain = 'nomoreparties.co';\n\nexport const paths = {\n  login: '/login',\n  register: '/register',\n  main: '/',\n};\n\nexport const pathNames = {\n  login: {\n    title: 'Вход',\n    action: 'Войти',\n  },\n  register: {\n    title: 'Регистрация',\n    action: 'Зарегистрироваться',\n  },\n  quit: {\n    action: 'Выйти',\n  },\n};\n\nconst keyboard = {\n  close: 'Escape',\n  confirm: 'Enter',\n};\n\nconst getButtonPrompt = (key) => `[${key}]`;\n\nexport const tooltips = {\n  close: getButtonPrompt(keyboard.close),\n  confirm: getButtonPrompt(keyboard.confirm),\n};\n\nexport const modalRoot = document.getElementById('modal-root');\nexport const root = document.getElementById('root');\n","import { useRef, useEffect } from 'react';\n\nexport default function useEventListener(eventName, handler, element = window) {\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event) => savedHandler.current(event);\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n}\n","import { useState, useCallback } from 'react';\n\nimport useEventListener from './useEventListener';\n\nexport default function useStateWithLocalStorage(key, initialValue) {\n  const [currentState, updateCurrentState] = useState(() => {\n    try {\n      const item = localStorage[key];\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setCurrentState = useCallback(\n    (value) => {\n      // const valueToStore = value instanceof Function ? value(currentState) : value;\n\n      localStorage[key] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [key]\n  );\n\n  const localStorageChanged = useCallback(\n    (e) => {\n      if (e.key === key) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : initialValue);\n      }\n    },\n    [key, initialValue]\n  );\n\n  useEventListener('storage', localStorageChanged);\n\n  return [currentState, setCurrentState];\n}\n","export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n\n    this._authFormat = '';\n  }\n\n  _constructAuthorization() {\n    this._headers = {\n      ...this._headers,\n      authorization: this._authFormat + localStorage.token,\n    };\n  }\n\n  _handleFetch = (res) => (res.ok ? res.json() : Promise.reject(res.statusText));\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers ?? {},\n    };\n\n    if (method && method !== 'GET') {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options).then(this._handleFetch);\n  }\n}\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst COHORT_ID = 'cohort-24';\nconst TOKEN = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: new URL(`https://mesto.${apiDomain}`),\n  version: 'v1',\n  endpoints: {\n    users: 'users/me',\n    cards: 'cards',\n  },\n};\n\nclass Features extends Api {\n  getUserInfo() {\n    return this._customFetch(api.endpoints.users);\n  }\n\n  getInitialCards() {\n    return this._customFetch(api.endpoints.cards);\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch(api.endpoints.users, 'PATCH', {\n      name,\n      about,\n    });\n\n  addCard = (name, link) =>\n    this._customFetch(api.endpoints.cards, 'POST', {\n      name,\n      link,\n    });\n\n  deleteCard = cardId => this._customFetch(`${api.endpoints.cards}/${cardId}`, 'DELETE');\n\n  changeLikeCardStatus = (cardId, status) =>\n    this._customFetch(`${api.endpoints.cards}/likes/${cardId}`, status ? 'PUT' : 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch(`${api.endpoints.users}/avatar`, 'PATCH', {\n      avatar,\n    });\n}\n\nexport default new Features({\n  baseUrl: `${api.url.origin}/${api.version}/${COHORT_ID}`,\n  headers: {\n    authorization: TOKEN,\n  },\n});\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst api = {\n  url: new URL(`https://auth.${apiDomain}`),\n  endpoints: {\n    signup: 'signup',\n    signin: 'signin',\n    user: 'users/me',\n  },\n};\n\nclass Auth extends Api {\n  constructor(options) {\n    super(options);\n\n    this._authFormat = 'Bearer ';\n  }\n\n  register(email, password) {\n    return this._customFetch(api.endpoints.signup, 'POST', { password, email });\n  }\n\n  login(email, password) {\n    return this._customFetch(api.endpoints.signin, 'POST', { password, email });\n  }\n\n  getUserInfo() {\n    this._constructAuthorization();\n\n    return this._customFetch(api.endpoints.user).then(res => res.data);\n  }\n}\n\nexport default new Auth({\n  baseUrl: api.url.origin,\n});\n","import { createContext, useContext } from 'react';\n\nimport api from '../api/api';\n\nconst defaultUserState = {\n  name: 'Неизвестный',\n  about: 'Потеряно соединение с сервером',\n};\n\nconst CurrentUserContext = createContext();\nconst CurrentUserDispatchContext = createContext();\n\nfunction CurrentUserProvider({ state, dispatch, children }) {\n  return (\n    <CurrentUserContext.Provider value={state}>\n      <CurrentUserDispatchContext.Provider value={dispatch}>\n        {children}\n      </CurrentUserDispatchContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nfunction useCurrentUser() {\n  const context = useContext(CurrentUserContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUser must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction useCurrentUserDispatcher() {\n  const context = useContext(CurrentUserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUserDispatcher must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction objectsAreEqual(first, second) {\n  return JSON.stringify(first) === JSON.stringify(second);\n}\n\nasync function sendApiUpdate(dispatch, user, updates, func) {\n  const expectedUser = { ...user, ...updates };\n  dispatch(expectedUser);\n\n  try {\n    const updatedUser = await api[func](updates);\n    if (!objectsAreEqual(expectedUser, updatedUser)) {\n      dispatch(updatedUser);\n    }\n    return updatedUser;\n  } catch (error) {\n    dispatch(user);\n    console.log('Couldnt update user information on the server', error);\n    throw error; // Forwarding error\n  }\n}\n\nexport {\n  defaultUserState,\n  CurrentUserProvider,\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n};\n","import { useCallback, useState } from 'react';\n\nconst initialStates = {\n  errors: {},\n  isInvalid: true,\n};\n\nexport default function useValidatedForm(initialData = {}) {\n  const [data, setData] = useState(initialData);\n  const [errors, setErrors] = useState(initialStates.errors);\n  const [isInvalid, setIsInvalid] = useState(initialStates.isInvalid);\n\n  function handleChange(name, value) {\n    setData((prevData) => {\n      const newData = { ...prevData, [name]: value };\n\n      const newDataEqualsInitial =\n        JSON.stringify({ ...initialData, ...newData }) === JSON.stringify(initialData);\n      if (newDataEqualsInitial) {\n        setIsInvalid(true);\n      }\n\n      return newData;\n    });\n  }\n\n  function handleError(name, validationMessage) {\n    setErrors((prevData) => ({ ...prevData, [name]: validationMessage }));\n  }\n\n  const reset = useCallback(\n    (e_, data) => {\n      setData(data ?? initialData);\n      setErrors(initialStates.errors);\n      setIsInvalid(initialStates.isInvalid);\n    },\n    [initialData]\n  );\n\n  return {\n    registerForm() {\n      return {\n        isSubmitDisabled: isInvalid,\n        onReset: reset,\n      };\n    },\n    register(name) {\n      return {\n        value: data[name] ?? '',\n        onChange: (e) => {\n          const input = e.currentTarget;\n          const { value, validationMessage } = input;\n\n          handleChange(name, value);\n          handleError(name, value.length ? validationMessage : '');\n\n          const formValidity = input.closest('form').checkValidity();\n          setIsInvalid(!formValidity);\n        },\n        validationMessage: errors[name],\n        name,\n      };\n    },\n    reset,\n    getData() {\n      return data;\n    },\n    isInvalid,\n  };\n}\n","const classToSelector = (className) => `.${className}`;\n\nexport const popupSelectors = {\n  closeButtonClass: 'popup__close-button',\n};\n\nexport const formClassesConfig = {\n  inputClass: 'form__input',\n  submitButtonClass: 'form__button',\n};\n\nexport const defaultFormConfig = {\n  formSelector: classToSelector(formClassesConfig.formClass),\n  inputSelector: classToSelector(formClassesConfig.inputClass),\n  submitButtonSelector: classToSelector(formClassesConfig.submitButtonClass),\n  inputErrorClass: formClassesConfig.inputErrorClass,\n  errorClass: formClassesConfig.errorClass,\n};\n","import { memo, useCallback } from 'react';\n\nconst Form = memo(({ onSubmit, ...props }) => {\n  const handleSubmit = useCallback(\n    (e) => {\n      if (onSubmit) {\n        e.preventDefault();\n\n        onSubmit(e);\n      }\n    },\n    [onSubmit]\n  );\n\n  return (\n    <form action=\"#\" onSubmit={handleSubmit} className=\"form\" {...props}>\n      {props.children}\n    </form>\n  );\n});\n\nexport default Form;\n","export const toClassNames = (arr) => arr.filter(Boolean).join(' ');\n\nexport const classNames = (arr) => ({ className: toClassNames(arr) });\n","import { forwardRef, createRef, useEffect } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\nimport { classNames } from '../utils/toClassNames';\n\nconst defaults = {\n  type: 'text',\n  required: true,\n  minLength: 2,\n};\n\nconst FormInput = forwardRef(({ isFocused, validationMessage, ...props }, forwardedRef) => {\n  const ref = forwardedRef ?? createRef();\n\n  const type = props.type ?? defaults.type;\n\n  const required = props.required ?? defaults.required;\n\n  const conditionalMinLength = type === defaults.type ? defaults.minLength : null;\n  const minLength = props.minLength ?? conditionalMinLength;\n\n  const finalProps = {\n    type,\n    minLength,\n    required,\n    ref,\n  };\n\n  useEffect(() => {\n    if (\n      isFocused &&\n      ref &&\n      ref.current &&\n      ref.current.parentElement !== document.activeElement.parentElement\n    ) {\n      setTimeout(() => {\n        ref && ref.current && ref.current.focus();\n      }, 50);\n    }\n  }, [isFocused, ref]);\n\n  return (\n    <>\n      <input\n        {...props}\n        {...classNames([\n          formClassesConfig.inputClass,\n          validationMessage && 'form__input_type_error',\n          props.className,\n        ])}\n        {...finalProps}\n      />\n      <p\n        {...classNames(['form__error', validationMessage && 'form__error_visible'])}\n        id={`${props.id}-error`}\n      >\n        {validationMessage}\n      </p>\n    </>\n  );\n});\n\nexport default FormInput;\n","import { memo, useState } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\n\nimport Form from './Form';\nimport FormInput from './FormInput';\n\nconst propsForInputs = {\n  autoCorrect: 'off',\n  spellCheck: false,\n  className: `${formClassesConfig.inputClass}_theme_dark`,\n};\n\nconst inputNames = {\n  email: 'email',\n  password: 'password',\n};\n\nconst LoginOrRegister = memo(({ form, ...props }) => {\n  const [buttonIsSaving, setButtonIsSaving] = useState(false);\n\n  const buttonTitle = buttonIsSaving ? `${props.buttonSavingTitle}...` : props.buttonTitle;\n\n  function handleSubmit(e) {\n    setButtonIsSaving(true);\n\n    const { email, password } = form.getData();\n\n    props.handleSubmit(e, email, password).finally(() => {\n      setButtonIsSaving(false);\n    });\n  }\n\n  return (\n    <div className=\"content auth\">\n      <h2 className=\"auth__title\">{props.title}</h2>\n\n      <Form onSubmit={handleSubmit} onReset={form.reset}>\n        <FormInput\n          {...propsForInputs}\n          autoFocus\n          {...form.register(inputNames.email)}\n          id={inputNames.email}\n          type={inputNames.email}\n          autoComplete={inputNames.email}\n          placeholder=\"Email\"\n        />\n        <FormInput\n          {...propsForInputs}\n          {...form.register(inputNames.password)}\n          type={inputNames.password}\n          id={props.passwordAutocomplete}\n          autoComplete={props.passwordAutocomplete}\n          placeholder=\"Пароль\"\n        />\n        <button\n          type=\"submit\"\n          disabled={form.isInvalid || buttonIsSaving}\n          className={`auth__button ${formClassesConfig.submitButtonClass} ${formClassesConfig.submitButtonClass}_theme_dark`}\n        >\n          {buttonTitle}\n        </button>\n      </Form>\n      {props.children}\n    </div>\n  );\n});\n\nexport default LoginOrRegister;\n","import { memo } from 'react';\n\nimport { pathNames } from '../utils/constants';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'current-password',\n  title: pathNames.login.title,\n  buttonTitle: pathNames.login.action,\n  buttonSavingTitle: pathNames.login.title,\n};\n\nconst Login = memo((props) => <LoginOrRegister {...props} {...defaultProps} />);\n\nexport default Login;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'new-password',\n  title: pathNames.register.title,\n  buttonTitle: pathNames.register.action,\n  buttonSavingTitle: pathNames.register.title,\n};\n\nconst Register = memo((props) => (\n  <LoginOrRegister {...props} {...defaultProps}>\n    <div className=\"auth__signin\">\n      Уже зарегистрированы?{' '}\n      <Link to={paths.login} className=\"auth__login-link\">\n        {pathNames.login.action}\n      </Link>\n    </div>\n  </LoginOrRegister>\n));\n\nexport default Register;\n","import { memo } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nimport { parseFixedLocalBase64Value } from '../hooks/useStateWithBase64';\nimport useValidatedForm from '../hooks/useValidatedForm';\n\nimport Login from './Login';\nimport Register from './Register';\n\nconst Authentication = memo((props) => {\n  const form = useValidatedForm({\n    email: parseFixedLocalBase64Value('email') ?? '',\n    password: '',\n  });\n\n  return props.loggedIn ? (\n    <Redirect to={paths.main} />\n  ) : (\n    <>\n      <Route path={paths.login}>\n        <Login handleSubmit={props.handleLogin} form={form} />\n      </Route>\n      <Route path={paths.register}>\n        <Register handleSubmit={props.handleRegister} form={form} />\n      </Route>\n    </>\n  );\n});\n\nexport default Authentication;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useStateWithLocalStorage from './useStateWithLocalStorage';\n\nexport const parseFixedLocalBase64Value = (elementName) =>\n  localStorage[elementName] && atob(JSON.parse(localStorage[elementName]));\n\nexport default function useStateWithBase64(computed, defaultForComputed) {\n  const [initialState, updateState] = useStateWithLocalStorage(computed, defaultForComputed);\n\n  const setState = useCallback(\n    (value) => {\n      updateState(btoa(value));\n    },\n    [updateState]\n  );\n\n  const state = useRef(atob(initialState));\n\n  useEffect(() => {\n    state.current = atob(initialState);\n  });\n\n  return [state.current, setState];\n}\n","import { Route, Redirect } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nconst ProtectedRoute = (props) => (\n  <Route>{props.loggedIn ? props.children : <Redirect to={paths.login} />}</Route>\n);\nexport default ProtectedRoute;\n","import { repository } from '../../package.json';\n\nconst repoSeparator = '.';\n\nconst repoSplit = repository.url.split(repoSeparator);\nrepoSplit.pop();\n\nconst repoJoined = repoSplit.join(repoSeparator);\n\nexport const repo = repoJoined.split('+')[1];\n","export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\nimport { repo } from '../utils/pkg';\nimport { classNames } from '../utils/toClassNames';\n\nimport logo from '../images/logo.svg';\n\nconst Header = memo(({ loggedIn, ...props }) => {\n  const location = useLocation();\n\n  let buttonTitle;\n  let buttonLink = paths.login;\n\n  switch (location.pathname) {\n    case paths.login:\n      buttonTitle = pathNames.register.title;\n      buttonLink = paths.register;\n      break;\n\n    case paths.register:\n      buttonTitle = pathNames.login.action;\n      break;\n\n    default:\n      buttonTitle = pathNames.quit.action;\n      break;\n  }\n\n  return (\n    <header className=\"header\">\n      <a target=\"_self\" href={repo} className=\"logo header__logo\">\n        <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n      </a>\n      <div className=\"header__container\">\n        {loggedIn && props.credential && <p className=\"header__credential\">{props.credential}</p>}\n        <Link\n          to={buttonLink}\n          onClick={loggedIn ? props.onSignOut : null}\n          {...classNames(['header__action-button', loggedIn && 'header__action-button_dimmed'])}\n        >\n          {buttonTitle}\n        </Link>\n      </div>\n    </header>\n  );\n});\n\nexport default Header;\n","import { memo, useMemo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Card from './Card';\n\nconst MAXIMUM_CARDS_QUANTITY = 30;\n\nconst defaultCard = {\n  isTemporarilyLocal: true,\n  name: 'Загрузка...',\n};\n\nconst defaultCards = [];\nfor (let i = 0; i < MAXIMUM_CARDS_QUANTITY; i++) {\n  defaultCards.push(defaultCard);\n}\n\nconst Main = memo(props => {\n  const currentUser = useCurrentUser();\n\n  const cards = useMemo(() => (props.cards.length ? props.cards : defaultCards), [props.cards]);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n          <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar} />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__description\">{currentUser.about}</p>\n          <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n        </div>\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {cards.map(card => (\n            <Card\n              key={card._id ?? Math.random()}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              card={card}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}, (prevProps, nextProps) => JSON.stringify(prevProps) === JSON.stringify(nextProps));\n\nexport default Main;\n","import { memo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport checkImageLoading from '../utils/checkImageLoading';\nimport { classNames } from '../utils/toClassNames';\n\nconst Card = memo(({ card, ...props }) => {\n  card.likes = card.likes ?? [];\n\n  const currentUser = useCurrentUser();\n\n  if (card.isTemporarilyLocal) {\n    card.owner = currentUser;\n  }\n\n  const isOwn = card.owner._id === currentUser._id;\n\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  function handleImageClick(e) {\n    if (checkImageLoading(e.target)) {\n      // UX - this makes user unable to open an unloaded image\n      props.onCardClick(card);\n    }\n  }\n  function handleImageError(e) {\n    // UI for images that failed to load\n    e.target.style.cursor = 'default';\n    e.target.title = `Failed to load image: \"${card.name}\"`;\n  }\n\n  function handleLikeClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardDelete(card);\n  }\n\n  const authorInfo = `Автор: ${card.owner.name} · ${card.owner.about}`;\n  const authorInfoDev = `${authorInfo}\\n\\n#${card.owner._id}\\n${card.owner.avatar}`;\n\n  return (\n    <li {...classNames(['element', card.isTemporarilyLocal && 'element_appearing'])}>\n      <img\n        onError={handleImageError}\n        onClick={handleImageClick}\n        className=\"element__image\"\n        alt={card.name}\n        src={card.link}\n      />\n      {isOwn && (\n        <button onClick={handleDeleteClick} type=\"reset\" className=\"element__trash-button\" />\n      )}\n      <div className=\"element__container\" title={authorInfo}>\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <input\n            checked={isLiked}\n            type=\"checkbox\"\n            onChange={handleLikeClick}\n            className=\"element__like-button\"\n            title={authorInfoDev}\n          />\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n});\n\nexport default Card;\n","export default function checkImageLoading(image) {\n  return image.complete && image.naturalHeight !== 0;\n}\n","import { memo } from 'react';\n\nimport { author } from '../../package.json';\n\nimport { repo } from '../utils/pkg';\n\nconst linkSeparator = '/';\n\nconst repoSplitted = repo.split(linkSeparator);\nrepoSplitted.pop();\n\nconst copyrightLink = repoSplitted.join(linkSeparator);\n\nconst yearOfBuild = new Date().getFullYear();\n\nconst Footer = memo(() => (\n  <footer className=\"footer\">\n    <a target=\"_blank\" rel=\"noreferrer\" href={copyrightLink} className=\"footer__copyright\">\n      &copy; {yearOfBuild} {author}\n    </a>\n  </footer>\n));\n\nexport default Footer;\n","import { useState, useEffect, memo } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { classNames } from '../utils/toClassNames';\nimport { modalRoot } from '../utils/constants';\n\nconst defaults = {\n  className: 'popup',\n  shouldAppearInDOM: false,\n};\ndefaults.classNameOpened = `${defaults.className}_opened`;\n\nconst Popup = memo(({ isOpen, closeTimeoutMS = 250, ...props }) => {\n  const [classNameForAnimation, setClassNameForAnimation] = useState();\n  const [shouldAppearInDOM, setShouldAppearInDOM] = useState(defaults.shouldAppearInDOM);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldAppearInDOM(!defaults.shouldAppearInDOM);\n      const showingTimeout = setTimeout(() => {\n        setClassNameForAnimation(defaults.classNameOpened);\n      }, 5); // TODO remove this 5ms delay. This is a temporary fix so that Safari displays a transition between .popup and .popup_opened. Chrome, btw, just ignores the transition. Maybe I should rewrite this to a CSS-only solution.\n      return () => clearTimeout(showingTimeout);\n    }\n    document.activeElement.blur(); // fixes mobile keyboard being stuck on the screen after form submission (due to `event.preventDefault()`)\n\n    setClassNameForAnimation();\n    const hidingTimeout = setTimeout(() => {\n      setShouldAppearInDOM(defaults.shouldAppearInDOM);\n    }, closeTimeoutMS);\n\n    return () => clearTimeout(hidingTimeout);\n  }, [closeTimeoutMS, isOpen]);\n\n  if (!shouldAppearInDOM) {\n    return null;\n  }\n\n  return createPortal(\n    <section\n      style={{ transitionDuration: `${closeTimeoutMS}ms` }}\n      {...classNames([defaults.className, props.className, classNameForAnimation])}\n      onClick={props.onClick}\n      id={props.id}\n    >\n      {props.children}\n    </section>,\n    modalRoot,\n  );\n});\n\nexport default Popup;\n","import { memo } from 'react';\n\nimport Popup from './Popup';\n\nconst popupShouldntRender = (prevProps, nextProps) => {\n  const isOpen = prevProps.isOpen;\n  const notSame = prevProps.isOpen !== nextProps.isOpen;\n  const condition = isOpen || notSame;\n  return !condition;\n};\n\nconst inPopup = (Component, propsFunction) => {\n  function ComponentWrapper(props) {\n    const popupProps = {\n      isOpen: props.isOpen,\n      onClick: props.onClose,\n      ...(propsFunction && propsFunction(props)),\n    };\n\n    return (\n      <Popup {...popupProps}>\n        <Component {...props} />\n      </Popup>\n    );\n  }\n\n  return memo(ComponentWrapper, popupShouldntRender);\n};\n\nexport default inPopup;\n","import { useCallback, useState } from 'react';\n\nimport { popupSelectors, formClassesConfig } from '../utils/utils';\nimport { tooltips } from '../utils/constants';\n\nimport inPopup from './inPopup';\nimport Form from './Form';\n\nconst defaultButtonTitle = 'Сохранить';\nconst defaultSavingButtonTitle = 'Сохранение...';\n\nconst PopupWithForm = ({ onSubmit, children, onReset, ...props }) => {\n  const [buttonIsSaving, setButtonIsSaving] = useState(false);\n\n  const buttonTitle = buttonIsSaving\n    ? defaultSavingButtonTitle\n    : props.buttonTitle ?? defaultButtonTitle;\n\n  const handleSubmit = useCallback(\n    (e) => {\n      setButtonIsSaving(true);\n\n      onSubmit &&\n        onSubmit(e)\n          .then((res) => {\n            if (children) {\n              e.target.reset();\n              onReset && onReset(e);\n            }\n            return res;\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n          .finally(() => {\n            setButtonIsSaving(false);\n          });\n    },\n    [children, onReset, onSubmit]\n  );\n\n  return (\n    <div className=\"popup__container\">\n      <button title={tooltips.close} type=\"reset\" className={popupSelectors.closeButtonClass} />\n      <h2 className=\"popup__title\">{props.title}</h2>\n\n      <Form onSubmit={handleSubmit} onReset={onReset}>\n        {children}\n        <button\n          disabled={props.isSubmitDisabled || buttonIsSaving}\n          title={tooltips.confirm}\n          type=\"submit\"\n          className={`popup__button ${formClassesConfig.submitButtonClass}`}\n        >\n          {buttonTitle}\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nexport default inPopup(PopupWithForm, (props) => ({ id: props.name }));\n","import { memo, useEffect } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport useValidatedForm from '../hooks/useValidatedForm';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst EditProfilePopup = memo((props) => {\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  const { reset, ...form } = useValidatedForm(currentUser);\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      reset();\n    }\n  }, [props.isOpen, reset]);\n\n  async function handleSubmit() {\n    const res = await sendApiUpdate(setCurrentUser, currentUser, form.getData(), 'editProfile');\n    props.onUpdateUser();\n    return res;\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Редактировать профиль\"\n      name=\"profile-editor\"\n      isSubmitDisabled={form.isInvalid}\n    >\n      <FormInput\n        isFocused={props.isOpen}\n        {...form.register('name')}\n        autoComplete=\"name\"\n        autoCapitalize=\"words\"\n        id=\"profile-name\"\n        placeholder=\"Имя\"\n        maxLength=\"40\"\n      />\n\n      <FormInput\n        {...form.register('about')}\n        id=\"profile-about\"\n        placeholder=\"О себе\"\n        maxLength=\"200\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditProfilePopup;\n","import { memo } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport useValidatedForm from '../hooks/useValidatedForm';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst EditAvatarPopup = memo((props) => {\n  const form = useValidatedForm();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  function handleSubmit() {\n    props.onUpdateAvatar();\n\n    return sendApiUpdate(setCurrentUser, currentUser, form.getData(), 'updateAvatar');\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Обновить аватар\"\n      name=\"avatar-editor\"\n      {...form.registerForm()}\n    >\n      <FormInput\n        isFocused={props.isOpen}\n        {...form.register('avatar')}\n        type=\"url\"\n        id=\"profile-avatar\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditAvatarPopup;\n","import { memo } from 'react';\n\nimport useValidatedForm from '../hooks/useValidatedForm';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst AddPlacePopup = memo((props) => {\n  const form = useValidatedForm();\n\n  function handleSubmit() {\n    return props.onAddPlace(form.getData());\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Новое место\"\n      name=\"element-editor\"\n      buttonTitle=\"Создать\"\n      {...form.registerForm()}\n    >\n      <FormInput\n        isFocused={props.isOpen}\n        {...form.register('title')}\n        id=\"element-title\"\n        placeholder=\"Название\"\n        maxLength=\"30\"\n      />\n\n      <FormInput\n        {...form.register('link')}\n        type=\"url\"\n        id=\"element-link\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default AddPlacePopup;\n","import { memo, useCallback } from 'react';\n\nimport useEnterHandler from '../hooks/useEnterHandler';\n\nimport PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = memo((props) => {\n  const { onCardDelete, card, isOpen } = props;\n\n  const handleSubmit = useCallback(() => onCardDelete(card), [card, onCardDelete]);\n\n  const handleEnter = useCallback(() => isOpen && handleSubmit(), [handleSubmit, isOpen]);\n\n  useEnterHandler(handleEnter);\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Вы уверены?\"\n      name=\"delete-confirmation\"\n      buttonTitle=\"Да\"\n    />\n  );\n});\n\nexport default ConfirmDeletePopup;\n","import { useRef, useEffect, useCallback } from 'react';\n\nimport useEventListener from './useEventListener';\n\nexport default function useEnterHandler(handler) {\n  const savedHandler = useRef();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  const enterHandler = useCallback((e) => {\n    if (e.key === 'Enter') {\n      savedHandler.current();\n    }\n  }, []);\n\n  useEventListener('keydown', enterHandler);\n}\n","import { popupSelectors } from '../utils/utils';\nimport { classNames } from '../utils/toClassNames';\nimport { tooltips } from '../utils/constants';\n\nimport inPopup from './inPopup';\n\nconst buttonClassNames = [\n  popupSelectors.closeButtonClass,\n  `${popupSelectors.closeButtonClass}_parent-corners_straight`,\n];\n\nconst ImagePopup = ({ card }) => (\n  <figure className=\"popup__figure\">\n    <button title={tooltips.close} type=\"button\" {...classNames(buttonClassNames)} />\n    <img className=\"popup__image\" alt={card.name} src={card.link} />\n    <figcaption className=\"popup__caption\">{card.name}</figcaption>\n  </figure>\n);\n\nexport default inPopup(ImagePopup, () => ({\n  className: 'popup_type_image',\n  id: 'image-viewer',\n}));\n","export default __webpack_public_path__ + \"static/media/check.5221857e.svg\";","export default __webpack_public_path__ + \"static/media/cross.173b3897.svg\";","import checkIcon from '../images/check.svg';\nimport crossIcon from '../images/cross.svg';\n\nimport { popupSelectors } from '../utils/utils';\nimport { tooltips } from '../utils/constants';\n\nimport inPopup from './inPopup';\n\nconst backgroundImageUrl = (url) => ({ backgroundImage: `url(${url})` });\n\nconst InfoTooltip = ({ isSuccess }) => (\n  <div className=\"popup__container\">\n    <button title={tooltips.close} type=\"button\" className={popupSelectors.closeButtonClass} />\n\n    <div className=\"info-tooltip\">\n      <div\n        className=\"info-tooltip__icon\"\n        style={backgroundImageUrl(isSuccess ? checkIcon : crossIcon)}\n      />\n      <h3 className=\"info-tooltip__title\">\n        {isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}\n      </h3>\n    </div>\n  </div>\n);\n\nexport default inPopup(InfoTooltip);\n","const isDefaultLocalhost = window.location.host === 'localhost';\n\nexport default function checkLocalHost() {\n  return (\n    isDefaultLocalhost &&\n    (function () {\n      const { NODE_ENV, REACT_APP_LOCAL_HOST } = process.env;\n      const NODE_ENV_IS_DEV = NODE_ENV === 'development';\n\n      if (NODE_ENV_IS_DEV && REACT_APP_LOCAL_HOST) {\n        return (window.location.host = REACT_APP_LOCAL_HOST);\n      }\n    })()\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { paths, root } from '../utils/constants';\nimport scrollToTop from '../utils/scrollToTop';\n\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\nimport useStateWithBase64 from '../hooks/useStateWithBase64';\nimport useEscapeHandler from '../hooks/useEscapeHandler';\n\nimport api from '../api/api';\nimport auth from '../api/auth';\n\nimport { CurrentUserProvider, defaultUserState } from '../contexts/CurrentUserContext';\n\nimport Authentication from './Authentication';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\n\nimport checkLocalHost from '../utils/checkLocalHost';\n\ncheckLocalHost();\n\nfunction App() {\n  const history = useHistory();\n\n  const [currentUser, setCurrentUser] = useStateWithLocalStorage('currentUser', defaultUserState);\n\n  const [loggedIn, setLoggedIn] = useStateWithLocalStorage('loggedIn', false);\n  const [email, setEmail] = useStateWithBase64('email', '');\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n\n  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState({});\n\n  const [cards, setCards] = useStateWithLocalStorage('cards', []);\n\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then(setCurrentUser)\n      .catch((err) => console.log('Couldnt get user info from the server', err));\n  }, [setCurrentUser]);\n\n  useEffect(() => {\n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch((err) => console.log('Couldnt get initial cards from the server', err));\n  }, [setCards]);\n\n  useEffect(() => {\n    root.classList[\n      isEditProfilePopupOpen ||\n      isAddPlacePopupOpen ||\n      isEditAvatarPopupOpen ||\n      isConfirmDeletePopupOpen ||\n      isImagePopupOpen ||\n      isInfoTooltipOpen\n        ? 'add'\n        : 'remove'\n    ]('root-animated_popped-out');\n  }, [\n    isAddPlacePopupOpen,\n    isConfirmDeletePopupOpen,\n    isEditAvatarPopupOpen,\n    isEditProfilePopupOpen,\n    isImagePopupOpen,\n    isInfoTooltipOpen,\n  ]);\n\n  async function handleCardLike(card) {\n    const oldCards = cards;\n\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    const expectedCardLikes = isLiked\n      ? card.likes.filter((like) => like._id !== currentUser._id)\n      : [...card.likes, currentUser];\n\n    const expectedCard = { ...card, likes: expectedCardLikes };\n\n    setCards(cards.map((c) => (c._id === card._id ? expectedCard : c)));\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n      setCards(cards.map((c) => (c._id === card._id ? newCard : c)));\n      return newCard;\n    } catch (error) {\n      setCards(oldCards);\n      console.error(error);\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsInfoTooltipOpen(false);\n  }\n\n  const handleCardDelete = useCallback(\n    (card) => {\n      const oldCards = cards;\n\n      setCards(cards.filter((c) => c._id !== card._id));\n\n      closeAllPopups();\n\n      return api.deleteCard(card._id).catch((error) => {\n        setCards(oldCards);\n        console.log('Couldnt delete card on the server', error);\n      });\n    },\n    [cards, setCards]\n  );\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmDeleteClick(card) {\n    setSelectedCard(card);\n\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n\n    setIsImagePopupOpen(true);\n  }\n\n  const handlePopupClick = useCallback((e) => {\n    e.target === e.currentTarget && closeAllPopups();\n  }, []);\n\n  const handleUpdateUser = closeAllPopups;\n  const handleUpdateAvatar = closeAllPopups;\n\n  function handleAddPlaceSubmit({ title, link }) {\n    const oldCards = cards;\n\n    const expectedCard = {\n      isTemporarilyLocal: true,\n      name: title,\n      link,\n    };\n\n    setCards([expectedCard, ...cards]);\n\n    closeAllPopups();\n\n    return api\n      .addCard(title, link)\n      .then((newCard) => setCards([newCard, ...cards]))\n      .catch((err) => {\n        setCards(oldCards);\n        throw err; // Forwarding error to PopupWithForm\n      });\n  }\n\n  useEscapeHandler(closeAllPopups);\n\n  const handleLogin = useCallback(\n    (email) => {\n      setEmail(email);\n      setLoggedIn(true);\n    },\n    [setEmail, setLoggedIn]\n  );\n\n  const handleTokenCheck = useCallback(() => {\n    if (localStorage.token) {\n      auth.token = localStorage.token;\n      auth\n        .getUserInfo()\n        .then((res) => {\n          if (res) {\n            handleLogin(res.email);\n            history.replace(paths.main);\n          }\n        })\n        .catch((err) => {\n          setLoggedIn(false);\n\n          console.log(err);\n        });\n    } else {\n      setLoggedIn(false);\n    }\n  }, [handleLogin, history, setLoggedIn]);\n\n  function handleSubmitRegister(e_, email, password) {\n    return auth\n      .register(email, password)\n      .then(() => {\n        history.replace(paths.login);\n        setIsInfoTooltipSuccess(true);\n      })\n      .catch((err) => {\n        setIsInfoTooltipSuccess(false);\n        console.log(err);\n      })\n      .finally(() => {\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleSubmitLogin(e, email, password) {\n    if (!email || !password) {\n      return;\n    }\n\n    return auth\n      .login(email, password)\n      .then((data) => {\n        if (data.token) {\n          e.target.reset();\n\n          localStorage.token = data.token;\n\n          handleLogin(email);\n          history.push(paths.main);\n        }\n      })\n      .catch((err) => {\n        setIsInfoTooltipOpen(true);\n        console.log(err);\n      });\n  }\n\n  function handleSignOut() {\n    delete localStorage.token;\n    setLoggedIn(false);\n    history.replace(paths.login);\n    scrollToTop();\n  }\n\n  useEffect(() => {\n    handleTokenCheck();\n  }, [handleTokenCheck]);\n\n  return (\n    <CurrentUserProvider state={currentUser} dispatch={setCurrentUser}>\n      <Header credential={email} onSignOut={handleSignOut} loggedIn={loggedIn} />\n\n      <Switch>\n        <Route path={[paths.register, paths.login]}>\n          <Authentication\n            loggedIn={loggedIn}\n            handleLogin={handleSubmitLogin}\n            handleRegister={handleSubmitRegister}\n          />\n\n          <InfoTooltip\n            isOpen={isInfoTooltipOpen}\n            isSuccess={isInfoTooltipSuccess}\n            onClose={handlePopupClick}\n          />\n        </Route>\n\n        <ProtectedRoute path={paths.main} loggedIn={loggedIn}>\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDeleteClick}\n          />\n\n          <EditProfilePopup\n            onUpdateUser={handleUpdateUser}\n            isOpen={isEditProfilePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <AddPlacePopup\n            onAddPlace={handleAddPlaceSubmit}\n            isOpen={isAddPlacePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdateAvatar}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={handlePopupClick}\n          />\n          <ConfirmDeletePopup\n            card={selectedCard}\n            onCardDelete={handleCardDelete}\n            isOpen={isConfirmDeletePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={handlePopupClick} />\n        </ProtectedRoute>\n      </Switch>\n\n      <Footer />\n    </CurrentUserProvider>\n  );\n}\n\nexport default App;\n","import { useRef, useEffect, useCallback } from 'react';\n\nimport useEventListener from './useEventListener';\n\nexport default function useEscapeHandler(handler) {\n  const savedHandler = useRef();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  const escHandler = useCallback((e) => {\n    if (e.key === 'Escape') {\n      savedHandler.current();\n    }\n  }, []);\n\n  useEventListener('keydown', escHandler);\n}\n","export default function scrollToTop() {\n  window.scrollTo(0, 0);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}