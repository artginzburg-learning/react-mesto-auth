{"version":3,"sources":["utils/constants.js","hooks/useStateWithLocalStorage.js","classes/Api.js","api/api.js","api/auth.js","contexts/CurrentUserContext.jsx","utils/utils.js","components/Form.jsx","utils/toClassNames.js","components/FormInput.jsx","components/LoginOrRegister.jsx","components/Login.jsx","components/Register.jsx","components/Authentication.jsx","hooks/useStateWithBase64.js","components/ProtectedRoute.jsx","utils/pkg.js","components/Main.jsx","images/logo.svg","components/Header.jsx","components/Card.jsx","components/Footer.jsx","utils/FormValidator.js","components/Popup.jsx","components/PopupWithForm.jsx","utils/enableValidation.js","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ConfirmDeletePopup.jsx","components/ImagePopup.jsx","images/check.svg","images/cross.svg","components/InfoTooltip.jsx","components/App.jsx","hooks/useEscapeHandler.js","utils/scrollToTop.js","reportWebVitals.js","index.jsx"],"names":["apiDomain","paths","pathNames","title","action","useStateWithLocalStorage","computed","defaultForComputed","useState","localStorage","JSON","parse","currentState","updateCurrentState","localStorageChanged","useCallback","e","key","newValue","setCurrentState","value","stringify","useEffect","listenerArgs","window","addEventListener","removeEventListener","Api","options","_handleFetch","res","ok","json","Promise","reject","status","this","_baseUrl","baseUrl","_headers","headers","_authFormat","authorization","token","target","method","body","fetch","then","api","url","URL","version","endpoints","users","cards","editProfile","name","about","_customFetch","addCard","link","deleteCard","cardId","changeLikeCardStatus","updateAvatar","avatar","origin","signup","signin","user","email","password","_constructAuthorization","data","defaultUserState","CurrentUserContext","React","createContext","CurrentUserDispatchContext","CurrentUserProvider","state","dispatch","children","Provider","useCurrentUser","context","useContext","undefined","Error","useCurrentUserDispatcher","objectsAreEqual","first","second","sendApiUpdate","updates","func","a","expectedUser","updatedUser","console","log","classToSelector","className","popupSelectors","formClassesConfig","defaultFormConfig","formSelector","inputSelector","submitButtonSelector","inputErrorClass","errorClass","Form","memo","onSubmit","props","handleSubmit","preventDefault","toClassNames","arr","filter","Boolean","join","classNames","defaults","FormInput","forwardRef","forwardedRef","isFocused","ref","createRef","type","required","conditionalMinLength","finalProps","minLength","current","parentElement","document","activeElement","setTimeout","focus","id","propsForInputs","autoCorrect","spellCheck","inputNames","LoginOrRegister","states","setEmail","setPassword","onReset","autoFocus","placeholder","autoComplete","onChange","passwordAutocomplete","buttonTitle","defaultProps","Login","Register","to","Authentication","elementName","atob","loggedIn","path","handleLogin","handleRegister","ProtectedRoute","repoSplit","repository","split","pop","repo","Header","location","useLocation","buttonLink","pathname","href","alt","src","logo","credential","onClick","onSignOut","Card","card","likes","currentUser","isTemporarilyLocal","owner","isOwn","_id","isLiked","some","i","onCardClick","onCardDelete","checked","onCardLike","length","defaultCard","defaultCards","push","Main","useMemo","onEditAvatar","onEditProfile","onAddPlace","map","Math","random","repoSplitted","copyrightLink","yearOfBuild","Date","getFullYear","Footer","rel","author","FormValidator","element","_showInputError","inputElement","errorMessage","errorElement","_element","querySelector","classList","add","_data","textContent","_hideInputError","remove","_resetFormErrors","_inputList","forEach","_toggleButtonState","_checkInputValidity","validity","valid","validationMessage","_hasInvalidInput","inputList","disable","_buttonElement","disabled","_validationHandler","_setListeners","Array","from","querySelectorAll","classNameClosed","isOpened","classNameOpened","modalRoot","getElementById","Popup","isOpen","classNameForAnimation","setClassNameForAnimation","shouldAppearInDOM","setShouldAppearInDOM","blur","showingTimout","clearTimeout","hidingTimeout","popupClassNames","createPortal","style","transitionDuration","PopupWithForm","buttonIsSaving","setButtonIsSaving","reset","catch","err","finally","popupId","validationTimeout","formElement","enableValidation","onClose","EditProfilePopup","setName","setAbout","setCurrentUser","onUpdateUser","autoCapitalize","maxLength","EditAvatarPopup","useRef","onUpdateAvatar","AddPlacePopup","setTitle","setLink","ConfirmDeletePopup","buttonClassNames","ImagePopup","InfoTooltip","isSuccess","checkIcon","crossIcon","backgroundImage","App","history","useHistory","setLoggedIn","initialState","updateState","setState","btoa","useStateWithBase64","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","isInfoTooltipSuccess","setIsInfoTooltipSuccess","selectedCard","setSelectedCard","setCards","oldCards","expectedCardLikes","like","expectedCard","c","newCard","error","closeAllPopups","getUserInfo","getInitialCards","handleCardDelete","handlePopupClick","currentTarget","handleUpdateUser","handleUpdateAvatar","escHandler","useEscapeHandler","handleTokenCheck","auth","replace","scrollTo","login","e_","register","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.a31df788.chunk.js","sourcesContent":["export const apiDomain = 'nomoreparties.co';\n\nexport const paths = {\n  login: '/login',\n  register: '/register',\n  main: '/',\n};\n\nexport const pathNames = {\n  login: {\n    title: 'Вход',\n    action: 'Войти',\n  },\n  register: {\n    title: 'Регистрация',\n    action: 'Зарегистрироваться',\n  },\n  quit: {\n    action: 'Выйти',\n  },\n};\n","import { useState, useCallback, useEffect } from 'react';\n\nexport default function useStateWithLocalStorage(computed, defaultForComputed) {\n  const [currentState, updateCurrentState] = useState(\n    localStorage[computed] && localStorage[computed] !== 'undefined'\n      ? JSON.parse(localStorage[computed])\n      : defaultForComputed\n  );\n\n  const localStorageChanged = useCallback(\n    (e) => {\n      if (e.key === computed) {\n        updateCurrentState(e.newValue ? JSON.parse(e.newValue) : defaultForComputed);\n      }\n    },\n    [computed, defaultForComputed]\n  );\n\n  const setCurrentState = useCallback(\n    (value) => {\n      localStorage[computed] = JSON.stringify(value);\n      updateCurrentState(value);\n    },\n    [computed]\n  );\n\n  useEffect(() => {\n    const listenerArgs = ['storage', localStorageChanged];\n\n    window.addEventListener(...listenerArgs);\n    return () => {\n      window.removeEventListener(...listenerArgs);\n    };\n  }, [localStorageChanged]);\n\n  return [currentState, setCurrentState];\n}\n","export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n\n    this._authFormat = '';\n  }\n\n  _constructAuthorization() {\n    this._headers = {\n      ...this._headers,\n      authorization: this._authFormat + localStorage.token,\n    };\n  }\n\n  _handleFetch = res => (res.ok ? res.json() : Promise.reject(res.status));\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers ?? {},\n    };\n\n    if (method && method !== 'GET') {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options).then(this._handleFetch);\n  }\n}\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst COHORT_ID = 'cohort-24';\nconst TOKEN = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: new URL(`https://mesto.${apiDomain}`),\n  version: 'v1',\n  endpoints: {\n    users: 'users/me',\n    cards: 'cards',\n  },\n};\n\nclass Features extends Api {\n  getUserInfo() {\n    return this._customFetch(api.endpoints.users);\n  }\n\n  getInitialCards() {\n    return this._customFetch(api.endpoints.cards);\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch(api.endpoints.users, 'PATCH', {\n      name,\n      about,\n    });\n\n  addCard = (name, link) =>\n    this._customFetch(api.endpoints.cards, 'POST', {\n      name,\n      link,\n    });\n\n  deleteCard = cardId => this._customFetch(`${api.endpoints.cards}/${cardId}`, 'DELETE');\n\n  changeLikeCardStatus = (cardId, status) =>\n    this._customFetch(`${api.endpoints.cards}/likes/${cardId}`, status ? 'PUT' : 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch(`${api.endpoints.users}/avatar`, 'PATCH', {\n      avatar,\n    });\n}\n\nexport default new Features({\n  baseUrl: `${api.url.origin}/${api.version}/${COHORT_ID}`,\n  headers: {\n    authorization: TOKEN,\n  },\n});\n","import Api from '../classes/Api';\nimport { apiDomain } from '../utils/constants';\n\nconst api = {\n  url: new URL(`https://auth.${apiDomain}`),\n  endpoints: {\n    signup: 'signup',\n    signin: 'signin',\n    user: 'users/me',\n  },\n};\n\nclass Auth extends Api {\n  constructor(options) {\n    super(options);\n\n    this._authFormat = 'Bearer ';\n  }\n\n  register(email, password) {\n    return this._customFetch(api.endpoints.signup, 'POST', { password, email });\n  }\n\n  login(email, password) {\n    return this._customFetch(api.endpoints.signin, 'POST', { password, email });\n  }\n\n  getUserInfo() {\n    this._constructAuthorization();\n\n    return this._customFetch(api.endpoints.user).then(res => res.data);\n  }\n}\n\nexport default new Auth({\n  baseUrl: api.url.origin,\n});\n","import React from 'react';\n\nimport api from '../api/api';\n\nconst defaultUserState = {\n  name: 'Неизвестный',\n  about: 'Потеряно соединение с сервером',\n};\n\nconst CurrentUserContext = React.createContext();\nconst CurrentUserDispatchContext = React.createContext();\n\nfunction CurrentUserProvider({ state, dispatch, children }) {\n  return (\n    <CurrentUserContext.Provider value={state}>\n      <CurrentUserDispatchContext.Provider value={dispatch}>\n        {children}\n      </CurrentUserDispatchContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nfunction useCurrentUser() {\n  const context = React.useContext(CurrentUserContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUser must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction useCurrentUserDispatcher() {\n  const context = React.useContext(CurrentUserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUserDispatcher must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction objectsAreEqual(first, second) {\n  return JSON.stringify(first) === JSON.stringify(second);\n}\n\nasync function sendApiUpdate(dispatch, user, updates, func) {\n  const expectedUser = { ...user, ...updates };\n  dispatch(expectedUser);\n\n  try {\n    const updatedUser = await api[func](updates);\n    if (!objectsAreEqual(expectedUser, updatedUser)) {\n      dispatch(updatedUser);\n    }\n    return updatedUser;\n  } catch (error) {\n    dispatch(user);\n    console.log('Couldnt update user information on the server', error);\n    throw error; // Forwarding error\n  }\n}\n\nexport {\n  defaultUserState,\n  CurrentUserProvider,\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n};\n","const classToSelector = (className) => `.${className}`;\n\nexport const popupSelectors = {\n  closeButtonClass: 'popup__close-button',\n};\n\nexport const formClassesConfig = {\n  formClass: 'form',\n  inputClass: 'form__input',\n  inputErrorClass: 'form__input_type_error',\n  errorClass: 'form__error_visible',\n  submitButtonClass: 'form__button',\n};\n\nexport const defaultFormConfig = {\n  formSelector: classToSelector(formClassesConfig.formClass),\n  inputSelector: classToSelector(formClassesConfig.inputClass),\n  submitButtonSelector: classToSelector(formClassesConfig.submitButtonClass),\n  inputErrorClass: formClassesConfig.inputErrorClass,\n  errorClass: formClassesConfig.errorClass,\n};\n","import { memo, useCallback } from 'react';\n\nconst Form = memo(({ onSubmit, ...props }) => {\n  const handleSubmit = useCallback(\n    (e) => {\n      if (onSubmit) {\n        e.preventDefault();\n\n        onSubmit(e);\n      }\n    },\n    [onSubmit]\n  );\n\n  return (\n    <form action=\"#\" onSubmit={handleSubmit} {...props}>\n      {props.children}\n    </form>\n  );\n});\n\nexport default Form;\n","export const toClassNames = (arr) => arr.filter(Boolean).join(' ');\n\nexport const classNames = (arr) => ({ className: toClassNames(arr) });\n","import { forwardRef, createRef, useEffect } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\nimport { classNames } from '../utils/toClassNames';\n\nconst defaults = {\n  type: 'text',\n  required: true,\n  minLength: 2,\n};\n\nconst FormInput = forwardRef(({ isFocused, ...props }, forwardedRef) => {\n  const ref = forwardedRef ?? createRef();\n\n  const type = props.type ?? defaults.type;\n\n  const required = props.required ?? defaults.required;\n\n  const conditionalMinLength = type === defaults.type ? defaults.minLength : null;\n  const minLength = props.minLength ?? conditionalMinLength;\n\n  const finalProps = {\n    type,\n    minLength,\n    required,\n    ref,\n  };\n\n  useEffect(() => {\n    if (\n      isFocused &&\n      ref &&\n      ref.current &&\n      ref.current.parentElement !== document.activeElement.parentElement\n    ) {\n      setTimeout(() => {\n        ref && ref.current && ref.current.focus();\n      }, 50);\n    }\n  }, [isFocused, ref]);\n\n  return (\n    <>\n      <input\n        {...props}\n        {...classNames([formClassesConfig.inputClass, props.className])}\n        {...finalProps}\n      />\n      <p className=\"form__error\" id={`${props.id}-error`} />\n    </>\n  );\n});\n\nexport default FormInput;\n","import { memo } from 'react';\n\nimport { formClassesConfig } from '../utils/utils';\n\nimport Form from './Form';\nimport FormInput from './FormInput';\n\nconst propsForInputs = {\n  autoCorrect: 'off',\n  spellCheck: false,\n  className: `${formClassesConfig.inputClass}_theme_dark`,\n};\n\nconst inputNames = {\n  email: 'email',\n  password: 'password',\n};\n\nconst LoginOrRegister = memo((props) => {\n  const [email, setEmail] = props.states.email;\n  const [password, setPassword] = props.states.password;\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  function handleSubmit(e) {\n    props.handleSubmit(e, email, password);\n  }\n\n  function handleReset() {\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n    <div className=\"auth\">\n      <h2 className=\"auth__title\">{props.title}</h2>\n\n      <Form onSubmit={handleSubmit} onReset={handleReset} className={formClassesConfig.formClass}>\n        <FormInput\n          {...propsForInputs}\n          autoFocus\n          id={inputNames.email}\n          name={inputNames.email}\n          type={inputNames.email}\n          placeholder=\"Email\"\n          autoComplete={inputNames.email}\n          value={email}\n          onChange={handleEmailChange}\n        />\n        <FormInput\n          {...propsForInputs}\n          id={props.passwordAutocomplete}\n          name={inputNames.password}\n          type={inputNames.password}\n          placeholder=\"Пароль\"\n          autoComplete={props.passwordAutocomplete}\n          value={password}\n          onChange={handlePasswordChange}\n        />\n        <button\n          type=\"submit\"\n          className={`auth__button ${formClassesConfig.submitButtonClass} ${formClassesConfig.submitButtonClass}_theme_dark`}\n        >\n          {props.buttonTitle}\n        </button>\n      </Form>\n      {props.children}\n    </div>\n  );\n});\n\nexport default LoginOrRegister;\n","import { memo } from 'react';\n\nimport { pathNames } from '../utils/constants';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'current-password',\n  title: pathNames.login.title,\n  buttonTitle: pathNames.login.action,\n};\n\nconst Login = memo((props) => <LoginOrRegister {...props} {...defaultProps} />);\n\nexport default Login;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\n\nimport LoginOrRegister from './LoginOrRegister';\n\nconst defaultProps = {\n  passwordAutocomplete: 'new-password',\n  title: pathNames.register.title,\n  buttonTitle: pathNames.register.action,\n};\n\nconst Register = memo((props) => (\n  <LoginOrRegister {...props} {...defaultProps}>\n    <div className=\"auth__signin\">\n      Уже зарегистрированы?{' '}\n      <Link to={paths.login} className=\"auth__login-link\">\n        {pathNames.login.action}\n      </Link>\n    </div>\n  </LoginOrRegister>\n));\n\nexport default Register;\n","import { memo, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nimport { parseFixedLocalBase64Value } from '../hooks/useStateWithBase64';\n\nimport Login from './Login';\nimport Register from './Register';\n\nconst Authentication = memo((props) => {\n  const states = {\n    email: useState(parseFixedLocalBase64Value('email') ?? ''),\n    password: useState(''),\n  };\n\n  return props.loggedIn ? (\n    <Redirect to={paths.main} />\n  ) : (\n    <>\n      <Route path={paths.login}>\n        <Login handleSubmit={props.handleLogin} states={states} />\n      </Route>\n      <Route path={paths.register}>\n        <Register handleSubmit={props.handleRegister} states={states} />\n      </Route>\n    </>\n  );\n});\n\nexport default Authentication;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useStateWithLocalStorage from './useStateWithLocalStorage';\n\nexport const parseFixedLocalBase64Value = (elementName) =>\n  localStorage[elementName] && atob(JSON.parse(localStorage[elementName]));\n\nexport default function useStateWithBase64(computed, defaultForComputed) {\n  const [initialState, updateState] = useStateWithLocalStorage(computed, defaultForComputed);\n\n  const setState = useCallback(\n    (value) => {\n      updateState(btoa(value));\n    },\n    [updateState]\n  );\n\n  const state = useRef(atob(initialState));\n\n  useEffect(() => {\n    state.current = atob(initialState);\n  });\n\n  return [state.current, setState];\n}\n","import { Route, Redirect } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\n\nconst ProtectedRoute = (props) => (\n  <Route>{props.loggedIn ? props.children : <Redirect to={paths.login} />}</Route>\n);\nexport default ProtectedRoute;\n","import { repository } from '../../package.json';\n\nconst repoSeparator = '.';\n\nconst repoSplit = repository.url.split(repoSeparator);\nrepoSplit.pop();\n\nconst repoJoined = repoSplit.join(repoSeparator);\n\nexport const repo = repoJoined.split('+')[1];\n","import { memo, useMemo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Card from './Card';\n\nconst MAXIMUM_CARDS_QUANTITY = 30;\n\nconst defaultCard = {\n  isTemporarilyLocal: true,\n  name: 'Загрузка...',\n};\n\nconst defaultCards = [];\nfor (let i = 0; i < MAXIMUM_CARDS_QUANTITY; i++) {\n  defaultCards.push(defaultCard);\n}\n\nconst Main = memo(props => {\n  const currentUser = useCurrentUser();\n\n  const cards = useMemo(() => (props.cards.length ? props.cards : defaultCards), [props.cards]);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n          <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar} />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__description\">{currentUser.about}</p>\n          <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n        </div>\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {cards.map(card => (\n            <Card\n              key={card._id ?? Math.random()}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              card={card}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n});\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { paths, pathNames } from '../utils/constants';\nimport { repo } from '../utils/pkg';\nimport { classNames } from '../utils/toClassNames';\n\nimport logo from '../images/logo.svg';\n\nconst Header = memo(({ loggedIn, ...props }) => {\n  const location = useLocation();\n\n  let buttonTitle;\n  let buttonLink = paths.login;\n\n  switch (location.pathname) {\n    case paths.login:\n      buttonTitle = pathNames.register.title;\n      buttonLink = paths.register;\n      break;\n\n    case paths.register:\n      buttonTitle = pathNames.login.action;\n      break;\n\n    default:\n      buttonTitle = pathNames.quit.action;\n      break;\n  }\n\n  return (\n    <header className=\"header\">\n      <a target=\"_self\" href={repo} className=\"logo header__logo\">\n        <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n      </a>\n      <div className=\"header__container\">\n        {loggedIn && props.credential && <p className=\"header__credential\">{props.credential}</p>}\n        <Link\n          to={buttonLink}\n          onClick={loggedIn ? props.onSignOut : null}\n          {...classNames(['header__action-button', loggedIn && 'header__action-button_dimmed'])}\n        >\n          {buttonTitle}\n        </Link>\n      </div>\n    </header>\n  );\n});\n\nexport default Header;\n","import { memo } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst Card = memo(({ card, ...props }) => {\n  card.likes = card.likes ?? [];\n\n  const currentUser = useCurrentUser();\n\n  if (card.isTemporarilyLocal) {\n    card.owner = currentUser;\n  }\n\n  const isOwn = card.owner._id === currentUser._id;\n\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  function handleImageClick() {\n    props.onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"element\">\n      <img onClick={handleImageClick} className=\"element__image\" alt={card.name} src={card.link} />\n      {isOwn && (\n        <button onClick={handleDeleteClick} type=\"reset\" className=\"element__trash-button\" />\n      )}\n      <div className=\"element__container\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <input\n            checked={isLiked}\n            type=\"checkbox\"\n            onClick={handleLikeClick}\n            className=\"element__like-button\"\n          />\n          <p className=\"element__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n});\n\nexport default Card;\n","import { memo } from 'react';\n\nimport { author } from '../../package.json';\n\nimport { repo } from '../utils/pkg';\n\nconst linkSeparator = '/';\n\nconst repoSplitted = repo.split(linkSeparator);\nrepoSplitted.pop();\n\nconst copyrightLink = repoSplitted.join(linkSeparator);\n\nconst yearOfBuild = new Date().getFullYear();\n\nconst Footer = memo(() => (\n  <footer className=\"footer\">\n    <a target=\"_blank\" rel=\"noreferrer\" href={copyrightLink} className=\"footer__copyright\">\n      &copy; {yearOfBuild} {author}\n    </a>\n  </footer>\n));\n\nexport default Footer;\n","export default class FormValidator {\n  constructor(data, element) {\n    this._data = data;\n    this._element = element;\n\n    this._inputList = Array.from(this._element.querySelectorAll(this._data.inputSelector));\n\n    this._buttonElement = this._element.querySelector(this._data.submitButtonSelector);\n  }\n\n  enableValidation() {\n    this._toggleButtonState();\n\n    this._setListeners();\n  }\n\n  _showInputError = (inputElement, errorMessage) => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.add(this._data.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._data.errorClass);\n  };\n\n  _hideInputError = inputElement => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(this._data.inputErrorClass);\n    errorElement.classList.remove(this._data.errorClass);\n    errorElement.textContent = '';\n  };\n\n  _resetFormErrors = () => {\n    this._inputList.forEach(inputElement => this._hideInputError(inputElement));\n    this._toggleButtonState(1);\n  };\n\n  _checkInputValidity = inputElement =>\n    inputElement.validity.valid\n      ? this._hideInputError(inputElement)\n      : this._showInputError(inputElement, inputElement.validationMessage);\n\n  _hasInvalidInput = inputList => inputList.some(inputElement => !inputElement.validity.valid);\n\n  _toggleButtonState = disable =>\n    (this._buttonElement.disabled = disable || this._hasInvalidInput(this._inputList));\n\n  _validationHandler = inputElement => {\n    this._checkInputValidity(inputElement);\n\n    this._toggleButtonState();\n  };\n\n  _setListeners = () => {\n    this._element.addEventListener('reset', this._resetFormErrors);\n\n    this._inputList.forEach(inputElement => {\n      if (inputElement.value) {\n        this._validationHandler(inputElement);\n      }\n      inputElement.addEventListener('input', () => this._validationHandler(inputElement));\n    });\n  };\n}\n","import { useState, useEffect, memo } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { classNames } from '../utils/toClassNames';\n\nconst POPUP_ANIMATION_DURATION = 250;\n\nconst defaults = {\n  className: 'popup',\n  classNameClosed: '',\n  isOpened: false,\n};\ndefaults.classNameOpened = `${defaults.className}_opened`;\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Popup = memo(({ isOpen, ...props }) => {\n  const [classNameForAnimation, setClassNameForAnimation] = useState(defaults.classNameClosed);\n  const [shouldAppearInDOM, setShouldAppearInDOM] = useState(defaults.isOpened);\n\n  useEffect(() => {\n    if (!isOpen) {\n      document.activeElement.blur(); // fixes mobile keyboard being stuck on the screen after form submission (due to `event.preventDefault()`)\n    }\n\n    if (isOpen) {\n      setShouldAppearInDOM(!defaults.isOpened);\n      const showingTimout = setTimeout(() => {\n        setClassNameForAnimation(defaults.classNameOpened);\n      }, 10);\n\n      return () => clearTimeout(showingTimout);\n    } else {\n      setClassNameForAnimation(defaults.classNameClosed);\n      const hidingTimeout = setTimeout(() => {\n        setShouldAppearInDOM(defaults.isOpened);\n      }, POPUP_ANIMATION_DURATION);\n\n      return () => clearTimeout(hidingTimeout);\n    }\n  }, [isOpen]);\n\n  if (!shouldAppearInDOM) {\n    return null;\n  }\n\n  const popupClassNames = [defaults.className, props.className, classNameForAnimation];\n\n  return createPortal(\n    <section\n      onClick={props.onClick}\n      style={{ transitionDuration: `${POPUP_ANIMATION_DURATION}ms` }}\n      {...classNames(popupClassNames)}\n      id={props.id}\n    >\n      {props.children}\n    </section>,\n    modalRoot\n  );\n});\n\nexport default Popup;\n","import { memo, useCallback, useEffect, useState } from 'react';\n\nimport { popupSelectors, formClassesConfig } from '../utils/utils';\nimport enableValidation from '../utils/enableValidation';\nimport { defaultFormConfig } from '../utils/utils';\n\nimport Popup from './Popup';\nimport Form from './Form';\n\nconst defaultButtonTitle = 'Сохранить';\nconst defaultSavingButtonTitle = 'Сохранение...';\n\nconst PopupWithForm = memo(({ onSubmit, children, onReset, ...props }) => {\n  const [buttonIsSaving, setButtonIsSaving] = useState(false);\n\n  const buttonTitle = buttonIsSaving\n    ? defaultSavingButtonTitle\n    : props.buttonTitle ?? defaultButtonTitle;\n\n  const handleSubmit = useCallback(\n    (e) => {\n      setButtonIsSaving(true);\n\n      onSubmit &&\n        onSubmit(e)\n          .then((res) => {\n            if (children) {\n              e.target.reset();\n              onReset && onReset(e);\n            }\n            return res;\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n          .finally(() => {\n            setButtonIsSaving(false);\n          });\n    },\n    [children, onReset, onSubmit]\n  );\n\n  const popupId = props.name;\n\n  useEffect(() => {\n    // Prevent non-reactive validation from getting destroyed by conditional rendering\n    if (props.isOpen) {\n      const validationTimeout = setTimeout(() => {\n        enableValidation(\n          document.getElementById(popupId).querySelector(defaultFormConfig.formSelector)\n        );\n      }, 1);\n\n      return () => clearTimeout(validationTimeout);\n    }\n  }, [popupId, props.isOpen]);\n\n  return (\n    <Popup isOpen={props.isOpen} onClick={props.onClose} id={popupId}>\n      <div className=\"popup__container\">\n        <button type=\"reset\" className={popupSelectors.closeButtonClass} />\n        <h2 className=\"popup__title\">{props.title}</h2>\n\n        <Form className={formClassesConfig.formClass} onSubmit={handleSubmit} onReset={onReset}>\n          {children}\n          <button type=\"submit\" className={`popup__button ${formClassesConfig.submitButtonClass}`}>\n            {buttonTitle}\n          </button>\n        </Form>\n      </div>\n    </Popup>\n  );\n});\n\nexport default PopupWithForm;\n","import FormValidator from './FormValidator';\nimport { defaultFormConfig } from './utils';\n\nexport default function enableValidation(formElement) {\n  const profileEditorValidator = new FormValidator(defaultFormConfig, formElement);\n  profileEditorValidator.enableValidation();\n}\n","import { useState, useEffect, memo } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst EditProfilePopup = memo((props) => {\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      setName(currentUser.name);\n      setAbout(currentUser.about);\n    }\n  }, [currentUser, props.isOpen]);\n\n  function handleSubmit() {\n    return sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        name,\n        about,\n      },\n      'editProfile'\n    ).then((res) => {\n      props.onUpdateUser();\n      return res;\n    });\n  }\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleAboutChange(e) {\n    setAbout(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Редактировать профиль\"\n      name=\"profile-editor\"\n    >\n      <FormInput\n        isFocused={props.isOpen}\n        value={name}\n        onChange={handleNameChange}\n        autoComplete=\"name\"\n        autoCapitalize=\"words\"\n        name=\"name\"\n        id=\"profile-name\"\n        placeholder=\"Имя\"\n        maxLength=\"40\"\n      />\n\n      <FormInput\n        value={about}\n        onChange={handleAboutChange}\n        name=\"about\"\n        id=\"profile-about\"\n        placeholder=\"О себе\"\n        maxLength=\"200\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditProfilePopup;\n","import { memo, useRef } from 'react';\n\nimport {\n  useCurrentUser,\n  useCurrentUserDispatcher,\n  sendApiUpdate,\n} from '../contexts/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst EditAvatarPopup = memo((props) => {\n  const ref = useRef();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  function handleSubmit() {\n    return sendApiUpdate(\n      setCurrentUser,\n      currentUser,\n      {\n        avatar: ref.current.value,\n      },\n      'updateAvatar'\n    ).then((res) => {\n      props.onUpdateAvatar();\n      return res;\n    });\n  }\n\n  return (\n    <PopupWithForm {...props} onSubmit={handleSubmit} title=\"Обновить аватар\" name=\"avatar-editor\">\n      <FormInput\n        isFocused={props.isOpen}\n        ref={ref}\n        type=\"url\"\n        name=\"avatar\"\n        id=\"profile-avatar\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default EditAvatarPopup;\n","import { memo, useState } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nconst defaults = {\n  title: '',\n  link: '',\n};\n\nconst AddPlacePopup = memo((props) => {\n  const [title, setTitle] = useState(defaults.title);\n  const [link, setLink] = useState(defaults.link);\n\n  function handleSubmit() {\n    return props.onAddPlace(title, link);\n  }\n\n  function handleReset() {\n    setTitle(defaults.title);\n    setLink(defaults.link);\n  }\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      title=\"Новое место\"\n      name=\"element-editor\"\n      buttonTitle=\"Создать\"\n    >\n      <FormInput\n        isFocused={props.isOpen}\n        value={title}\n        onChange={handleTitleChange}\n        name=\"title\"\n        id=\"element-title\"\n        placeholder=\"Название\"\n        maxLength=\"30\"\n      />\n\n      <FormInput\n        value={link}\n        onChange={handleLinkChange}\n        type=\"url\"\n        name=\"link\"\n        id=\"element-link\"\n        placeholder=\"Ссылка на картинку\"\n      />\n    </PopupWithForm>\n  );\n});\n\nexport default AddPlacePopup;\n","import { memo } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = memo((props) => {\n  function handleSubmit() {\n    return props.onCardDelete(props.card);\n  }\n\n  return (\n    <PopupWithForm\n      {...props}\n      onSubmit={handleSubmit}\n      title=\"Вы уверены?\"\n      name=\"delete-confirmation\"\n      buttonTitle=\"Да\"\n    />\n  );\n});\n\nexport default ConfirmDeletePopup;\n","import { memo } from 'react';\n\nimport { popupSelectors } from '../utils/utils';\nimport { classNames } from '../utils/toClassNames';\n\nimport Popup from './Popup';\n\nconst buttonClassNames = [\n  popupSelectors.closeButtonClass,\n  `${popupSelectors.closeButtonClass}_parent-corners_straight`,\n];\n\nconst ImagePopup = memo(({ card, ...props }) => (\n  <Popup\n    isOpen={props.isOpen}\n    onClick={props.onClose}\n    className=\"popup_type_image\"\n    id=\"image-viewer\"\n  >\n    <figure className=\"popup__figure\">\n      <button type=\"button\" {...classNames(buttonClassNames)} />\n      <img className=\"popup__image\" alt={card.name} src={card.link} />\n      <figcaption className=\"popup__caption\">{card.name}</figcaption>\n    </figure>\n  </Popup>\n));\n\nexport default ImagePopup;\n","export default __webpack_public_path__ + \"static/media/check.5221857e.svg\";","export default __webpack_public_path__ + \"static/media/cross.173b3897.svg\";","import { memo } from 'react';\n\nimport checkIcon from '../images/check.svg';\nimport crossIcon from '../images/cross.svg';\n\nimport { popupSelectors } from '../utils/utils';\n\nimport Popup from './Popup';\n\nconst backgroundImageUrl = (url) => ({ backgroundImage: `url(${url})` });\n\nconst InfoTooltip = memo(({ isSuccess, ...props }) => {\n  return (\n    <Popup isOpen={props.isOpen} onClick={props.onClose}>\n      <div className=\"popup__container\">\n        <button type=\"button\" className={popupSelectors.closeButtonClass} />\n\n        <div className=\"info-tooltip\">\n          <div\n            className=\"info-tooltip__icon\"\n            style={backgroundImageUrl(isSuccess ? checkIcon : crossIcon)}\n          />\n          <h3 className=\"info-tooltip__title\">\n            {isSuccess\n              ? 'Вы успешно зарегистрировались!'\n              : 'Что-то пошло не так! Попробуйте ещё раз.'}\n          </h3>\n        </div>\n      </div>\n    </Popup>\n  );\n});\n\nexport default InfoTooltip;\n","import React from 'react';\n\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { paths } from '../utils/constants';\nimport scrollToTop from '../utils/scrollToTop';\n\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\nimport useStateWithBase64 from '../hooks/useStateWithBase64';\nimport useEscapeHandler from '../hooks/useEscapeHandler';\n\nimport api from '../api/api';\nimport auth from '../api/auth';\n\nimport { CurrentUserProvider, defaultUserState } from '../contexts/CurrentUserContext';\n\nimport Authentication from './Authentication';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\n\nfunction App() {\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = useStateWithLocalStorage('currentUser', defaultUserState);\n\n  const [loggedIn, setLoggedIn] = useStateWithLocalStorage('loggedIn', false);\n  const [email, setEmail] = useStateWithBase64('email', '');\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n\n  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [cards, setCards] = useStateWithLocalStorage('cards', []);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then(setCurrentUser)\n      .catch((err) => console.log('Couldnt get user info from the server', err));\n  }, [setCurrentUser]);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then(setCards)\n      .catch((err) => console.log('Couldnt get initial cards from the server', err));\n  }, [setCards]);\n\n  async function handleCardLike(card) {\n    const oldCards = cards;\n\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    const expectedCardLikes = isLiked\n      ? card.likes.filter((like) => like._id !== currentUser._id)\n      : [...card.likes, currentUser];\n\n    const expectedCard = { ...card, likes: expectedCardLikes };\n\n    setCards(cards.map((c) => (c._id === card._id ? expectedCard : c)));\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n      setCards(cards.map((c) => (c._id === card._id ? newCard : c)));\n      return newCard;\n    } catch (error) {\n      setCards(oldCards);\n      console.error(error);\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsInfoTooltipOpen(false);\n  }\n\n  const handleCardDelete = React.useCallback(\n    (card) => {\n      const oldCards = cards;\n\n      setCards(cards.filter((c) => c._id !== card._id));\n\n      closeAllPopups();\n\n      return api.deleteCard(card._id).catch((error) => {\n        setCards(oldCards);\n        console.log('Couldnt delete card on the server', error);\n      });\n    },\n    [cards, setCards]\n  );\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmDeleteClick(card) {\n    setSelectedCard(card);\n\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n\n    setIsImagePopupOpen(true);\n  }\n\n  const handlePopupClick = React.useCallback((e) => {\n    if (e.target === e.currentTarget) {\n      closeAllPopups();\n    }\n  }, []);\n\n  const handleUpdateUser = closeAllPopups;\n  const handleUpdateAvatar = closeAllPopups;\n\n  function handleAddPlaceSubmit(title, link) {\n    const oldCards = cards;\n\n    const expectedCard = {\n      isTemporarilyLocal: true,\n      name: title,\n      link,\n    };\n\n    setCards([expectedCard, ...cards]);\n\n    closeAllPopups();\n\n    return api\n      .addCard(title, link)\n      .then((newCard) => setCards([newCard, ...cards]))\n      .catch((err) => {\n        setCards(oldCards);\n        throw err; // Forwarding error to PopupWithForm\n      });\n  }\n\n  useEscapeHandler(closeAllPopups);\n\n  const handleLogin = React.useCallback(\n    (email) => {\n      setEmail(email);\n      setLoggedIn(true);\n    },\n    [setEmail, setLoggedIn]\n  );\n\n  const handleTokenCheck = React.useCallback(() => {\n    if (localStorage.token) {\n      auth.token = localStorage.token;\n      auth\n        .getUserInfo()\n        .then((res) => {\n          if (res) {\n            handleLogin(res.email);\n            history.replace(paths.main);\n          }\n        })\n        .catch((err) => {\n          setLoggedIn(false);\n\n          console.log(err);\n        });\n    }\n  }, [handleLogin, history, setLoggedIn]);\n\n  function handleSubmitRegister(e_, email, password) {\n    return auth\n      .register(email, password)\n      .then(() => {\n        history.replace(paths.login);\n        setIsInfoTooltipSuccess(true);\n      })\n      .catch((err) => {\n        setIsInfoTooltipSuccess(false);\n        console.log(err);\n      })\n      .finally(() => {\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleSubmitLogin(e, email, password) {\n    if (!email || !password) {\n      return;\n    }\n\n    return auth\n      .login(email, password)\n      .then((data) => {\n        if (data.token) {\n          e.target.reset();\n\n          localStorage.token = data.token;\n\n          handleLogin(email);\n          history.push(paths.main);\n        }\n      })\n      .catch((err) => {\n        setIsInfoTooltipOpen(true);\n        console.log(err);\n      });\n  }\n\n  function handleSignOut() {\n    delete localStorage.token;\n    setLoggedIn(false);\n    history.replace(paths.login);\n    scrollToTop();\n  }\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, [handleTokenCheck]);\n\n  return (\n    <CurrentUserProvider state={currentUser} dispatch={setCurrentUser}>\n      <Header credential={email} onSignOut={handleSignOut} loggedIn={loggedIn} />\n\n      <Switch>\n        <Route path={[paths.register, paths.login]}>\n          <Authentication\n            loggedIn={loggedIn}\n            handleLogin={handleSubmitLogin}\n            handleRegister={handleSubmitRegister}\n          />\n\n          <InfoTooltip\n            isOpen={isInfoTooltipOpen}\n            isSuccess={isInfoTooltipSuccess}\n            onClose={handlePopupClick}\n          />\n        </Route>\n\n        <ProtectedRoute path={paths.main} loggedIn={loggedIn}>\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDeleteClick}\n          />\n\n          <EditProfilePopup\n            onUpdateUser={handleUpdateUser}\n            isOpen={isEditProfilePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <AddPlacePopup\n            onAddPlace={handleAddPlaceSubmit}\n            isOpen={isAddPlacePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdateAvatar}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={handlePopupClick}\n          />\n          <ConfirmDeletePopup\n            card={selectedCard}\n            onCardDelete={handleCardDelete}\n            isOpen={isConfirmDeletePopupOpen}\n            onClose={handlePopupClick}\n          />\n          <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={handlePopupClick} />\n        </ProtectedRoute>\n      </Switch>\n\n      <Footer />\n    </CurrentUserProvider>\n  );\n}\n\nexport default App;\n","import { useCallback, useEffect } from 'react';\n\nexport default function useEscapeHandler(dispatch) {\n  const escHandler = useCallback(\n    e => {\n      if (e.key === 'Escape') {\n        dispatch();\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    const listenerArgs = ['keydown', escHandler, false];\n\n    document.addEventListener(...listenerArgs);\n\n    return () => document.removeEventListener(...listenerArgs);\n  }, [escHandler]);\n}\n","export default function scrollToTop() {\n  window.scrollTo(0, 0);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}